{"meta":{"title":"PaicHyperionDev","subtitle":null,"description":null,"author":"PaicHyperion","url":"http://PaicHyperion.gitcafe.io"},"posts":[{"title":"平安科技移动开发二队技术周报 第二十七期","slug":"027","date":"2015-11-27T00:00:00.000Z","updated":"2015-11-21T08:44:29.000Z","comments":true,"path":"2015/11/27/027/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/11/27/027/","excerpt":"","text":"Android开发1）Android App 线上热修复方案本文主要介绍天猫淘宝的Android App 线上热修复方案。在业界中，热修复方案，棘手且重要。有时它可以避免发新版，避免无谓时间的浪费，稳住迭代节奏；有时它可以救项目于水深火热之中；有时它也可以带给用户展现上的惊喜。其技术较深且要抵抗更深技术的侵入。 2）React Native For Android の 修改React Native为本地依赖公司的网络可能由于防火墙等原因，使用Gradle在线依赖去下载React Native（以下简称RN）的aar包可能一天都下载不下来，而在使用家中的Wi-Fi就几分钟的事😓，当然目前还没法实现家中办公，而且如果让团队内其他同事也都每次等一天才下载下来，效率将是极其低下的。因此，只能将RN的aar包下载下来，并设置为本地依赖模式，同时引入RN依赖的第三方开源库。 3）Android快捷方式解密Android快捷方式作为Android设备的杀手锏技能，一直都是非常重要的一个功能，也正是如此，各种流氓App也不断通过快捷方式霸占着这样一个用户入口。同时，各大国产ROM和Luncher的崛起，让这个桌面之争变的更加激烈。毕竟大家都只想用户用自己的App资源，所以，现在各大App不仅仅是要抢占入口，同时还要和各大ROM斗智斗勇。本文将对这个快捷方式进行深度解密，同时给出App适配各种ROM的整合方案。 4）Android 热补丁动态修复框架小结最新github上开源了很多热补丁动态修复框架，大致有： HotFix Nuwa DroidFix 本文是对相关原理的介绍。 5）关于Android中图片大小、内存占用与drawable文件夹关系的研究与分析从上一篇文章《Android屏幕适配全攻略》写完之后，经常会有朋友问我这个问题：“能不能一个App只提供一套切图适应所有的分辨率呢？”我觉得有必要写一篇文章来研究一下这个问题，所以就有了这篇文章。 iOS开发1）iOS/OS X内存管理(二)：借助工具解决内存问题上一篇博客iOS/OS X内存管理(一)：基本概念与原理主要讲了iOS/OSX 内存管理中引用计数和内存管理规则，以及引入ARC新的内存管理机制之后如何选择ownership qualifiers(strong、weak、unsafe_unretained和autoreleasing)来管理内存。这篇我们主要关注在实际开发中会遇到哪些内存管理问题，以及如何使用工具来调试和解决。 2）iOS 中的 promise 模式异步编程 App 开发中用得非常频繁，但异步请求后的操作却比较麻烦。Promise 就是解决这一问题的编程模型。其适用于 延迟(deferred) 计算和 异步(asynchronous) 计算。一个 Promise 对象代表着一个还未完成，但预期将来会完成的操作。它并非要替代 GCD 和 NSOperation，而是与它们一起合作。 3）Facebook 如何降低应用中的 FOOMs在 Facebook，我们一直致力于让应用稳定、快速、可靠。在 Facebook 的 iOS 应用上，我们已经做了很多工作去减少应用的崩溃率以及全面提高应用的稳定性。此前，大多数的崩溃都是由于常规性错误，一般都会伴随着相应代码行的栈回溯信息，并且提供了可能导致问题所在的提示信息。 4）专访ThoughtWorks傅若愚：Swift足够成熟了吗？ThoughtWorks的工程师、SwiftyJSON开源项目作者傅若愚将在2016年1月10日举行的Swift开发者大会上分享《越过Objective-C与Swift的鸿沟》话题，据了解，他们已经使用Swift开发商业应用近一年时间，InfoQ记者对他进行了专访，探讨Swift是否已经足够成熟的问题。 5）iOS 保持界面流畅的技巧这篇文章会非常详细的分析 iOS 界面构建中的各种性能问题以及对应的解决思路，同时给出一个开源的微博列表实现，通过实际的代码展示如何构建流畅的交互。 技术纵横1）阿里无线总监南天硅谷谈手淘技术架构演进细节阿里无线事业部资深技术总监庄卓然（花名：南天）、阿里无线高级技术专家徐昭（花名：长恭） 在QCon全球软件开发大会旧金山站发表演讲《ALIBABA MOBILE INFRASTRUCTURE AT “CHINA SCALE”》，揭秘手机淘宝这个超级App的技术架构演进，向世界的技术同行分享中国互联网在无线领域的技术发展。 2）React 源码剖析系列 － 不可思议的 react diffReact diff 作为 Virtual DOM 的加速器，其算法上的改进优化是 React 整个界面渲染的基础，以及性能提高的保障，同时也是 React 源码中最神秘、最不可思议的部分，本文从源码入手，深入剖析 React diff 的不可思议之处。 3）你为什么应该试一试Reflux？React在设计之初就只关注在View本身上，其余部分如数据的获取，事件处理等，全然不在考虑之内。不过构建大型的Web前端应用，这些点又实在不可避免。所以Facebook的工程师提出了前端的Flux架构，这个架构的最大特点是单向数据流（后面详述）。但是Flux本身的实现有很多不合理的地方，比如单例的Dispatcher会在系统中有多种事件时导致臃肿的switch-cases等。 4）走进前端开发系列 框架的演变 Bootstrap Vue.js 5）阿里Hybrid框架Weex相关介绍 对无线电商动态化方案的思考（一） 对无线电商动态化方案的思考（二） 对无线电商动态化方案的思考（三） 开源函数库与工具1）AndroidChangeSkin一种完全无侵入的换肤方式，支持插件式和应用内，无需重启Activity. 2）TreasureTreasure是一个Android平台上基于SharePreferences的偏好存储库，只需要定义接口，无需编写实现。运行时0反射，不仅使用方便而且性能和原生写法几乎无差别。","raw":"title: 平安科技移动开发二队技术周报 第二十七期\ncategories: weekly\ndate: 2015-11-27\n---\n\n## Android开发\n\n#### 1）[Android App 线上热修复方案](http://lirenlong.github.io/hotfix/)\n\n本文主要介绍天猫淘宝的Android App 线上热修复方案。在业界中，热修复方案，棘手且重要。有时它可以避免发新版，避免无谓时间的浪费，稳住迭代节奏；有时它可以救项目于水深火热之中；有时它也可以带给用户展现上的惊喜。其技术较深且要抵抗更深技术的侵入。\n\n#### 2）[React Native For Android の 修改React Native为本地依赖](http://www.jianshu.com/p/cca40c19faa0) \n\n公司的网络可能由于防火墙等原因，使用Gradle在线依赖去下载React Native（以下简称RN）的aar包可能一天都下载不下来，而在使用家中的Wi-Fi就几分钟的事😓，当然目前还没法实现家中办公，而且如果让团队内其他同事也都每次等一天才下载下来，效率将是极其低下的。因此，只能将RN的aar包下载下来，并设置为本地依赖模式，同时引入RN依赖的第三方开源库。\n\n#### 3）[Android快捷方式解密](http://www.jianshu.com/p/dc3d04337d00)\n\nAndroid快捷方式作为Android设备的杀手锏技能，一直都是非常重要的一个功能，也正是如此，各种流氓App也不断通过快捷方式霸占着这样一个用户入口。\n同时，各大国产ROM和Luncher的崛起，让这个桌面之争变的更加激烈。毕竟大家都只想用户用自己的App资源，所以，现在各大App不仅仅是要抢占入口，同时还要和各大ROM斗智斗勇。本文将对这个快捷方式进行深度解密，同时给出App适配各种ROM的整合方案。\n\n#### 4）[Android 热补丁动态修复框架小结](http://blog.csdn.net/lmj623565791/article/details/49883661)\n\n最新github上开源了很多热补丁动态修复框架，大致有：\n\n* [HotFix](https://github.com/dodola/HotFix)\n* [Nuwa](https://github.com/jasonross/Nuwa)\n* [DroidFix](https://github.com/bunnyblue/DroidFix)\n\n本文是对相关原理的介绍。\n\n#### 5）[关于Android中图片大小、内存占用与drawable文件夹关系的研究与分析](http://blog.csdn.net/zhaokaiqiang1992/article/details/49787117)\n\n从上一篇文章[《Android屏幕适配全攻略》](http://blog.csdn.net/zhaokaiqiang1992/article/details/45419023)写完之后，经常会有朋友问我这个问题：“能不能一个App只提供一套切图适应所有的分辨率呢？”我觉得有必要写一篇文章来研究一下这个问题，所以就有了这篇文章。\n\n## iOS开发\n\n#### 1）[iOS/OS X内存管理(二)：借助工具解决内存问题](http://www.jianshu.com/p/09c5141d4531)\n\n上一篇博客[iOS/OS X内存管理(一)：基本概念与原理](http://www.jianshu.com/p/1928b54e1253)主要讲了iOS/OSX 内存管理中引用计数和内存管理规则，以及引入ARC新的内存管理机制之后如何选择ownership qualifiers(__strong、__weak、__unsafe_unretained和__autoreleasing)来管理内存。这篇我们主要关注在实际开发中会遇到哪些内存管理问题，以及如何使用工具来调试和解决。\n\n#### 2）[iOS 中的 promise 模式](http://nathanli.cn/2015/11/15/ios-%E4%B8%AD%E7%9A%84-promise-%E6%A8%A1%E5%BC%8F/)\n\n异步编程 App 开发中用得非常频繁，但异步请求后的操作却比较麻烦。Promise 就是解决这一问题的编程模型。其适用于 延迟(deferred) 计算和 异步(asynchronous) 计算。一个 Promise 对象代表着一个还未完成，但预期将来会完成的操作。它并非要替代 GCD 和 NSOperation，而是与它们一起合作。\n\n#### 3）[Facebook 如何降低应用中的 FOOMs](http://ios.jobbole.com/82881/)\n\n在 Facebook，我们一直致力于让应用稳定、快速、可靠。在 Facebook 的 iOS 应用上，我们已经做了很多工作去减少应用的崩溃率以及全面提高应用的稳定性。此前，大多数的崩溃都是由于常规性错误，一般都会伴随着相应代码行的栈回溯信息，并且提供了可能导致问题所在的提示信息。\n\n#### 4）[专访ThoughtWorks傅若愚：Swift足够成熟了吗？](http://www.infoq.com/cn/news/2015/11/furuoyu-interview#0-tsina-1-51889-397232819ff9a47a7b7e80a40613cfe1)\n\nThoughtWorks的工程师、SwiftyJSON开源项目作者傅若愚将在2016年1月10日举行的Swift开发者大会上分享《越过Objective-C与Swift的鸿沟》话题，据了解，他们已经使用Swift开发商业应用近一年时间，InfoQ记者对他进行了专访，探讨Swift是否已经足够成熟的问题。\n\n#### 5）[iOS 保持界面流畅的技巧](http://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/)\n\n这篇文章会非常详细的分析 iOS 界面构建中的各种性能问题以及对应的解决思路，同时给出一个开源的微博列表实现，通过实际的代码展示如何构建流畅的交互。\n\n## 技术纵横\n\n#### 1）[阿里无线总监南天硅谷谈手淘技术架构演进细节](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=400995270&idx=1&sn=5b090490896f95b061a3ccd86baa3274&scene=0#wechat_redirect)\n\n阿里无线事业部资深技术总监庄卓然（花名：南天）、阿里无线高级技术专家徐昭（花名：长恭） 在QCon全球软件开发大会旧金山站发表演讲《ALIBABA MOBILE INFRASTRUCTURE AT \"CHINA SCALE\"》，揭秘手机淘宝这个超级App的技术架构演进，向世界的技术同行分享中国互联网在无线领域的技术发展。\n\n#### 2）[React 源码剖析系列 － 不可思议的 react diff](http://zhuanlan.zhihu.com/purerender/20346379)\n\nReact diff 作为 Virtual DOM 的加速器，其算法上的改进优化是 React 整个界面渲染的基础，以及性能提高的保障，同时也是 React 源码中最神秘、最不可思议的部分，本文从源码入手，深入剖析 React diff 的不可思议之处。\n\n#### 3）[你为什么应该试一试Reflux？](http://icodeit.org/2015/11/get-started-with-reflux/)\n\nReact在设计之初就只关注在View本身上，其余部分如数据的获取，事件处理等，全然不在考虑之内。不过构建大型的Web前端应用，这些点又实在不可避免。所以Facebook的工程师提出了前端的Flux架构，这个架构的最大特点是单向数据流（后面详述）。但是Flux本身的实现有很多不合理的地方，比如单例的Dispatcher会在系统中有多种事件时导致臃肿的switch-cases等。\n\n#### 4）走进前端开发系列\n\n* [框架的演变](http://mp.weixin.qq.com/s?__biz=MzAwMjMxNzQ0MQ==&mid=400374759&idx=1&sn=78830f8b92d7ae4f0f6d40aeee1ecd16&scene=21#wechat_redirect)\n* [Bootstrap](http://mp.weixin.qq.com/s?__biz=MzAwMjMxNzQ0MQ==&mid=400251821&idx=1&sn=fd15531f423fc5004f121e7724cacac4&scene=21#wechat_redirect)\n* [Vue.js](http://mp.weixin.qq.com/s?__biz=MzAwMjMxNzQ0MQ==&mid=400512217&idx=1&sn=ccd10f10315e29a22cd2b0f79f849cb2#rd)\n\n#### 5）阿里Hybrid框架Weex相关介绍\n\n* [对无线电商动态化方案的思考（一）](https://github.com/amfe/article/issues/13#issuecomment-157405564)\n* [对无线电商动态化方案的思考（二）](https://github.com/amfe/article/issues/14)\n* [对无线电商动态化方案的思考（三）](https://github.com/amfe/article/issues/15)\n\n## 开源函数库与工具\n\n#### 1）[AndroidChangeSkin](https://github.com/hongyangAndroid/AndroidChangeSkin)\n\n一种完全无侵入的换肤方式，支持插件式和应用内，无需重启Activity.\n\n#### 2）[Treasure](https://github.com/baoyongzhang/Treasure)\n\nTreasure是一个Android平台上基于SharePreferences的偏好存储库，只需要定义接口，无需编写实现。运行时0反射，不仅使用方便而且性能和原生写法几乎无差别。\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十六期","slug":"026","date":"2015-11-11T00:00:00.000Z","updated":"2015-11-21T08:33:10.000Z","comments":true,"path":"2015/11/11/026/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/11/11/026/","excerpt":"","text":"业界新闻1）如何评价蜻蜓 FM 伪造用户活跃度等数据？神一般的产品经理和程序员～ 2）如何评价Tensorflow和其它深度学习系统最近Google开源了新一代深度学习引擎TensorFlow。本文解释了一些TF里面我觉得可以从系统方面值得看的地方。 Android开发1）Android应用开发编译框架流程与IDE及Gradle概要在我们开发App时大多数时候的编译流程都是直接通过IDE的按钮或者命令行一步到位apk的生成，直观上的感觉好像源码到Apk的生成只有一步，实质不是这样的。从我们点击按钮那一刻到生成apk的过程实际是非常复杂的，涉及到很多步骤 2）用MVP架构开发Android应用在Android开发中，Activity并不是一个标准的MVC模式中的Controller，它的首要职责是加载应用的布局和初始化用户界面，并接受并处理来自用户的操作请求，进而作出响应。但是，随着界面及其逻辑的复杂度不断提升，Activity类的职责不断增加，以致很容易变得庞大而臃肿。使用MVP模式能够更方便的帮助Activity(或Fragment)职责分离，减小类体积，使项目结构更加清晰。 3）MVVM_Android-CleanArchitectureMVVM 也仅仅是架构模式（Architectural pattern），其有一套自己的理论概念（pattern）而不是规定的具体实现（或 Frameworks）。早之前在知乎上相关问题的回答（android UI设计MVVM设计模式讨论？）中也简单提到过 MVVM 了，M-V-X 的关系如上图，那么这一次博主把 Fernando Cejas(android10) 的 Android-CleanArchitecture 项目中的 MVP 实现重构成了用 MVVM 来实现。 4）Android打包的那些事使用gradle打包apk已经成为当前主流趋势，我也在这个过程中经历了各种需求，并不断结合gradle新的支持，一一改进。在此，把这些相关的东西记录，做一总结。 5）Android 开发中，有哪些坑需要注意？一线开发者经典总结。 iOS开发1）微信iOS 9适配总结每年iOS升级，都会带来一些坑，这次iOS9也不例外。本文总结了微信在适配iOS9上遇到的问题和解决方案。 2）超实用的IOS 9人机界面指南（1）：UI设计基础让人激动到手发抖的苹果官方人机指南中文版来了！腾讯ISUX整个团队的心血译作，整篇近2万字，10月21号刚发布，今天就出稿了，而且质量奇高，用词精确，语句晓畅。看再多零散的设计技巧，都不如直接看官方设计指南有效。作为UI设计师的必读教科书，这篇千万要收藏！ 3）关于 @synchronized，这儿比你想知道的还要多如果你已经使用 Objective-C 编写过任何并发程序，那么想必是见过 @synchronized 这货了。@synchronized 结构所做的事情跟锁（lock）类似：它防止不同的线程同时执行同一段代码。但在某些情况下，相比于使用 NSLock 创建锁对象、加锁和解锁来说，@synchronized 用着更方便，可读性更高。 4）What we learned from rewriting our robotic control software in SwiftAt the beginning of this year we started a complete rewrite of our robotics software from Objective-C to Swift, for reasons described here. That rewrite was concluded two months ago, passed testing a month ago, and has been deployed to all of our customers. As a result, I wanted to do a final analysis of the rewrite and what we learned from it. 5）The Swift Reflection API and what you can do with itEven though Swift stresses strong types, compile time safety, static dispatch it still offers a Reflection mechanism as part of the standard library. 技术纵横1）架构设计最佳实践与必备素养架构或架构师的话题一直在被人们所谈论，对于什么是架构？如何设计前后端分离的架构？如何设计高可用的架构？如何设计可伸缩的架构？什么又是架构师？架构师需要哪些品质？程序员应该如何修炼为架构师？ 2）使用Fetch API和ES6生成器构建异步APIECMAScript 6为JavaScript带来了大量的新特性，其中包括新增的Fetch API，它致力于取代作为当前远程资源通信基础的XMLHttpRequest。本文介绍了如何结合Fetch API和生成器来构建异步API。 3）浅谈Hybrid技术的设计与实现随着移动浪潮的兴起，各种APP层出不穷，极速的业务扩展提升了团队对开发效率的要求，这个时候使用IOS&amp;Andriod开发一个APP似乎成本有点过高了，而H5的低成本、高效率、跨平台等特性马上被利用起来形成了一种新的开发模式：Hybrid APP。作为一种混合开发的模式，Hybrid APP底层依赖于Native提供的容器（UIWebview），上层使用Html&amp;Css&amp;JS做业务开发，底层透明化、上层多多样化，这种场景非常有利于前端介入，非常适合业务快速迭代，于是Hybrid火啦。 4）给 JavaScript 初心者的 ES2015 实战历时将近6年的时间来制定的新 ECMAScript 标准 ECMAScript 6（亦称 ECMAScript Harmony，简称 ES6）终于在 2015 年 6 月正式发布。自从上一个标准版本 ES5 在 2009 年发布以后，ES6 就一直以新语法、新特性的优越性吸引著众多 JavaScript 开发者，驱使他们积极尝鲜。 5）Java应用一般架构当我们架设一个系统的时候通常需要考虑到如何与其他系统交互，所以我们首先需要知道各种系统之间是如何交互的，使用何种技术实现。 开源函数库与工具1）DoubanMovie-React-NativeReact Native实现的豆瓣电影客户端。","raw":"title: 平安科技移动开发二队技术周报 第二十六期\ncategories: weekly\ndate: 2015-11-11\n---\n\n##业界新闻\n\n#### 1）[如何评价蜻蜓 FM 伪造用户活跃度等数据？](http://www.zhihu.com/question/37248269)\n\n神一般的产品经理和程序员～\n\n#### 2）[如何评价Tensorflow和其它深度学习系统](http://weibo.com/p/1001603907610737775666)\n\n最近Google开源了新一代深度学习引擎TensorFlow。本文解释了一些TF里面我觉得可以从系统方面值得看的地方。\n\n\n## Android开发\n\n#### 1）[Android应用开发编译框架流程与IDE及Gradle概要](http://blog.csdn.net/yanbober/article/details/49408489)\n\n在我们开发App时大多数时候的编译流程都是直接通过IDE的按钮或者命令行一步到位apk的生成，直观上的感觉好像源码到Apk的生成只有一步，实质不是这样的。从我们点击按钮那一刻到生成apk的过程实际是非常复杂的，涉及到很多步骤\n\n#### 2）[用MVP架构开发Android应用](http://www.kymjs.com/code/2015/11/09/01/)\n\n在Android开发中，Activity并不是一个标准的MVC模式中的Controller，它的首要职责是加载应用的布局和初始化用户界面，并接受并处理来自用户的操作请求，进而作出响应。但是，随着界面及其逻辑的复杂度不断提升，Activity类的职责不断增加，以致很容易变得庞大而臃肿。使用MVP模式能够更方便的帮助Activity(或Fragment)职责分离，减小类体积，使项目结构更加清晰。\n\n#### 3）[MVVM_Android-CleanArchitecture](http://rocko.xyz/2015/11/07/MVVM_Android-CleanArchitecture/)\n\nMVVM 也仅仅是架构模式（Architectural pattern），其有一套自己的理论概念（pattern）而不是规定的具体实现（或 Frameworks）。早之前在知乎上相关问题的回答（android UI设计MVVM设计模式讨论？）中也简单提到过 MVVM 了，M-V-X 的关系如上图，那么这一次博主把 Fernando Cejas(android10) 的 Android-CleanArchitecture 项目中的 MVP 实现重构成了用 MVVM 来实现。\n\n#### 4）[Android打包的那些事](http://www.jayfeng.com/2015/11/07/Android%E6%89%93%E5%8C%85%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/)\n\n使用gradle打包apk已经成为当前主流趋势，我也在这个过程中经历了各种需求，并不断结合gradle新的支持，一一改进。在此，把这些相关的东西记录，做一总结。\n\n#### 5）[Android 开发中，有哪些坑需要注意？](http://www.zhihu.com/question/27818921/answer/70279930)\n\n一线开发者经典总结。\n\n## iOS开发\n\n#### 1）[微信iOS 9适配总结](http://www.infoq.com/cn/articles/wechat-ios9-adaptation)\n\n每年iOS升级，都会带来一些坑，这次iOS9也不例外。本文总结了微信在适配iOS9上遇到的问题和解决方案。\n\n#### 2）[超实用的IOS 9人机界面指南（1）：UI设计基础](http://www.uisdc.com/ios9-interface-guideline-ui)\n\n让人激动到手发抖的苹果官方人机指南中文版来了！腾讯ISUX整个团队的心血译作，整篇近2万字，10月21号刚发布，今天就出稿了，而且质量奇高，用词精确，语句晓畅。看再多零散的设计技巧，都不如直接看官方设计指南有效。作为UI设计师的必读教科书，这篇千万要收藏！\n\n#### 3）[关于 @synchronized，这儿比你想知道的还要多](http://yulingtianxia.com/blog/2015/11/01/More-than-you-want-to-know-about-synchronized/)\n\n如果你已经使用 Objective-C 编写过任何并发程序，那么想必是见过 @synchronized 这货了。@synchronized 结构所做的事情跟锁（lock）类似：它防止不同的线程同时执行同一段代码。但在某些情况下，相比于使用 NSLock 创建锁对象、加锁和解锁来说，@synchronized 用着更方便，可读性更高。\n\n#### 4）[What we learned from rewriting our robotic control software in Swift](http://www.sunsetlakesoftware.com/2015/11/03/what-we-learned-rewriting-our-robotic-control-software-swift)\n\nAt the beginning of this year we started a complete rewrite of our robotics software from Objective-C to Swift, for reasons described here. That rewrite was concluded two months ago, passed testing a month ago, and has been deployed to all of our customers. As a result, I wanted to do a final analysis of the rewrite and what we learned from it.\n\n#### 5）[The Swift Reflection API and what you can do with it](http://appventure.me/2015/10/24/swift-reflection-api-what-you-can-do/)\n\nEven though Swift stresses strong types, compile time safety, static dispatch it still offers a Reflection mechanism as part of the standard library. \n\n\n## 技术纵横\n\n#### 1）[架构设计最佳实践与必备素养](http://special.csdncms.csdn.net/architecture/)\n\n架构或架构师的话题一直在被人们所谈论，对于什么是架构？如何设计前后端分离的架构？如何设计高可用的架构？如何设计可伸缩的架构？什么又是架构师？架构师需要哪些品质？程序员应该如何修炼为架构师？\n\n#### 2）[使用Fetch API和ES6生成器构建异步API](http://www.csdn.net/article/2015-10-28/2826063-asynchronous-apis-using-fetch-api-es6-generators)\n\nECMAScript 6为JavaScript带来了大量的新特性，其中包括新增的Fetch API，它致力于取代作为当前远程资源通信基础的XMLHttpRequest。本文介绍了如何结合Fetch API和生成器来构建异步API。\n\n#### 3）[浅谈Hybrid技术的设计与实现](http://www.cnblogs.com/yexiaochai/p/4921635.html)\n\n随着移动浪潮的兴起，各种APP层出不穷，极速的业务扩展提升了团队对开发效率的要求，这个时候使用IOS&Andriod开发一个APP似乎成本有点过高了，而H5的低成本、高效率、跨平台等特性马上被利用起来形成了一种新的开发模式：Hybrid APP。作为一种混合开发的模式，Hybrid APP底层依赖于Native提供的容器（UIWebview），上层使用Html&Css&JS做业务开发，底层透明化、上层多多样化，这种场景非常有利于前端介入，非常适合业务快速迭代，于是Hybrid火啦。\n\n#### 4）[给 JavaScript 初心者的 ES2015 实战](http://gank.io/post/564151c1f1df1210001c9161)\n\n历时将近6年的时间来制定的新 ECMAScript 标准 ECMAScript 6（亦称 ECMAScript Harmony，简称 ES6）终于在 2015 年 6 月正式发布。自从上一个标准版本 ES5 在 2009 年发布以后，ES6 就一直以新语法、新特性的优越性吸引著众多 JavaScript 开发者，驱使他们积极尝鲜。\n\n#### 5）[Java应用一般架构](http://bbear.me/ge-chong-jia-gou/)\n\n当我们架设一个系统的时候通常需要考虑到如何与其他系统交互，所以我们首先需要知道各种系统之间是如何交互的，使用何种技术实现。\n\n## 开源函数库与工具\n\n#### 1）[DoubanMovie-React-Native](https://github.com/fengjundev/DoubanMovie-React-Native)\n\nReact Native实现的豆瓣电影客户端。\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报（特别版のReact Native专题）","slug":"025","date":"2015-10-28T00:00:00.000Z","updated":"2015-11-21T08:31:24.000Z","comments":true,"path":"2015/10/28/025/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/10/28/025/","excerpt":"","text":"业界新闻1）苹果开源三个加密库苹果宣布开源其操作系统的安全子系统中三个主要组件，其中一个库使用的具有限制性约束的许可证引发了争议，此次声明也对该争议作出相应解释。 2）如何评价百度在SDK中嵌入后门？关于百度系应用WormHole漏洞的一个讨论。 Android开发1）移动端图片格式调研图片通常是移动端流量耗费最多的部分，并且占据着重要的视觉空间。合理的图片格式选用和优化可以为你节省带宽、提升视觉效果。在这篇文章作者分析了目前主流和新兴的几种图片格式的特点、性能分析、参数调优，以及相关开源库的选择。 2）Android项目重构之路 架构篇 界面篇 实现篇 3）React Native 中组件的生命周期就像 Android 开发中的 View 一样，React Native（RN） 中的组件也有生命周期（Lifecycle）。所谓生命周期，就是一个对象从开始生成到最后消亡所经历的状态，理解生命周期，是合理开发的关键。 4）安卓App热补丁动态修复技术介绍&amp;version=11020201&amp;lang=en&amp;pass_ticket=1zsiC5hQfwATA4R3ndq32UtcvN%2B5kATcavEv4xN2HMY%3D)当一个App发布之后，突然发现了一个严重bug需要进行紧急修复，这时候公司各方就会忙得焦头烂额：重新打包App、测试、向各个应用市场和渠道换包、提示用户升级、用户下载、覆盖安装。有时候仅仅是为了修改了一行代码，也要付出巨大的成本进行换包和重新发布。 5）关于Android Log的一些思考在日常的Android开发中，日志打印是一项必不可少的操作，我们通过分析打印的日志可以分析程序的运行数据和情况。然而使用日志打印的正确姿势又是怎样呢，如何屏蔽日志信息输出呢？ iOS开发1）被误解的 MVC 和被神化的 MVVMMVC，全称是 Model View Controller，是模型 (model)－视图 (view)－控制器 (controller) 的缩写。它表示的是一种常见的客户端软件开发框架。 相对于 MVC 的历史来说，MVVM 是一个相当新的架构，MVVM 最早于 2005 年被微软的 WPF 和 Silverlight 的架构师 John Gossman 提出，并且应用在微软的软件开发中。当时 MVC 已经被提出了 20 多年了，可见两者出现的年代差别有多大。 2）Parse源码浅析系列（一）—-Parse的底层多线程处理思路：GCD高级用法从iOS7升到iOS8后，GCD 出现了一个重大的变化：在 iOS7 时，使用 GCD 的并行队列， dispatch_async 最大开启的线程一直能控制在6、7条，线程数都是个位数，然而 iOS8后，最大线程数一度可以达到40条、50条。然而在文档上并没有对这一做法的目的进行介绍。 3）iOS 比 Android 还不安全? - 记一次和阿里资深安全工程师蒸米的交流蒸米是最早在乌云上公开 XcodeGhost 的工作原理的人。在后续 XcodeGhost 的服务器关闭后，蒸米也介绍了通过 DNS 污染来接管 XcodeGhost 木马的技术。让大家对于 iOS 平台的安全有了新的认识。 4）细说ReactiveCocoa的冷信号与热信号（三）：怎么处理冷信号与热信号在ReactiveCocoa中，究竟什么才是热信号呢？冷信号是比较常见的，map一下就会得到一个冷信号。但在RAC中，好像并没有“hot signal”这个单独的说法。原来在RAC的世界中，所有的热信号都属于一个类——RACSubject。接下来我们来看看究竟它为什么这么“神奇”。 5）深入剖析Auto Layout，分析iOS各版本新增特性这篇对Auto Layout知识要点进行详细的分析和整理。 技术纵横1）学习 React Native for Android：React 基础React Native 主张用 React 的开发思维来编写 UI 层。因此在学习 React-Native 之前，了解基本的 React 的语法和存在的坑会对今后 React Native 的开发大有裨益。 2）React.js生态系统概览JavaScript领域发展速度很快，甚至有人认为这已经引起了负效应。一个前端库从早期开发的小玩具，到流行，再到过时，可能也就几个月时间。判断一个工具能否在几年内依然保持活力都快成了一门艺术了。 3）React源码剖析系列 － 生命周期的管理艺术目前，前端领域中 React 势头正盛，很少能够深入剖析内部实现机制和原理。本系列文章希望通过剖析 React 源码，理解其内部的实现原理，知其然更要知其所以然。对于 React，其组件生命周期（Component Lifecycle）是它的核心概念，本文从源码入手，来剖析 React 生命周期的管理艺术。 4）React虚拟DOM浅析在Web开发中，需要将数据的变化实时反映到UI上，这时就需要对DOM进行操作，但是复杂或频繁的DOM操作通常是性能瓶颈产生的原因，为此，React引入了虚拟DOM（Virtual DOM）的机制。 5）从自我驱动到带领10人团队虽然仅仅是10人团队的管理，但是其中所蕴含的基本道理却是与管理100人1000人有共通之处。而从自我管理到管理他人的转变却是质的飞越，这个过渡中的思维和工作方式转换对该阶段的人来说，至关重要，希望各位能够好好把握个中关键成功转型。 开源函数库与工具1）ViewInspectorAndroid View分析插件","raw":"title: 平安科技移动开发二队技术周报（特别版のReact Native专题）\ncategories: weekly\ndate: 2015-10-28\n---\n\n##业界新闻\n\n#### 1）[苹果开源三个加密库](http://www.infoq.com/cn/news/2015/11/apple-crypto-open-source)\n\n苹果宣布开源其操作系统的安全子系统中三个主要组件，其中一个库使用的具有限制性约束的许可证引发了争议，此次声明也对该争议作出相应解释。\n\n#### 2）[如何评价百度在SDK中嵌入后门？](http://www.zhihu.com/question/37124478)\n\n关于百度系应用WormHole漏洞的一个讨论。\n\n## Android开发\n\n#### 1）[移动端图片格式调研](http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/)\n\n图片通常是移动端流量耗费最多的部分，并且占据着重要的视觉空间。合理的图片格式选用和优化可以为你节省带宽、提升视觉效果。在这篇文章作者分析了目前主流和新兴的几种图片格式的特点、性能分析、参数调优，以及相关开源库的选择。\n\n#### 2）Android项目重构之路\n\n* [架构篇](http://keeganlee.me/post/android/20150605)\n* [界面篇](http://keeganlee.me/post/android/20150619)\n* [实现篇](http://keeganlee.me/post/android/20150629)\n\n#### 3）[React Native 中组件的生命周期](http://www.race604.com/react-native-component-lifecycle/)\n\n就像 Android 开发中的 View 一样，React Native（RN） 中的组件也有生命周期（Lifecycle）。所谓生命周期，就是一个对象从开始生成到最后消亡所经历的状态，理解生命周期，是合理开发的关键。\n\n#### 4）[安卓App热补丁动态修复技术介绍](http://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw==&mid=400118620&idx=1&sn=b4fdd5055731290eef12ad0d17f39d4a&scene=0&uin=MTYzMjY2MTE1&key=04dce534b3b035ef49d8b47c3f8dc1399d737e94c7a40b1a38561c6fcf48d000a1f40ec4bf530d2534dd865875c0c8c7&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.11.1+build(15B42)&version=11020201&lang=en&pass_ticket=1zsiC5hQfwATA4R3ndq32UtcvN%2B5kATcavEv4xN2HMY%3D)\n\n当一个App发布之后，突然发现了一个严重bug需要进行紧急修复，这时候公司各方就会忙得焦头烂额：重新打包App、测试、向各个应用市场和渠道换包、提示用户升级、用户下载、覆盖安装。有时候仅仅是为了修改了一行代码，也要付出巨大的成本进行换包和重新发布。\n\n#### 5）[关于Android Log的一些思考](http://droidyue.com/blog/2015/11/01/thinking-about-android-log/)\n\n在日常的Android开发中，日志打印是一项必不可少的操作，我们通过分析打印的日志可以分析程序的运行数据和情况。然而使用日志打印的正确姿势又是怎样呢，如何屏蔽日志信息输出呢？\n\n## iOS开发\n\n#### 1）[被误解的 MVC 和被神化的 MVVM](http://blog.devtang.com/blog/2015/11/02/mvc-and-mvvm/)\n\nMVC，全称是 Model View Controller，是模型 (model)－视图 (view)－控制器 (controller) 的缩写。它表示的是一种常见的客户端软件开发框架。\n\n相对于 MVC 的历史来说，MVVM 是一个相当新的架构，MVVM 最早于 2005 年被微软的 WPF 和 Silverlight 的架构师 John Gossman 提出，并且应用在微软的软件开发中。当时 MVC 已经被提出了 20 多年了，可见两者出现的年代差别有多大。\n\n#### 2）[Parse源码浅析系列（一）---Parse的底层多线程处理思路：GCD高级用法](https://github.com/ChenYilong/ParseSourceCodeStudy/blob/master/01_Parse%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF/Parse%E7%9A%84%E5%BA%95%E5%B1%82%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF.md)\n\n从iOS7升到iOS8后，GCD 出现了一个重大的变化：在 iOS7 时，使用 GCD 的并行队列， dispatch_async 最大开启的线程一直能控制在6、7条，线程数都是个位数，然而 iOS8后，最大线程数一度可以达到40条、50条。然而在文档上并没有对这一做法的目的进行介绍。\n\n#### 3）[iOS 比 Android 还不安全? - 记一次和阿里资深安全工程师蒸米的交流](http://blog.devtang.com/blog/2015/10/22/talk-with-zm-about-ios-security/)\n\n蒸米是最早在乌云上公开 XcodeGhost 的工作原理的人。在后续 XcodeGhost 的服务器关闭后，蒸米也介绍了通过 DNS 污染来接管 XcodeGhost 木马的技术。让大家对于 iOS 平台的安全有了新的认识。\n\n#### 4）[细说ReactiveCocoa的冷信号与热信号（三）：怎么处理冷信号与热信号](http://tech.meituan.com/talk-about-reactivecocoas-cold-signal-and-hot-signal-part-3.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n在ReactiveCocoa中，究竟什么才是热信号呢？冷信号是比较常见的，map一下就会得到一个冷信号。但在RAC中，好像并没有“hot signal”这个单独的说法。原来在RAC的世界中，所有的热信号都属于一个类——RACSubject。接下来我们来看看究竟它为什么这么“神奇”。\n\n#### 5）[深入剖析Auto Layout，分析iOS各版本新增特性](http://www.starming.com/index.php?v=index&view=84)\n\n这篇对Auto Layout知识要点进行详细的分析和整理。\n\n\n## 技术纵横\n\n#### 1）[学习 React Native for Android：React 基础](http://hahack.com/codes/learn-react-native-for-android-02/)\n\nReact Native 主张用 React 的开发思维来编写 UI 层。因此在学习 React-Native 之前，了解基本的 React 的语法和存在的坑会对今后 React Native 的开发大有裨益。\n\n#### 2）[React.js生态系统概览](http://www.inkpaper.io/blog/post/2015/10/18/navigating-the-react-ecosystem.html)\n\nJavaScript领域发展速度很快，甚至有人认为这已经引起了负效应。一个前端库从早期开发的小玩具，到流行，再到过时，可能也就几个月时间。判断一个工具能否在几年内依然保持活力都快成了一门艺术了。\n\n#### 3）[React源码剖析系列 － 生命周期的管理艺术](http://zhuanlan.zhihu.com/purerender/20312691)\n\n目前，前端领域中 React 势头正盛，很少能够深入剖析内部实现机制和原理。本系列文章希望通过剖析 React 源码，理解其内部的实现原理，知其然更要知其所以然。对于 React，其组件生命周期（Component Lifecycle）是它的核心概念，本文从源码入手，来剖析 React 生命周期的管理艺术。\n\n#### 4）[React虚拟DOM浅析](http://www.alloyteam.com/2015/10/react-virtual-analysis-of-the-dom/)\n\n在Web开发中，需要将数据的变化实时反映到UI上，这时就需要对DOM进行操作，但是复杂或频繁的DOM操作通常是性能瓶颈产生的原因，为此，React引入了虚拟DOM（Virtual DOM）的机制。\n\n#### 5）[从自我驱动到带领10人团队](http://www.linkedme.in/2015/09/10/how-to-be-a-professional-team-lead)\n\n虽然仅仅是10人团队的管理，但是其中所蕴含的基本道理却是与管理100人1000人有共通之处。而从自我管理到管理他人的转变却是质的飞越，这个过渡中的思维和工作方式转换对该阶段的人来说，至关重要，希望各位能够好好把握个中关键成功转型。\n\n## 开源函数库与工具\n\n#### 1）[ViewInspector](https://github.com/xfumihiro/ViewInspector)\n\nAndroid View分析插件\n\n![](http://d.picphotos.baidu.com/album/w%3D1458%3Bq%3D90/sign=072ded64cdef76093c0b9d9b1be598bd/c995d143ad4bd11378295ecb5cafa40f4afb0566.jpg)\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十四期","slug":"024","date":"2015-10-21T00:00:00.000Z","updated":"2015-11-21T08:30:32.000Z","comments":true,"path":"2015/10/21/024/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/10/21/024/","excerpt":"","text":"业界新闻1）Android“棉花糖”正式发布Google宣布在其Nexus设备上发布代号为”棉花糖”的Android 6.0系统，预计该版本操作系统将在更多设备上应用。 2）从网易邮箱被爆看企业的网络安全昨天下午(10月19日)网易”亮“了，乌云报告网易邮箱存在漏洞，涉及数亿网易邮箱账号和密码(MD5加密)的泄露。 3）App使用有米SDK遭下架事件分析：使用私有API就代表隐私侵犯？10月19日晚首先由国外媒体报道的一起安全事件——研究机构SourceDNA发现众多使用有米SDK的App在收集用户个人数据，因而遭苹果下架。今天这一事件也得到国内媒体的广泛报道，许多用户不明觉厉。 Android开发1）天猫技术团队使用React Native代替H5实现产品化落地React-Native 是Android端实现实现动态部署的另一种思路，绕过dexLoad【一些现有的Android插件框架】，同时实现了前端人员和客户端人员资源的共享，总之是非常值得期待和尝试。 2）Android GC 那点事想写一篇关于Android GC的想法来源于追查一个魅族手机图片滑动卡顿问题，由于不断的GC导致的丢帧卡顿的问题让我们想了很多方案去解决，所以就打算详细的看看内存分配和GC的原理，为什么会不断的GC, GC ALLOC和GC COCURRENT有什么区别，能不能想办法扩大堆内存减少GC的频次等等。 3）Kotlin: Java 6 废土中的一线希望去年，Java8 发布了，增加了很多新特性和提升，比如lambda，stream。Java 9 的标准也已经在制定了。但是超过半数的 Android 设备仍在运行着 Java 6，我们要怎么才能用上新的现代化语言呢？在 DroidCon NYC 2015 的这个分享里，Michael Pardo 介绍了 Kotlin: 由 JetBrains 开发出的 JVM 静态语言。Kotlin 由很多新的特性，比如 lambdas，类扩展（class extensions），和 null 安全（null-safty）。它简洁明了，同时由很高的互操作性（interoperable）。 4）开源选型之 Android 三大图片缓存原理、特性对比&amp;version=11020201&amp;pass_ticket=thTUpPLsZ0gvLJW41vViq6P5IbWMpcK2j%2FTZ0msEtpWe%2BtVdwKhwR80PZ9ZpOiqj)本文主要对比分析了三款主流图片缓存函数库的，它们分别是Universal ImageLoader，Picasso和Glide。开发者在做技术选型时可以zuo w 5）Android动态加载技术三个关键问题详解动态加载技术（也叫插件化技术）在技术驱动型的公司中扮演着相当重要的角色，当项目越来越庞大的时候，需要通过插件化来减轻应用的内存和CPU占用，还可以实现热插拔，即在不发布新版本的情况下更新某些模块。动态加载是一项很复杂的技术，这里主要介绍动态加载技术中的三个基础性问题。 iOS开发1）iOS高性能图片架构与设计一个优秀的图片组件应该具有这些特性：集并发控制，请求合并，下载，缓存，缓存自动淘汰，图片处理，动画的从数据源到图片显示的一站式解决方案。做到图片加载展示如丝般顺滑。支持autolayout和代码布局，提供了对网络图片、系统相册图片、本地图片的加载与现实的支持。经过实际项目检验，性能优秀、运行稳定。高度可定制性：可以和现有的任何下载组件和图片处理组件协同工作。 2）Realm 核心数据库引擎探秘Realm 大部分代码都是开源的，但是其强大功能取决于隐藏在平台内部的一个核心数据库引擎，这个引擎完全由 C++ 编写而成。在这次讲座当中，来自 Realm 的工程师 JP Simard 将带领大家一探 Realm 的核心！JP 将阐述 Realm 设计背后的准则，包括 Realm 是如何保证快速高效运行的，以及为什么我们要自己撰写数据库引擎，而不是像包括 Core Data 在内的移动端数据库解决方案那样，采用 SQLite 作为内部核心。 3）iOS 应用架构谈 动态部署方案这里讨论的动态部署方案，就是指通过不发版的方式，将新的内容、新的业务流程部署进已发布的App。因为苹果的审核周期比较长，而且苹果的限制比较多，业界在这里也没有特别多的手段来达到动态部署方案的目的。这篇文章主要的目的就是给大家列举一下目前业界做动态部署的手段，以及其对应的优缺点。然后给出一套我比较倾向于使用的方案。 4）AFNetworking 3.0迁移指南AFNetworking是一款在OS X和iOS下都令人喜爱的网络库。为了迎合iOS新版本的升级, AFNetworking在3.0版本中删除了基于 NSURLConnection API的所有支持。如果你的项目以前使用过这些API，建议您立即升级到基于 NSURLSession 的API的AFNetworking的版本。本指南将引导您完成这个过程。 5）JSPatch 实现原理详解JSPatch 是一个 iOS 动态更新框架，只需在项目中引入极小的引擎，就可以使用就可以使用 JavaScript 调用任何 Objective-C 原生接口，获得脚本语言的优势：为项目动态添加模块，或替换项目原生代码动态修复 bug，目前在 github 上开源。微信 iOS 客户端使用了 JSPatch，本篇文章详细阐述 JSPatch 的实现原理和一些细节，以帮助使用者更好地了解和使用 JSPatch。 技术纵横1）构建混合移动应用的流行框架优缺点对比仅仅几年前，使用 JavaScript 开发移动应用程序还只是古怪的实验，无需使用 Java 和 Object C 就可创建 iOS 和 Android 应用程序的想法似乎吸引着很多 web 开发者。现在出现了大量的框架，使我们只使用 web 技术就可以创建移动应用，并且用户体验和以往用原生语言开发的应用差不多。 2）RESTFUL API 安全设计指南REST的全称是REpresentational State Transfer，表示表述性无状态传输，无需session，所以每次请求都得带上身份认证信息。rest是基于http协议的，也是无状态的。只是一种架构方式，所以它的安全特性都需我们自己实现，没有现成的。建议所有的请求都通过https协议发送。 3）Web开发的未来：React、Falcor和ES6Widen是一家数字资产管理解决方案提供商。目前，其技术栈还非常传统，包括服务器端的Java、浏览器端的AngularJS、提供REST API支持的Jersey以及jQuery、 Underscore、lodash、jQuery UI和Bootstrap等各种库。近日，该公司的首席开发人员Ray Nicholus在一篇文章中提出了一个面向未来的Web开发技术栈，用于取代现有的工具。 4）微软在Edge预览版中支持Async/Await特性即将到来的ES 2016中有一个async/await特性，微软浏览器Edge目前已支持这一特性，在Edge最新的预览版中仍需开启实验性标志位才能进一步体验，但是想要在未来被广泛接受，走出这一步至关重要。浏览器上可能不放心使用ES6特性，但在react-native中可以尽情的使用。 5）你应该知道的 RPC 原理大型互联网公司的系统都由成千上万大大小小的服务组成，各服务部署在不同的机器上，由不同的团队负责。这时就会遇到两个问题：1）要搭建一个新服务，免不了需要依赖他人的服务，而现在他人的服务都在远端，怎么调用？2）其它团队要使用我们的服务，我们的服务该怎么发布以便他人调用？下文我们将对这两个问题展开探讨。 开源函数库与工具1）DroidScriptsAndroid开发中一些有用的脚本。 2）Android 6.0源码Android 6.0源码网盘地址。 3）QCON 上海 2015演讲PPT刚刚结束的QCON嘉宾演讲的PPT，大家各取所需。 4）React 入门教程React一个不错的中文入门教程，尚在更新中。","raw":"title: 平安科技移动开发二队技术周报 第二十四期\ncategories: weekly\ndate: 2015-10-21\n---\n\n##业界新闻\n\n####1）[Android“棉花糖”正式发布](http://www.infoq.com/cn/news/2015/10/android-marshmallow-rollout?)\n\nGoogle宣布在其Nexus设备上发布代号为\"棉花糖\"的Android 6.0系统，预计该版本操作系统将在更多设备上应用。\n\n####2）[从网易邮箱被爆看企业的网络安全](http://mp.weixin.qq.com/s?__biz=MzA4NzA2NjcyMg%3D%3D&from=timeline&hmsr=toutiao.io&idx=1&isappinstalled=0&mid=400051549&scene=2&sn=816efa29b95cf6b686408a068e624e37&srcid=1020IxMBSVUmfnXg2qpx5PMO&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n昨天下午(10月19日)网易”亮“了，乌云报告网易邮箱存在漏洞，涉及数亿网易邮箱账号和密码(MD5加密)的泄露。\n\n####3）[App使用有米SDK遭下架事件分析：使用私有API就代表隐私侵犯？](http://www.leiphone.com/news/201510/sh9qFDktkYtr4KgM.html)\n\n10月19日晚首先由国外媒体报道的一起安全事件——研究机构SourceDNA发现众多使用有米SDK的App在收集用户个人数据，因而遭苹果下架。今天这一事件也得到国内媒体的广泛报道，许多用户不明觉厉。\n## Android开发\n\n#### 1）[天猫技术团队使用React Native代替H5实现产品化落地](http://mp.weixin.qq.com/s?__biz=MzA3Mjk1MjA4Nw%3D%3D&hmsr=toutiao.io&idx=1&mid=209278158&sn=0a6a12eeab5ed87973de055196eac5b8&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nReact-Native 是Android端实现实现动态部署的另一种思路，绕过dexLoad【一些现有的Android插件框架】，同时实现了前端人员和客户端人员资源的共享，总之是非常值得期待和尝试。\n\n#### 2）[Android GC 那点事](http://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw%3D%3D&hmsr=toutiao.io&idx=1&mid=400021278&scene=0&sn=0e971807eb0e9dcc1a81853189a092f3&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n想写一篇关于Android GC的想法来源于追查一个魅族手机图片滑动卡顿问题，由于不断的GC导致的丢帧卡顿的问题让我们想了很多方案去解决，所以就打算详细的看看内存分配和GC的原理，为什么会不断的GC, GC ALLOC和GC COCURRENT有什么区别，能不能想办法扩大堆内存减少GC的频次等等。\n\n#### 3）[Kotlin: Java 6 废土中的一线希望](https://realm.io/cn/news/droidcon-michael-pardo-kotlin/)\n\n去年，Java8 发布了，增加了很多新特性和提升，比如lambda，stream。Java 9 的标准也已经在制定了。但是超过半数的 Android 设备仍在运行着 Java 6，我们要怎么才能用上新的现代化语言呢？\n在 DroidCon NYC 2015 的这个分享里，Michael Pardo 介绍了 Kotlin: 由 JetBrains 开发出的 JVM 静态语言。Kotlin 由很多新的特性，比如 lambdas，类扩展（class extensions），和 null 安全（null-safty）。它简洁明了，同时由很高的互操作性（interoperable）。\n\n#### 4）[开源选型之 Android 三大图片缓存原理、特性对比](http://mp.weixin.qq.com/s?__biz=MzAxNjI3MDkzOQ==&mid=400056342&idx=1&sn=894325d70f16a28bfe8d6a4da31ec304&scene=0&key=b410d3164f5f798eda36644a0f67c2008e6594a65627177d8b52c17cad4502dcd5092ab6b2f9ded318b37bb80dd8da36&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11+build(15A284)&version=11020201&pass_ticket=thTUpPLsZ0gvLJW41vViq6P5IbWMpcK2j%2FTZ0msEtpWe%2BtVdwKhwR80PZ9ZpOiqj)\n\n本文主要对比分析了三款主流图片缓存函数库的，它们分别是Universal ImageLoader，Picasso和Glide。开发者在做技术选型时可以zuo w\n\n#### 5）[Android动态加载技术三个关键问题详解](http://www.infoq.com/cn/articles/android-dynamic-loading)\n\n动态加载技术（也叫插件化技术）在技术驱动型的公司中扮演着相当重要的角色，当项目越来越庞大的时候，需要通过插件化来减轻应用的内存和CPU占用，还可以实现热插拔，即在不发布新版本的情况下更新某些模块。动态加载是一项很复杂的技术，这里主要介绍动态加载技术中的三个基础性问题。\n\n## iOS开发\n\n#### 1）[iOS高性能图片架构与设计](http://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw%3D%3D&hmsr=toutiao.io&idx=1&mid=207840007&scene=0&sn=ce09553e5774f5581c696b5e28f0c7e8&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n一个优秀的图片组件应该具有这些特性：集并发控制，请求合并，下载，缓存，缓存自动淘汰，图片处理，动画的从数据源到图片显示的一站式解决方案。做到图片加载展示如丝般顺滑。支持autolayout和代码布局，提供了对网络图片、系统相册图片、本地图片的加载与现实的支持。经过实际项目检验，性能优秀、运行稳定。高度可定制性：可以和现有的任何下载组件和图片处理组件协同工作。\n\n#### 2）[Realm 核心数据库引擎探秘](https://realm.io/cn/news/jp-simard-realm-core-database-engine/)\n\nRealm 大部分代码都是开源的，但是其强大功能取决于隐藏在平台内部的一个核心数据库引擎，这个引擎完全由 C++ 编写而成。在这次讲座当中，来自 Realm 的工程师 JP Simard 将带领大家一探 Realm 的核心！JP 将阐述 Realm 设计背后的准则，包括 Realm 是如何保证快速高效运行的，以及为什么我们要自己撰写数据库引擎，而不是像包括 Core Data 在内的移动端数据库解决方案那样，采用 SQLite 作为内部核心。\n\n#### 3）[iOS 应用架构谈 动态部署方案](http://www.cocoachina.com/ios/20151019/13761.html)\n\n这里讨论的动态部署方案，就是指通过不发版的方式，将新的内容、新的业务流程部署进已发布的App。因为苹果的审核周期比较长，而且苹果的限制比较多，业界在这里也没有特别多的手段来达到动态部署方案的目的。这篇文章主要的目的就是给大家列举一下目前业界做动态部署的手段，以及其对应的优缺点。然后给出一套我比较倾向于使用的方案。\n\n#### 4）[AFNetworking 3.0迁移指南](http://www.jianshu.com/p/047463a7ce9b)\n\nAFNetworking是一款在OS X和iOS下都令人喜爱的网络库。为了迎合iOS新版本的升级, AFNetworking在3.0版本中删除了基于 NSURLConnection API的所有支持。如果你的项目以前使用过这些API，建议您立即升级到基于 NSURLSession 的API的AFNetworking的版本。本指南将引导您完成这个过程。\n\n#### 5）[JSPatch 实现原理详解](http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ%3D%3D&hmsr=toutiao.io&idx=1&mid=400011053&scene=0&sn=81ed095f6fb9f7a4345ff50285264be1&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nJSPatch 是一个 iOS 动态更新框架，只需在项目中引入极小的引擎，就可以使用就可以使用 JavaScript 调用任何 Objective-C 原生接口，获得脚本语言的优势：为项目动态添加模块，或替换项目原生代码动态修复 bug，目前在 github 上开源。\n微信 iOS 客户端使用了 JSPatch，本篇文章详细阐述 JSPatch 的实现原理和一些细节，以帮助使用者更好地了解和使用 JSPatch。\n\n## 技术纵横\n\n#### 1）[构建混合移动应用的流行框架优缺点对比](http://www.oschina.net/translate/comparing-the-top-frameworks-for-building-hybrid-mobile-apps-1)\n\n仅仅几年前，使用 JavaScript 开发移动应用程序还只是古怪的实验，无需使用 Java 和 Object C 就可创建 iOS 和 Android 应用程序的想法似乎吸引着很多 web 开发者。现在出现了大量的框架，使我们只使用 web 技术就可以创建移动应用，并且用户体验和以往用原生语言开发的应用差不多。\n\n#### 2）[RESTFUL API 安全设计指南](http://drops.wooyun.org/web/9737?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nREST的全称是REpresentational State Transfer，表示表述性无状态传输，无需session，所以每次请求都得带上身份认证信息。rest是基于http协议的，也是无状态的。只是一种架构方式，所以它的安全特性都需我们自己实现，没有现成的。建议所有的请求都通过https协议发送。\n\n#### 3）[Web开发的未来：React、Falcor和ES6](http://www.infoq.com/cn/news/2015/10/React-Falcor-ES6)\n\nWiden是一家数字资产管理解决方案提供商。目前，其技术栈还非常传统，包括服务器端的Java、浏览器端的AngularJS、提供REST API支持的Jersey以及jQuery、 Underscore、lodash、jQuery UI和Bootstrap等各种库。近日，该公司的首席开发人员Ray Nicholus在一篇文章中提出了一个面向未来的Web开发技术栈，用于取代现有的工具。\n\n#### 4）[微软在Edge预览版中支持Async/Await特性](http://www.infoq.com/cn/news/2015/10/async-await-javascript-edge)\n\n即将到来的ES 2016中有一个async/await特性，微软浏览器Edge目前已支持这一特性，在Edge最新的预览版中仍需开启实验性标志位才能进一步体验，但是想要在未来被广泛接受，走出这一步至关重要。浏览器上可能不放心使用ES6特性，但在react-native中可以尽情的使用。\n\n#### 5）[你应该知道的 RPC 原理](http://blog.jobbole.com/92290/?hmsr=toutiao.io&object_type=webpage&pos=1&url_type=39&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n大型互联网公司的系统都由成千上万大大小小的服务组成，各服务部署在不同的机器上，由不同的团队负责。这时就会遇到两个问题：1）要搭建一个新服务，免不了需要依赖他人的服务，而现在他人的服务都在远端，怎么调用？2）其它团队要使用我们的服务，我们的服务该怎么发布以便他人调用？下文我们将对这两个问题展开探讨。\n\n##开源函数库与工具\n\n####1）[DroidScripts](https://github.com/Juude/droidScripts)\n\nAndroid开发中一些有用的脚本。\n\n####2）[Android 6.0源码](http://pan.baidu.com/s/1bndnE8J)\n\nAndroid 6.0源码网盘地址。\n\n####3）[QCON 上海 2015演讲PPT](http://yun.baidu.com/share/home?uk=387674681#category/type=0)\n\n刚刚结束的QCON嘉宾演讲的PPT，大家各取所需。\n\n####4）[React 入门教程](https://github.com/hulufei/react-tutorial)\n\nReact一个不错的中文入门教程，尚在更新中。\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十三期","slug":"023","date":"2015-10-14T00:00:00.000Z","updated":"2015-11-21T08:33:03.000Z","comments":true,"path":"2015/10/14/023/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/10/14/023/","excerpt":"","text":"业界新闻1）Google开源Brotli压缩算法谷歌非常重视互联网用户的体验，而提升网页加载速度是提升用户体验的一种重要方式。两年前，他们发布了Zotfli压缩算法。该算法在默认设置下的输出比zlib的最大压缩比输出还要小3-8%。PNG优化器、Web内容预处理等许多压缩方案中都集成了该算法。基于该算法的应用情况，结合其它现代压缩需求，谷歌开发并开源了一个新的算法——Brotli压缩算法。 2）Android 6.0 源代码及 Nexus 设备工厂镜像发布Google 已经 pushed Android 6.0 源代码 （注：墙）到 AOSP (Android Open Source Project), 并发布 factory images (MRA58K) 给 Nexus 6 &amp; Nexus 5 智能手机, Nexus Player, 以及 Nexus 9 和 Nexus 7 (2013) 平板电脑。 3）苹果低调发布全新21.5英寸4K屏幕iMac&amp;version=11020201&amp;pass_ticket=Boa8oCykj3acS9xY4a3CXy6h1zhJp4a47FkHf5zG1CAMA7XuzGHcx5WvG9lkkKj9)苹果公司刚刚更新了自己的iMac一体化电脑产品线，新加入了4K分辨率屏幕的21.5寸iMac产品，提升了原有iMac产品的配置，并更新了无线鼠标、键盘以及触控板等附件。 Android开发1）专访DroidPlugin作者张勇：安卓黑科技是怎样炼成的前段时间，奇虎360在Github上发布了一个Android开源项目DroidPlugin，这是一个实现动态加载的Android插件框架，可以免安装、免修改的运行第三方APK。一时间，它被誉为安卓黑科技，引起行业内的关注。 2）Android开发最佳实践前段时间，Google公布了Android开发最佳实践的一系列课程，涉及到一些平时开发过程中应该保持的良好习惯以及如何使用最新的Android Design Support Library来快速实现官方推荐的Material Design样式的应用。 3）给 Android 开发者的 RxJava 详解鉴于 RxJava 目前这种既火爆又神秘的现状，而我又在一年的使用过程中对 RxJava 有了一些理解，我决定写下这篇文章来对 RxJava 做一个相对详细的、针对 Android 开发者的介绍。这篇文章的目的有两个： 给对 RxJava 感兴趣的人一些入门的指引 给正在使用 RxJava 但仍然心存疑惑的人一些更深入的解析 4）安装包立减1M—微信Android资源混淆打包工具微信中的资源混淆工具主要为了混淆资源ID长度(例如将res/drawable/welcome.png混淆为r/s/a.png)，同时利用7z深度压缩，大大减少了安装包体积，同时也增加了逼格，提升了反破解难度。资源混淆工具大约是在2014年4月实现，并在微信5.4中使用，减少了大约1M的空间。然后在8月在公司内部开源，现以推广到QQ邮箱、QQ空间、手机管家等多个产品中使用。 5）React Native For Android 架构初探Facebook 在2015.9.15发布了 React Native for Android，把JavaScript 开发技术扩展到了Android平台。React Native 让开发者使用 JavaScript 和 React 编写应用，利用相同的核心代码就可以创建 基于Web，iOS 和 Android 平台的原生应用。本文将浅析Android React的架构及相关基础知识。 iOS开发1）iOS应用架构谈 本地持久化方案及动态部署持久化方案对整个App架构的影响和网络层方案对整个架构的影响类似，一般都是导致整个项目耦合度高的罪魁祸首。而我也是一如既往的去Model化的实践者，在持久层去Model化的过程中，我引入了Virtual Record的设计，这个在文中也会详细描述。 2）Swift 与众不同的地方本文总结了Swift关键的基本概念。 3）自己动手写一个 iOS 网络请求库（五）——设置 SSL 钢钉在我们调用 HTTPS 协议的时候，事先把 SSL 证书存到 App 本地，然后在每次请求的时候都进行一次验证，避免中间人攻击（Man-in-the-middle attack）。同时，这个功能也是我们使用自签名证书时候必须的，因为系统默认会拒绝我们自己签名的不受信任的证书，导致连接失败。 4）iOS App 的逆向工程: Hacking on Lyft如果你曾经想要知道某一部分代码如何工作，或者很同情某些人程序里的 Bug，你要是有代码，通常可以看看那部分代码。但是，如果没有代码可怎么办？ 在这个演讲里，Conrad 讲到了很多可以逆向 App 的概念和工具，这些方法和工具可以用来 debug 别人的库和你自己的代码。他还展示了逆向 iOS 版本的 Lyft （译者注：Lyft 是美国 Uber 之外的另一款打车软件），并且成功注入代码，探测网络流量，给我们活灵活现地展示逆向的艺术。通过 Conrad 的逆向技术，你也能成功地把 App Store 里所有的 App 的代码都暴露在你面前。 5）一种头像缓存策略许多 App 都有用户系统，不论是自己实现还是使用第三方，大概都需要显示用户的头像。比较常见的情景下，头像会在某些列表里出现，例如联系人列表、消息列表等。虽然头像也是图像，但相比于普通图片，我们对头像有更高的要求。 技术纵横1）基于webpack搭建前端工程解决方案探索前端工程，最起码需要解决以下问题： 提供开发所需的一整套运行环境，这和IDE作用类似 资源管理，包括资源获取、依赖处理、实时更新、按需加载、公共模块管理等 打通研发链路的各个环节，debug、mock、proxy、test、build、deploy等 2）Google推出移动网页加速项目AMP网页性能一直是网站、用户以及相关团体所关心的问题。近些年来，如何提升网页性能吸引了很多工程人员和研究人员的关注。每年,甚至都会有专门的会议来讨论该问题。然而，广大用户，尤其是移动客户端的用户，仍然会经常遇到网页加载速度过慢的情况。为了解决该问题，Google近期联合数十家技术机构和企业等推出了移动网页加速项目（Accelerated Mobile Pages， AMP） 3）Github 365天: 给你一年的时间，你会怎样去提高你的水平尽管一直在Github上连击看上去似乎是没有多大必要的，但是人总得有点追求。如果正是漫无目的，却又想着提高技术的同时，为什么不去试试？毕竟技术非常好、不需要太多练习的人只是少数，似乎这样的人是不存在的。大多数的人都是经过练习之后，才会达到别人口中的“技术好”。 4）从输入 URL 到页面加载完成的过程中都发生了什么事情？一道面试题所引申出来的知识点。 5）微博推荐架构的演进在微博推荐发展的过程中遇到体系方向的变化、业务的不断更迭、目标的重新树立，其产品思路、架构以及算法也随之进行变迁。本文主要阐述在这个过程中推荐架构的演进，从产品目标、算法需求以及技术发展等维度为读者呈现一个完整的发展脉络，同时也希望通过这个机会跟大家一起探讨业务与技术的相互关系。 开源函数库与工具1）浅入浅出Java WebJava Web开发常见基础知识点总结。 2）react-native-viewpagerReact native实现的viewpager组建，同时支持Android和iOS。","raw":"title: 平安科技移动开发二队技术周报 第二十三期\ncategories: weekly\ndate: 2015-10-14\n---\n\n##业界新闻\n\n####1）[Google开源Brotli压缩算法](http://www.infoq.com/cn/news/2015/10/Google-Brotli-Zotfli?utm_source=tuicool)\n\n谷歌非常重视互联网用户的体验，而提升网页加载速度是提升用户体验的一种重要方式。两年前，他们发布了Zotfli压缩算法。该算法在默认设置下的输出比zlib的最大压缩比输出还要小3-8%。PNG优化器、Web内容预处理等许多压缩方案中都集成了该算法。基于该算法的应用情况，结合其它现代压缩需求，谷歌开发并开源了一个新的算法——Brotli压缩算法。\n\n####2）[Android 6.0 源代码及 Nexus 设备工厂镜像发布](http://www.oschina.net/news/66842/android-6-0-source-code-and-factory-images-for-nexus-devices?utm_source=tuicool)\n\nGoogle 已经 pushed Android 6.0 源代码 （注：墙）到 AOSP (Android Open Source Project), 并发布 factory images (MRA58K) 给 Nexus 6 & Nexus 5 智能手机, Nexus Player, 以及 Nexus 9 和 Nexus 7 (2013) 平板电脑。\n\n####3）[苹果低调发布全新21.5英寸4K屏幕iMac](http://mp.weixin.qq.com/s?__biz=MTE3MzE4MTAyMQ==&mid=210825668&idx=1&sn=254ea83af6c57320e9b01b0f1a66ab96&scene=0&key=2877d24f51fa53849ac8f457aacf0c49e3b9af44cfcca0293b029f459055aaf64990e46034d5688b94ab2ba5217bfadc&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11+build(15A284)&version=11020201&pass_ticket=Boa8oCykj3acS9xY4a3CXy6h1zhJp4a47FkHf5zG1CAMA7XuzGHcx5WvG9lkkKj9)\n\n苹果公司刚刚更新了自己的iMac一体化电脑产品线，新加入了4K分辨率屏幕的21.5寸iMac产品，提升了原有iMac产品的配置，并更新了无线鼠标、键盘以及触控板等附件。\n\n##Android开发\n\n####1）[专访DroidPlugin作者张勇：安卓黑科技是怎样炼成的](http://www.infoq.com/cn/news/2015/09/droidplugin-zhangyong-interview)\n\n前段时间，奇虎360在Github上发布了一个Android开源项目DroidPlugin，这是一个实现动态加载的Android插件框架，可以免安装、免修改的运行第三方APK。一时间，它被誉为安卓黑科技，引起行业内的关注。\n\n####2）[Android开发最佳实践](http://www.csdn.net/article/2015-10-05/2825847)\n\n前段时间，Google公布了Android开发最佳实践的一系列课程，涉及到一些平时开发过程中应该保持的良好习惯以及如何使用最新的Android Design Support Library来快速实现官方推荐的Material Design样式的应用。\n\n####3）[给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083?from=timeline&hmsr=toutiao.io&isappinstalled=0&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n鉴于 RxJava 目前这种既火爆又神秘的现状，而我又在一年的使用过程中对 RxJava 有了一些理解，我决定写下这篇文章来对 RxJava 做一个相对详细的、针对 Android 开发者的介绍。\n这篇文章的目的有两个：\n\n* 给对 RxJava 感兴趣的人一些入门的指引\n* 给正在使用 RxJava 但仍然心存疑惑的人一些更深入的解析\n\n####4）[安装包立减1M--微信Android资源混淆打包工具](http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=208135658&idx=1&sn=ac9bd6b4927e9e82f9fa14e396183a8f#rd)\n\n微信中的资源混淆工具主要为了混淆资源ID长度(例如将res/drawable/welcome.png混淆为r/s/a.png)，同时利用7z深度压缩，大大减少了安装包体积，同时也增加了逼格，提升了反破解难度。资源混淆工具大约是在2014年4月实现，并在微信5.4中使用，减少了大约1M的空间。然后在8月在公司内部开源，现以推广到QQ邮箱、QQ空间、手机管家等多个产品中使用。\n\n####5）[React Native For Android 架构初探](http://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw==&mid=207782506&idx=1&sn=3ff6b03c0d59fbda406f64739d9272cf&scene=1&srcid=1009Q3qo6mLeT2ydjdzUwLQ7&from=groupmessage&isappinstalled=0#rd)\n\nFacebook 在2015.9.15发布了 React Native for Android，把JavaScript 开发技术扩展到了Android平台。React Native 让开发者使用 JavaScript 和 React 编写应用，利用相同的核心代码就可以创建 基于Web，iOS 和 Android 平台的原生应用。本文将浅析Android React的架构及相关基础知识。\n\n\n\n##iOS开发\n\n####1）[iOS应用架构谈 本地持久化方案及动态部署](http://casatwy.com/iosying-yong-jia-gou-tan-ben-di-chi-jiu-hua-fang-an-ji-dong-tai-bu-shu.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n持久化方案对整个App架构的影响和网络层方案对整个架构的影响类似，一般都是导致整个项目耦合度高的罪魁祸首。而我也是一如既往的去Model化的实践者，在持久层去Model化的过程中，我引入了Virtual Record的设计，这个在文中也会详细描述。\n\n####2）[Swift 与众不同的地方](http://www.cnblogs.com/songliquan/p/4856700.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n本文总结了Swift关键的基本概念。\n\n####3）[自己动手写一个 iOS 网络请求库（五）——设置 SSL 钢钉](https://lvwenhan.com/ios/464.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n在我们调用 HTTPS 协议的时候，事先把 SSL 证书存到 App 本地，然后在每次请求的时候都进行一次验证，避免中间人攻击（Man-in-the-middle attack）。同时，这个功能也是我们使用自签名证书时候必须的，因为系统默认会拒绝我们自己签名的不受信任的证书，导致连接失败。\n\n####4）[iOS App 的逆向工程: Hacking on Lyft](https://realm.io/cn/news/conrad-kramer-reverse-engineering-ios-apps-lyft/?utm_source=tuicool)\n\n如果你曾经想要知道某一部分代码如何工作，或者很同情某些人程序里的 Bug，你要是有代码，通常可以看看那部分代码。但是，如果没有代码可怎么办？ 在这个演讲里，Conrad 讲到了很多可以逆向 App 的概念和工具，这些方法和工具可以用来 debug 别人的库和你自己的代码。他还展示了逆向 iOS 版本的 Lyft （译者注：Lyft 是美国 Uber 之外的另一款打车软件），并且成功注入代码，探测网络流量，给我们活灵活现地展示逆向的艺术。通过 Conrad 的逆向技术，你也能成功地把 App Store 里所有的 App 的代码都暴露在你面前。\n\n####5）[一种头像缓存策略](https://github.com/nixzhu/dev-blog/blob/master/2015-10-08-navi.md?utm_source=tuicool)\n\n许多 App 都有用户系统，不论是自己实现还是使用第三方，大概都需要显示用户的头像。比较常见的情景下，头像会在某些列表里出现，例如联系人列表、消息列表等。虽然头像也是图像，但相比于普通图片，我们对头像有更高的要求。\n\n\n##技术纵横\n\n####1）[基于webpack搭建前端工程解决方案探索](http://www.infoq.com/cn/articles/frontend-engineering-webpack)\n\n前端工程，最起码需要解决以下问题：\n\n* 提供开发所需的一整套运行环境，这和IDE作用类似\n* 资源管理，包括资源获取、依赖处理、实时更新、按需加载、公共模块管理等\n* 打通研发链路的各个环节，debug、mock、proxy、test、build、deploy等\n\n####2）[Google推出移动网页加速项目AMP](http://www.infoq.com/cn/news/2015/10/Google-AMP)\n\n网页性能一直是网站、用户以及相关团体所关心的问题。近些年来，如何提升网页性能吸引了很多工程人员和研究人员的关注。每年,甚至都会有专门的会议来讨论该问题。然而，广大用户，尤其是移动客户端的用户，仍然会经常遇到网页加载速度过慢的情况。为了解决该问题，Google近期联合数十家技术机构和企业等推出了移动网页加速项目（Accelerated Mobile Pages， AMP）\n\n####3）[Github 365天: 给你一年的时间，你会怎样去提高你的水平](https://www.phodal.com/blog/github-365-days-review/)\n\n尽管一直在Github上连击看上去似乎是没有多大必要的，但是人总得有点追求。如果正是漫无目的，却又想着提高技术的同时，为什么不去试试？毕竟技术非常好、不需要太多练习的人只是少数，似乎这样的人是不存在的。大多数的人都是经过练习之后，才会达到别人口中的“技术好”。\n\n####4）[从输入 URL 到页面加载完成的过程中都发生了什么事情？](http://fex.baidu.com/blog/2014/05/what-happen/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n一道面试题所引申出来的知识点。\n\n####5）[微博推荐架构的演进](http://www.wbrecom.com/?hmsr=toutiao.io&p=540&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n在微博推荐发展的过程中遇到体系方向的变化、业务的不断更迭、目标的重新树立，其产品思路、架构以及算法也随之进行变迁。本文主要阐述在这个过程中推荐架构的演进，从产品目标、算法需求以及技术发展等维度为读者呈现一个完整的发展脉络，同时也希望通过这个机会跟大家一起探讨业务与技术的相互关系。\n\n##开源函数库与工具\n\n####1）[浅入浅出Java Web](https://github.com/someus/another-tutorial-about-java-web?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nJava Web开发常见基础知识点总结。\n\n####2）[react-native-viewpager](https://github.com/race604/react-native-viewpager?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nReact native实现的viewpager组建，同时支持Android和iOS。\n\n\n\n\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十二期","slug":"022","date":"2015-09-30T00:00:00.000Z","updated":"2015-11-21T08:29:40.000Z","comments":true,"path":"2015/09/30/022/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/09/30/022/","excerpt":"","text":"业界新闻1）Google Nexus 2015发布会总结：五款新品齐登场2015年09月30日凌晨00:00，Google 如期在旧金山开了一场 Nexus 新品发布会，Google 一口气发布了手机、平板、Chromecast 这3大类产品的5个新品：两部手机、一台平板、两个 Chromecast。 2）在 GitHub 上面泄露了公司源码怎么办？苏宁易购 iOS 项目代码泄露事件。 Android开发1）Android性能调优利器StrictMode作为Android开发，日常的开发工作中或多或少要接触到性能问题，比如我的Android程序运行缓慢卡顿，并且常常出现ANR对话框等等问题。既然有性能问题，就需要进行性能优化。正所谓工欲善其事，必先利其器。一个好的工具，可以帮助我们发现并定位问题，进而有的放矢进行解决。本文主要介绍StrictMode 在Android 应用开发中的应用和一些问题。 2）基于Facebook Buck改造Android构建系统之初体验自从Android开发切换到Android Studio之后，就一直使用Gradle进行项目的构建，随着工程Module的增加，代码的一处改动，都要花费几分钟的时间重新编译，实在是浪费时间，一两个月前就想着使用Facebook的Buck来替换Gradle，换取更快的编译速度，后来由于其他事情就耽搁了。当时在知乎上提问：《国内有Android技术团队在使用facebook的buck进行代码构建吗？》，后面得知微信已经切换到了Buck，最近参与到一个新项目中，也在对原来的代码进行分模块重构，工程的构建时间依然是一个严峻的问题，因此是时候重新开始使用Buck进行改造了。 3）其实你不知道MultiDex到底有多坑MultiDex的问题难点在：要持续解决好几个bug才能最终解决问题。进一步的，想要仔细分辨且解决这些bug，就必须持续探索一些关联性的概念和原理。 4）React Native: Android 的打包本文介绍 React Native 中的资源打包，重点介绍使用 react-native-gradle 插件进行 Android APP 的打包。 5）美团Android资源混淆保护实践Android应用中的APK安全性一直遭人诟病，市面上充斥着各种被破解或者汉化的应用，破解者可以非常简单的通过破解工具就能对一个APK进行反编译、破解、汉化等等，这样就可以修改原有代码的逻辑、添加新代码、添加或修改资源、或者更有甚者植入病毒等等，从而破坏原有APK的安全和用户体验，最终伤害到用户和原有的开发者。 iOS开发1）自己动手使用 Swift 打造全功能 JSON 解析、生成库在我动手搞这个 JSON 解析库之前，我一直在用 SwiftJSON 这个库，这个库是国人开源的最受欢迎的 Swift 项目，没有之一，也是全球最受欢迎的 Swift 库第二名，第一名是网络库 Alamofire。由于要实现 [“key”][“key1”] 这样的递归查找，我一直觉得 JSON 解析库非常复杂难搞。 2）细说ReactiveCocoa的冷信号与热信号 一 二ReactiveCocoa（简称RAC）是最初由GitHub团队开发的一套基于Cocoa的FRP框架。FRP即Functional Reactive Programming（函数式响应式编程），其优点是用随时间改变的函数表示用户输入，这样就不需要可变状态了。我们之前的文章“RACSignal的Subscription深入分析”里曾经详细讲解过RAC核心概念之一RACSignal的实现原理。在美团客户端中，我们大量使用了这个框架。冷信号与热信号的概念很容易混淆并造成一定的问题。鉴于这个问题具有一定普遍性，我将用一系列文章讲解RAC中冷信号与热信号的相关知识点，希望可以加深大家的理解。 3）iOS 静态库开发在企业开发中，一些核心技术或者常用框架，出于安全性和稳定性的考虑，不想被外界知道，所以会把核心代码打包成静态库，只暴露头文件给程序员使用（比如：友盟、百度地图等第三方的sdk） 4）Swift 函数式编程实践Swift 为 iOS 编程世界引入了一个新的范式：函数式范式。大多数 iOS 开发者之前都习惯了用 Objective-C 或者其他面向对象编程语言，函数式的编码和思考会变得有点烧脑(brain-addling)。 5）RxSwift 入坑手册 Part0 - 基础概念Swift语言的Rx版本入门示例解读。 技术纵横1）什么是工程师文化？在你眼中，怎样的公司才算是有工程师文化的公司？包括且不限于计算互联网行业，土木建筑业，机械制造业，航空航天业，生物化工业等众多工程师行业。 2）解密“攻城狮使用手册”时下职场里，流行着一句话“事少，钱多，离家近”，指的就是求职者对于一份理想中的工作的诉求，从中我们可以分析出，求职者最关注的三大核心问题是：工作强度是否适中、待遇报酬是否优厚、公司离家的交通是否便捷。 3）你与其他程序员可能常犯的 6 个错误编程的世界中有很多的问题，我们每个人都有不同的技能，不同的能力和动力来源。学习是关键。自主开发不应该停止。我们不得不这样做，除非我们不想成为优秀的程序员。不断地学习和了解新的东西是我们应该做的工作。 4）2015年 12条专业的JavaScript规则学习JavaScript是困难的。它发展的如此之快，以至于在任何一个特定的时刻，你都不清楚自己是否“做错了”。有些时候，感觉像是坏的部分超过了好的部分。然而，讨论这些并没有意义，JavaScript正在征服世界，所以，我们也只能这么做了。 5）架构师是否应该写代码：架构师的认知误区要让一个成功的架构得以实现，架构师必须要在整个生命周期始终保持与交付团队的紧密合作。保持紧密合作能够促进架构层面的快速反馈循环。并且还能够为架构师提供更多的与团队交流架构愿景和领导团队的机会。 开源函数库与工具1）Android Studio有哪些非常好用的插件Android Studio提高效率或者美化界面的插件。 2）Android开发时你遇到过什么相见恨晚的工具或网站关于Android开发中提高效率的工具和网站的一个知乎问答。","raw":"title: 平安科技移动开发二队技术周报 第二十二期\ncategories: weekly\ndate: 2015-09-30\n---\n\n##业界新闻\n\n####1）[Google Nexus 2015发布会总结：五款新品齐登场](http://www.leiphone.com/news/201509/z3ki6sYjKwUC16wR.html)\n\n2015年09月30日凌晨00:00，Google 如期在旧金山开了一场 Nexus 新品发布会，Google 一口气发布了手机、平板、Chromecast 这3大类产品的5个新品：两部手机、一台平板、两个 Chromecast。\n\n####2）[在 GitHub 上面泄露了公司源码怎么办？](http://www.zhihu.com/question/35904468)\n\n苏宁易购 iOS 项目代码泄露事件。\n\n##Android开发\n\n####1）[Android性能调优利器StrictMode](http://droidyue.com/blog/2015/09/26/android-tuning-tool-strictmode/)\n\n作为Android开发，日常的开发工作中或多或少要接触到性能问题，比如我的Android程序运行缓慢卡顿，并且常常出现ANR对话框等等问题。既然有性能问题，就需要进行性能优化。正所谓工欲善其事，必先利其器。一个好的工具，可以帮助我们发现并定位问题，进而有的放矢进行解决。本文主要介绍StrictMode 在Android 应用开发中的应用和一些问题。\n\n####2）[基于Facebook Buck改造Android构建系统之初体验](http://www.jianshu.com/p/1e990aac7836)\n\n自从Android开发切换到Android Studio之后，就一直使用Gradle进行项目的构建，随着工程Module的增加，代码的一处改动，都要花费几分钟的时间重新编译，实在是浪费时间，一两个月前就想着使用Facebook的Buck来替换Gradle，换取更快的编译速度，后来由于其他事情就耽搁了。当时在知乎上提问：《国内有Android技术团队在使用facebook的buck进行代码构建吗？》，后面得知微信已经切换到了Buck，最近参与到一个新项目中，也在对原来的代码进行分模块重构，工程的构建时间依然是一个严峻的问题，因此是时候重新开始使用Buck进行改造了。\n\n####3）[其实你不知道MultiDex到底有多坑](http://zongwu233.github.io/the-touble-of-multidex/?)\n\nMultiDex的问题难点在：要持续解决好几个bug才能最终解决问题。进一步的，想要仔细分辨且解决这些bug，就必须持续探索一些关联性的概念和原理。\n\n####4）[React Native: Android 的打包](http://www.liaohuqiu.net/cn/posts/react-native-android-package/)\n\n本文介绍 React Native 中的资源打包，重点介绍使用 react-native-gradle 插件进行 Android APP 的打包。\n\n####5）[美团Android资源混淆保护实践](http://tech.meituan.com/mt-android-resource-obfuscation.html)\n\nAndroid应用中的APK安全性一直遭人诟病，市面上充斥着各种被破解或者汉化的应用，破解者可以非常简单的通过破解工具就能对一个APK进行反编译、破解、汉化等等，这样就可以修改原有代码的逻辑、添加新代码、添加或修改资源、或者更有甚者植入病毒等等，从而破坏原有APK的安全和用户体验，最终伤害到用户和原有的开发者。\n\n\n##iOS开发\n\n####1）[自己动手使用 Swift 打造全功能 JSON 解析、生成库](http://lvwenhan.com/ios/463.html)\n\n在我动手搞这个 JSON 解析库之前，我一直在用 SwiftJSON 这个库，这个库是国人开源的最受欢迎的 Swift 项目，没有之一，也是全球最受欢迎的 Swift 库第二名，第一名是网络库 Alamofire。由于要实现 [\"key\"][\"key1\"] 这样的递归查找，我一直觉得 JSON 解析库非常复杂难搞。\n\n####2）细说ReactiveCocoa的冷信号与热信号 [一](http://tech.meituan.com/talk-about-reactivecocoas-cold-signal-and-hot-signal-part-1.html) [二](http://tech.meituan.com/talk-about-reactivecocoas-cold-signal-and-hot-signal-part-2.html)\n\nReactiveCocoa（简称RAC）是最初由GitHub团队开发的一套基于Cocoa的FRP框架。FRP即Functional Reactive Programming（函数式响应式编程），其优点是用随时间改变的函数表示用户输入，这样就不需要可变状态了。我们之前的文章“RACSignal的Subscription深入分析”里曾经详细讲解过RAC核心概念之一RACSignal的实现原理。在美团客户端中，我们大量使用了这个框架。冷信号与热信号的概念很容易混淆并造成一定的问题。鉴于这个问题具有一定普遍性，我将用一系列文章讲解RAC中冷信号与热信号的相关知识点，希望可以加深大家的理解。\n\n####3）[iOS 静态库开发](http://www.jianshu.com/p/8f5b9855efb8)\n\n在企业开发中，一些核心技术或者常用框架，出于安全性和稳定性的考虑，不想被外界知道，所以会把核心代码打包成静态库，只暴露头文件给程序员使用（比如：友盟、百度地图等第三方的sdk）\n\n####4）[Swift 函数式编程实践](http://codebuild.me/2015/09/15/swift-functional-programming-intro/)\n\nSwift 为 iOS 编程世界引入了一个新的范式：函数式范式。大多数 iOS 开发者之前都习惯了用 Objective-C 或者其他面向对象编程语言，函数式的编码和思考会变得有点烧脑(brain-addling)。\n\n####5）[RxSwift 入坑手册 Part0 - 基础概念](http://blog.callmewhy.com/2015/09/21/rxswift-getting-started-0/)\n\nSwift语言的Rx版本入门示例解读。\n\n\n##技术纵横\n\n####1）[什么是工程师文化？](http://www.zhihu.com/question/22168420)\n\n在你眼中，怎样的公司才算是有工程师文化的公司？包括且不限于计算互联网行业，土木建筑业，机械制造业，航空航天业，生物化工业等众多工程师行业。\n\n####2）[解密“攻城狮使用手册”](http://www.csdn.net/article/2015-09-29/2825818-developer-sdcc)\n\n时下职场里，流行着一句话“事少，钱多，离家近”，指的就是求职者对于一份理想中的工作的诉求，从中我们可以分析出，求职者最关注的三大核心问题是：工作强度是否适中、待遇报酬是否优厚、公司离家的交通是否便捷。\n\n####3）[你与其他程序员可能常犯的 6 个错误](http://info.9iphp.com/6-common-problems-you-may-have-with-other-programmers/)\n\n编程的世界中有很多的问题，我们每个人都有不同的技能，不同的能力和动力来源。学习是关键。自主开发不应该停止。我们不得不这样做，除非我们不想成为优秀的程序员。不断地学习和了解新的东西是我们应该做的工作。\n\n####4）[2015年 12条专业的JavaScript规则](http://info.9iphp.com/12-rules-for-professional-javascript-in-2015/)\n\n学习JavaScript是困难的。它发展的如此之快，以至于在任何一个特定的时刻，你都不清楚自己是否“做错了”。有些时候，感觉像是坏的部分超过了好的部分。然而，讨论这些并没有意义，JavaScript正在征服世界，所以，我们也只能这么做了。\n\n####5）[架构师是否应该写代码：架构师的认知误区](http://www.infoq.com/cn/articles/architects-should-code-bryson)\n\n要让一个成功的架构得以实现，架构师必须要在整个生命周期始终保持与交付团队的紧密合作。保持紧密合作能够促进架构层面的快速反馈循环。并且还能够为架构师提供更多的与团队交流架构愿景和领导团队的机会。\n\n##开源函数库与工具\n\n####1）[Android Studio有哪些非常好用的插件](http://www.zhihu.com/question/28527388)\n\nAndroid Studio提高效率或者美化界面的插件。\n\n####2）[Android开发时你遇到过什么相见恨晚的工具或网站](http://www.zhihu.com/question/27140400)\n\n关于Android开发中提高效率的工具和网站的一个知乎问答。\n\n\n\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十一期","slug":"021","date":"2015-09-23T00:00:00.000Z","updated":"2015-11-21T08:29:33.000Z","comments":true,"path":"2015/09/23/021/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/09/23/021/","excerpt":"","text":"业界新闻1）XcodeGhost：墙、感染、信任和欺骗有人在中国网盘和论坛上传播了一个修改过的Xcode，这个版本的Xcode会在编译出来的App上面加一些可以被远程控制的代码，并且发送数据到某个服务器上。这是iOS出现以来，未越狱系统遭遇的最大安全威胁，在此之前苹果的Sandbox模式几乎没遇到过挑战，iPhone用户甚至大量iOS开发者都认为系统固若金汤，不可能遇到问题。 2）如何评价 React Native Android关于React Native Android的一个知乎问答。 3）C++ 之父宣布推出「C++ 核心准则」，将通过开源协作方式完善9月21日上午，Bjarne Stroustrup 在 CppCon 大会上宣告了「C++ Core Guidelines | C++ 核心准则」。英文文档已经在 GitHub 上了，目前还是草案阶段，两个主要的作者是 Bjarne Stroustrup 和 Herb Sutter 。Stroustrup 在呼吁：「We need help!」 Android开发1）Android程序的反编译对抗研究对抗反编译是指让apk文件或者dex文件无法正常通过反编译工具，而且有可能导致工具异常或者崩溃，如apktool、baksmali、dex2jar、JEB等等工具，如下图dex2jar无法正常工作。 2）Android Log工具类工欲善其事，必先利其器。在Android开发过程中，相信都会遇到这样的问题： Log太多，不容易找到自己设置打印的内容 找到Log但是定位到Java源码有不是很方便 对Log打印需要设置Tag，大多时候Tag就是本类的类名，存在重复的工作 发布正式版本需要注释或者关掉很多Log开关 3）React Native For Android初体验React Native For Android提前发布了，代码托管在Github上面，本文是一个尝鲜体验，主要介绍环境配置的过程。目前React Native只支持在OS X系统上面进行开发，其他系统的筒靴们请掩泪飘过。 4）Facebook:我们是如何构建第一个跨平台的React Native APP在Facebook我们已经应用React Native在发布的产品有超过一年的时间了。几乎是整整一年之前，我们的团队开始规划开发广告管理APP。我们的部门是创建一个新的APP来让数百万的Facebook广告主来管理他们的账号并能创建新的广告。在完成的时候,这不仅仅是FB的第一个全React Native APP而且是第一个跨平台的APP.在这篇文章里，我们希望能和你分享我们是如何构建这个APP,React Native是如何让我们更快的，还有这个过程中我们的经验。 5）Android 沉浸式状态栏攻略Android 沉浸式状态栏目前只有在大于等于Android 4.4版本才支持，但是4.4和5.0的显示效果有一定的差异，所有本篇博文内容为： 如何实现半透明状态栏效果在大于4.4版本之上。 如何让4.4的效果与5.0的效果尽可能一致。 iOS开发1）iOS微信安装包瘦身&amp;version=11020201&amp;pass_ticket=1IEMaQ6RFKDH5CBSqTcMjggMcTG%2FEP1%2FySQBS3DPQaTtjNPY%2BJcx8V23YHqYtG1V)微信经过多次版本迭代，产生不少冗余代码和无用资源。之前微信也没有很好的手段知道哪个模块增量多少。另外去年10月微信开始做ARC支持，目的是为了减少野指针带来的Crash，但代价是可执行文件增大20%左右。而苹果规定今年6月提交给Appstore的应用必须支持64位，32位和64位两个架构的存在使得可执行文件增加了一倍多。安装包大小优化迫在眉睫。 2）iOS应用架构思考 网络层 网络图片库 3）iOS代码实践总结最近一个月除了专门抽时间和精力重构之外，还有就是遇到需要添加功能的模块的时候，由于项目中的代码历史因素比较多，第一件干的事情往往是重构整理代码，发现很多之前的代码写的时候没有注意的事情特别多，比如全局变量乱用；方法没有层次感，胡乱添加；对业务不了解的情况下，通过打补丁的方式实现功能等等。所以我决定写一篇文章，把自己的觉得实践中需要注意的一些事项，具体总结一下分享给大家。 4）构建内存高效的应用近年来，移动设备的性能越来越强大。然而，同桌面电脑相比，性能上总还是有一段不小的差距。同时，用户界面和交互设计的要求也越来越高。所以，为移动设备编写内存高效的应用仍然很有必要。 5）Xcode 7 UI 测试初窥单元测试非常适合用来做 app 的逻辑以及网络接口方面的测试，但是一个 app 所面向的最终人群还是使用的用户。对于用户来说，app 的功能和 UI 界面是否正确是判断这个 app 是否合格的更为直接标准。而传统的单元测试很难对 app 的功能或者 UI 进行测试。 技术纵横1）你为什么不分享这两天恰好有我的前boss在朋友圈分享他看到的文章，是关于分享的主题。作者在文章里把新人或者说菜鸟不肯分享的原因总结为害怕被所谓的高手/大牛所打脸而害怕分享。从我的经历来说，我认为这并非核心原因，仅仅是次要原因之一。因此特意写此文与大家探讨一下。 2）Nicholas C. Zakas：我得到的最佳职业生涯建议最近我与一同事有一次有意思的讨论。我们回忆了各自所走过的职业历程以及不同个性如何长期消极影响我们的职业。事实情况是，我曾经是那种从大学里走出来的令人讨厌的人（有些人可能会说我现在仍然是那种人，但这是另一回事儿）。当时我很傲慢并且很刻薄，是一个十足的愤青。我自以为我很了解自己的性格并且为这种性格感到骄傲。 3）H5性能优化方案对于一个H5的产品，功能无疑很重要，但是性能同样是用户体验中不可或缺的一环。原本H5的渲染性能就不及native的app，如果不把性能优化做起来，将极大地影响用户使用产品的积极性。 4）如何高效的学习掌握新技术学习新技术，就如探索一片新的领域，一般在心态上来说，都会有两种典型的心态，一种是恐慌和抗拒的，一种是积极和开放的，不同的心态会造成不同的结果。 开源函数库与工具1）Swift 开发者周刊（第 0 期）大家好，踩了各种坑之后，第 0 期《Swift 开发者周刊》终于和大家见面了。目前周刊由 SwiftGG 翻译组 维护，每周推送最新的 Swift 文章和开源项目，帮助大家提高 Swift 姿势水平。 2）FreeBuilderGoogle出品的基于注解自动生成Builder模式代码的函数库。 3）腾讯 Android 与 iOS 开发工具镜像服务XcodeGhost事件之后，开发工具的下载需要慎之又慎。 4）F2etest阿里巴巴出品的一个面向前端、测试、产品等岗位的多浏览器兼容性测试整体解决方案。","raw":"title: 平安科技移动开发二队技术周报 第二十一期\ncategories: weekly\ndate: 2015-09-23\n---\n\n##业界新闻\n\n####1）[XcodeGhost：墙、感染、信任和欺骗](http://www.leiphone.com/news/201509/Q6MWlts9zKEyX0HV.html)\n\n有人在中国网盘和论坛上传播了一个修改过的Xcode，这个版本的Xcode会在编译出来的App上面加一些可以被远程控制的代码，并且发送数据到某个服务器上。这是iOS出现以来，未越狱系统遭遇的最大安全威胁，在此之前苹果的Sandbox模式几乎没遇到过挑战，iPhone用户甚至大量iOS开发者都认为系统固若金汤，不可能遇到问题。\n\n####2）[如何评价 React Native Android](http://www.zhihu.com/question/35622976)\n\n关于React Native Android的一个知乎问答。\n\n####3）[C++ 之父宣布推出「C++ 核心准则」，将通过开源协作方式完善](http://top.jobbole.com/25256/)\n\n9月21日上午，Bjarne Stroustrup 在 CppCon 大会上宣告了「C++ Core Guidelines  | C++ 核心准则」。英文文档已经在 GitHub 上了，目前还是草案阶段，两个主要的作者是 Bjarne Stroustrup 和 Herb Sutter 。Stroustrup 在呼吁：「We need help!」\n\n\n##Android开发\n\n####1）[Android程序的反编译对抗研究](http://www.freebuf.com/tools/76884.html)\n\n对抗反编译是指让apk文件或者dex文件无法正常通过反编译工具，而且有可能导致工具异常或者崩溃，如apktool、baksmali、dex2jar、JEB等等工具，如下图dex2jar无法正常工作。\n\n####2）[Android Log工具类](http://ihongqiqu.com/blog/2014/10/16/android-log/)\n\n工欲善其事，必先利其器。在Android开发过程中，相信都会遇到这样的问题：\n\n* Log太多，不容易找到自己设置打印的内容\n* 找到Log但是定位到Java源码有不是很方便\n* 对Log打印需要设置Tag，大多时候Tag就是本类的类名，存在重复的工作\n* 发布正式版本需要注释或者关掉很多Log开关\n\n####3）[React Native For Android初体验](http://www.jianshu.com/p/847a54e0c385)\n\nReact Native For Android提前发布了，代码托管在Github上面，本文是一个尝鲜体验，主要介绍环境配置的过程。目前React Native只支持在OS X系统上面进行开发，其他系统的筒靴们请掩泪飘过。\n\n####4）[Facebook:我们是如何构建第一个跨平台的React Native APP](http://ljinkai.github.io/2015/09/21/facebook-react-native-android/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n在Facebook我们已经应用React Native在发布的产品有超过一年的时间了。几乎是整整一年之前，我们的团队开始规划开发广告管理APP。我们的部门是创建一个新的APP来让数百万的Facebook广告主来管理他们的账号并能创建新的广告。在完成的时候,这不仅仅是FB的第一个全React Native APP而且是第一个跨平台的APP.在这篇文章里，我们希望能和你分享我们是如何构建这个APP,React Native是如何让我们更快的，还有这个过程中我们的经验。\n\n####5）[Android 沉浸式状态栏攻略](http://blog.csdn.net/lmj623565791/article/details/48649563)\n\nAndroid 沉浸式状态栏目前只有在大于等于Android 4.4版本才支持，但是4.4和5.0的显示效果有一定的差异，所有本篇博文内容为：\n\n* 如何实现半透明状态栏效果在大于4.4版本之上。\n* 如何让4.4的效果与5.0的效果尽可能一致。\n\n##iOS开发\n\n####1）[iOS微信安装包瘦身](https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=207986417&idx=1&sn=77ea7d8e4f8ab7b59111e78c86ccfe66&scene=0&key=dffc561732c226510c6c6a2ae7a6c92d2f42b941e05f1e3e8624461eec866b962cf3ee5e02f2f695578cc616a6c429d2&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.10.5+build(14F27)&version=11020201&pass_ticket=1IEMaQ6RFKDH5CBSqTcMjggMcTG%2FEP1%2FySQBS3DPQaTtjNPY%2BJcx8V23YHqYtG1V)\n\n微信经过多次版本迭代，产生不少冗余代码和无用资源。之前微信也没有很好的手段知道哪个模块增量多少。另外去年10月微信开始做ARC支持，目的是为了减少野指针带来的Crash，但代价是可执行文件增大20%左右。而苹果规定今年6月提交给Appstore的应用必须支持64位，32位和64位两个架构的存在使得可执行文件增加了一倍多。安装包大小优化迫在眉睫。\n\n####2）iOS应用架构思考 \n\n* [网络层](http://blog.cnbluebox.com/blog/2015/05/07/architecture-ios-1/)\n* [网络图片库](http://blog.cnbluebox.com/blog/2015/07/10/architecture-ios-2/)\n\n####3）[iOS代码实践总结](http://blog.csdn.net/colorapp/article/details/48597267?url_type=39&object_type=webpage&pos=1)\n\n最近一个月除了专门抽时间和精力重构之外，还有就是遇到需要添加功能的模块的时候，由于项目中的代码历史因素比较多，第一件干的事情往往是重构整理代码，发现很多之前的代码写的时候没有注意的事情特别多，比如全局变量乱用；方法没有层次感，胡乱添加；对业务不了解的情况下，通过打补丁的方式实现功能等等。所以我决定写一篇文章，把自己的觉得实践中需要注意的一些事项，具体总结一下分享给大家。\n\n####4）[构建内存高效的应用](http://swift.gg/2015/09/21/building-memory-efficient-apps/)\n\n近年来，移动设备的性能越来越强大。然而，同桌面电脑相比，性能上总还是有一段不小的差距。同时，用户界面和交互设计的要求也越来越高。所以，为移动设备编写内存高效的应用仍然很有必要。\n\n####5）[Xcode 7 UI 测试初窥](http://mp.weixin.qq.com/s?__biz=MjM5NTIyNTUyMQ%3D%3D&hmsr=toutiao.io&idx=1&mid=210062364&sn=0e927a1364621a896c0d5d616a61b7de&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n单元测试非常适合用来做 app 的逻辑以及网络接口方面的测试，但是一个 app 所面向的最终人群还是使用的用户。对于用户来说，app 的功能和 UI 界面是否正确是判断这个 app 是否合格的更为直接标准。而传统的单元测试很难对 app 的功能或者 UI 进行测试。\n\n\n##技术纵横\n\n####1）[你为什么不分享](http://www.cnblogs.com/coffeedeveloper/p/4825177.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n这两天恰好有我的前boss在朋友圈分享他看到的文章，是关于分享的主题。作者在文章里把新人或者说菜鸟不肯分享的原因总结为害怕被所谓的高手/大牛所打脸而害怕分享。从我的经历来说，我认为这并非核心原因，仅仅是次要原因之一。因此特意写此文与大家探讨一下。\n\n####2）[Nicholas C. Zakas：我得到的最佳职业生涯建议](http://blog.jobbole.com/53812/)\n\n最近我与一同事有一次有意思的讨论。我们回忆了各自所走过的职业历程以及不同个性如何长期消极影响我们的职业。事实情况是，我曾经是那种从大学里走出来的令人讨厌的人（有些人可能会说我现在仍然是那种人，但这是另一回事儿）。当时我很傲慢并且很刻薄，是一个十足的愤青。我自以为我很了解自己的性格并且为这种性格感到骄傲。\n\n####3）[H5性能优化方案](http://ddtalk.github.io/blog/2015/09/07/dingding-first/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n对于一个H5的产品，功能无疑很重要，但是性能同样是用户体验中不可或缺的一环。原本H5的渲染性能就不及native的app，如果不把性能优化做起来，将极大地影响用户使用产品的积极性。\n\n####4）[如何高效的学习掌握新技术](http://www.cnblogs.com/dotey/p/4812633.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n学习新技术，就如探索一片新的领域，一般在心态上来说，都会有两种典型的心态，一种是恐慌和抗拒的，一种是积极和开放的，不同的心态会造成不同的结果。\n\n##开源函数库与工具\n\n####1）[Swift 开发者周刊（第 0 期）](http://doswift.io/archive/0.html)\n\n大家好，踩了各种坑之后，第 0 期《Swift 开发者周刊》终于和大家见面了。 \n目前周刊由 SwiftGG 翻译组 维护，每周推送最新的 Swift 文章和开源项目，帮助大家提高 Swift 姿势水平。 \n\n####2）[FreeBuilder](https://github.com/google/FreeBuilder?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nGoogle出品的基于注解自动生成Builder模式代码的函数库。\n\n####3）[腾讯 Android 与 iOS 开发工具镜像服务](http://android-mirror.bugly.qq.com:8080/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nXcodeGhost事件之后，开发工具的下载需要慎之又慎。\n\n####4）[F2etest](https://github.com/alibaba/f2etest)\n\n阿里巴巴出品的一个面向前端、测试、产品等岗位的多浏览器兼容性测试整体解决方案。\n\n![](https://raw.githubusercontent.com/alibaba/f2etest/master/imgs/screenshot1.jpg)\n\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二十期","slug":"020","date":"2015-09-20T00:00:00.000Z","updated":"2015-09-22T07:43:33.000Z","comments":true,"path":"2015/09/20/020/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/09/20/020/","excerpt":"","text":"业界新闻1）React Native for Android 发布今年早期，Facebook发布了React Native for iOS，并于昨日正式发布了React Native for Android。React Native将React on the Web带入了移动平台的开发，同时保留了速度、保真和原生应用的界面体验，引起国内外开发界的重视和关注。 Android开发1）深入理解Android之GradleGradle是当前非常“劲爆”得构建工具。本篇文章就是专为讲解Gradle而来。 2）Java反射最佳实践最简单优雅的使用反射 3）Android分包MultiDex原理详解当Android系统安装一个应用的时候，有一步是对Dex进行优化，这个过程有一个专门的工具来处理，叫DexOpt。DexOpt的执行过程是在第一次加载Dex文件的时候执行的。这个过程会生成一个ODEX文件，即Optimised Dex。执行ODex的效率会比直接执行Dex文件的效率要高很多。 4）Chromium的GPU进程启动过程分析Chromium除了有Browser进程和Render进程，还有GPU进程。GPU进程负责Chromium的GPU操作，例如Render进程通过GPU进程离屏渲染网页，Browser进程也是通过GPU进程将离屏渲染好的网页显示在屏幕上。Chromium之所以将GPU操作运行在独立进程中，是考虑到稳定性问题。毕竟GPU操作是硬件相关操作，硬件的差异性会引发一定的不稳性。本文分析GPU进程的启动过程。 5）Android主题动态切换开源库Prism基本原理Prism是一个全新的Android主题切换框架。虽然现在只是初步的发布，只具有一些基础功能，但已经足够强大了！在本系列文章中我会全方位地介绍Prism的使用方法，并告诉你怎样将它拓展到自己的工程中。 iOS开发1）Swift中的设计模式Swift是一门多范式编程语言。除了支持面向对象编程范式之外，还支持函数式编程范式，和泛型编程。这使得Swift可以使用函数式编程的某些优秀工具解决我们在面向对象编程中遇到的困难。在Swift中，一些模式已经被语言特性所吸收，你在使用Swift甚至察觉不出这类问题的存在；一些问题仍然存在，我们仍然需要某种设计模式，但实现起来会更为简便。 2）前Twitter iOS技术团队负责人：使用第三方库的四大准则直接使用第三方库能够最大程度缩短开发时长，开发者很难抵挡着近在眼前的“短期红利”，但“魔法神奇库”也有可能阻碍程序排错。本文作者Ben Sandofsky曾领导Twitter iOS应用技术团队，他给出了挑选库时的几条原则。 3）一个资深iOS开发者对于React Native的看法当我第一次尝试ReactNative的时候，我觉得这只是网页开发者涉足原生移动应用领域的歪门邪道。我认为一个js开发者可以使用javascript来构建iPhone应用确实是一件很酷的事情，但是我很快放弃了自己去使用它的念头。毕竟我因为爱好而从事ios原生开发多年，并且目前为止已经很熟悉这一套开发专业工具。 4）iOS 9 开发高级技巧：通过 12 个团队所提供的技巧来快速适配 iOS 9为了庆祝 iOS 9 的正式发布，作者咨询了一些朋友，让他们分享一下在适配最新版本 iOS 的过程中所需注意的一些事情。下文列出的就是如何加快速度适配 iOS 9 的绝妙建议。 5）iOS 统计打点那些事统计打点是 App 开发里很重要的一个环节，App 的运行状态、改版后的效果、用户的各种行为等都需要打点，市面上也有不少可供选择的第三方库。 技术纵横1）我的软件开发生涯作者10年开发经验总结。 2）对独立程序员的赞美帕金森定理告诉了我们，「在工作能够完成的时限内，工作量会一直增加，直到所有可用时间都被填充为止。」将其应用到软件上，这意味着应用程序倾向于成为臃肿软件（bloatware）、极为臃肿的程序，其复杂程度使得它们几乎不可能被调试和维护。今天，我们看到了更开心的反例，从过去到现在，由「隐士级的程序员」创造的有野心的产品。 3）技术选型：喷子、胆量和产品意识大多数技术都存在选型问题，因为技术的发展已经让一件事情可以有多种解决方案，选型问题就自然出现。前段时间也有人说过语言选型，这里举的例子是在组件、框架、服务的范畴。其中有相通之处，各位可以自行领会，不同之处待有闲之时另文专述。 4）全栈开发工程师就是个神话“全栈开发工程师（full stack developer）”一词经常出现在企业招聘的岗位描述中。但Hello Pretty联合创始人兼首席技术官Scott Hadfield在近日发表的一篇博文中指出，全栈开发工程师就是一个神话，即使不完全如此，用人单位也很难找到一个这样的人。 5）ReThought系列： 如何构建理想的开发团队 如何照顾团队中的新人 说说代码 开源函数库与工具1）2015年最棒的10个 JavaScript 框架JavaScript是最流行的前端开发程序设计语言。它为WEB开发者提供了能够设计出具有丰富功能、干净用户界面的WEB应用的能力。JavaScript框架使得WEB应用的设计变的简单，并且它能够提供很多的功能和方法。 2）AndFixAndFix 是阿里巴巴开源的 Android 应用热修复工具，帮助 Anroid 开发者修复应用的线上问题。 3）安卓书签网Android开发资料的汇总。","raw":"title: 平安科技移动开发二队技术周报 第二十期\ncategories: weekly\ndate: 2015-09-20\n---\n\n##业界新闻\n\n####1）[React Native for Android 发布](https://facebook.github.io/react-native/)\n\n今年早期，Facebook发布了React Native for iOS，并于昨日正式发布了React Native for Android。React Native将React on the Web带入了移动平台的开发，同时保留了速度、保真和原生应用的界面体验，引起国内外开发界的重视和关注。\n\n\n##Android开发\n\n####1）[深入理解Android之Gradle](http://android.jobbole.com/81436/?utm_source=tuicool)\n\nGradle是当前非常“劲爆”得构建工具。本篇文章就是专为讲解Gradle而来。\n\n####2）[Java反射最佳实践](https://github.com/tianzhijiexian/Android-Best-Practices/blob/master/2015.9/reflect/reflect.md)\n\n最简单优雅的使用反射\n\n####3）[Android分包MultiDex原理详解](http://blog.csdn.net/yzzst/article/details/48290701)\n\n当Android系统安装一个应用的时候，有一步是对Dex进行优化，这个过程有一个专门的工具来处理，叫DexOpt。DexOpt的执行过程是在第一次加载Dex文件的时候执行的。这个过程会生成一个ODEX文件，即Optimised Dex。执行ODex的效率会比直接执行Dex文件的效率要高很多。\n\n####4）[Chromium的GPU进程启动过程分析](http://blog.csdn.net/luoshengyang/article/details/48123761)\n\nChromium除了有Browser进程和Render进程，还有GPU进程。GPU进程负责Chromium的GPU操作，例如Render进程通过GPU进程离屏渲染网页，Browser进程也是通过GPU进程将离屏渲染好的网页显示在屏幕上。Chromium之所以将GPU操作运行在独立进程中，是考虑到稳定性问题。毕竟GPU操作是硬件相关操作，硬件的差异性会引发一定的不稳性。本文分析GPU进程的启动过程。\n\n####5）[Android主题动态切换开源库Prism基本原理](http://www.devtf.cn/?p=1056)\n\nPrism是一个全新的Android主题切换框架。虽然现在只是初步的发布，只具有一些基础功能，但已经足够强大了！在本系列文章中我会全方位地介绍Prism的使用方法，并告诉你怎样将它拓展到自己的工程中。\n\n##iOS开发\n\n####1）[Swift中的设计模式](http://www.infoq.com/cn/articles/design-patterns-in-swift)\n\nSwift是一门多范式编程语言。除了支持面向对象编程范式之外，还支持函数式编程范式，和泛型编程。这使得Swift可以使用函数式编程的某些优秀工具解决我们在面向对象编程中遇到的困难。在Swift中，一些模式已经被语言特性所吸收，你在使用Swift甚至察觉不出这类问题的存在；一些问题仍然存在，我们仍然需要某种设计模式，但实现起来会更为简便。\n\n####2）[前Twitter iOS技术团队负责人：使用第三方库的四大准则](http://www.csdn.net/article/2015-09-15/2825703-when-to-avoid-libraries)\n\n直接使用第三方库能够最大程度缩短开发时长，开发者很难抵挡着近在眼前的“短期红利”，但“魔法神奇库”也有可能阻碍程序排错。本文作者Ben Sandofsky曾领导Twitter iOS应用技术团队，他给出了挑选库时的几条原则。\n\n####3）[一个资深iOS开发者对于React Native的看法](http://blog.csdn.net/zhe13/article/details/48439967#0-tsina-1-99344-397232819ff9a47a7b7e80a40613cfe1)\n\n当我第一次尝试ReactNative的时候，我觉得这只是网页开发者涉足原生移动应用领域的歪门邪道。我认为一个js开发者可以使用javascript来构建iPhone应用确实是一件很酷的事情，但是我很快放弃了自己去使用它的念头。毕竟我因为爱好而从事ios原生开发多年，并且目前为止已经很熟悉这一套开发专业工具。\n\n####4）[iOS 9 开发高级技巧：通过 12 个团队所提供的技巧来快速适配 iOS 9](https://realm.io/cn/news/tips-for-ios-9-development/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n为了庆祝 iOS 9 的正式发布，作者咨询了一些朋友，让他们分享一下在适配最新版本 iOS 的过程中所需注意的一些事情。下文列出的就是如何加快速度适配 iOS 9 的绝妙建议。\n\n####5）[iOS 统计打点那些事](http://limboy.me/ios/2015/09/09/ios-analytics.html?utm_source=tuicool)\n\n统计打点是 App 开发里很重要的一个环节，App 的运行状态、改版后的效果、用户的各种行为等都需要打点，市面上也有不少可供选择的第三方库。 \n\n\n##技术纵横\n\n####1）[我的软件开发生涯](http://www.cnblogs.com/unruledboy/p/DevCareer.html?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n作者10年开发经验总结。\n\n####2）[对独立程序员的赞美](http://www.labazhou.net/2015/09/a-salute-to-solo-programmers/)\n\n帕金森定理告诉了我们，「在工作能够完成的时限内，工作量会一直增加，直到所有可用时间都被填充为止。」将其应用到软件上，这意味着应用程序倾向于成为臃肿软件（bloatware）、极为臃肿的程序，其复杂程度使得它们几乎不可能被调试和维护。今天，我们看到了更开心的反例，从过去到现在，由「隐士级的程序员」创造的有野心的产品。\n\n####3）[技术选型：喷子、胆量和产品意识](http://ericliang.info/technology-selection-trolls-courage-and-product-sense/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n大多数技术都存在选型问题，因为技术的发展已经让一件事情可以有多种解决方案，选型问题就自然出现。前段时间也有人说过语言选型，这里举的例子是在组件、框架、服务的范畴。其中有相通之处，各位可以自行领会，不同之处待有闲之时另文专述。\n\n####4）[全栈开发工程师就是个神话](http://www.infoq.com/cn/news/2015/09/Stack-Ops)\n\n“全栈开发工程师（full stack developer）”一词经常出现在企业招聘的岗位描述中。但Hello Pretty联合创始人兼首席技术官Scott Hadfield在近日发表的一篇博文中指出，全栈开发工程师就是一个神话，即使不完全如此，用人单位也很难找到一个这样的人。\n\n####5）ReThought系列：\n\n* [如何构建理想的开发团队](https://www.phodal.com/blog/rethink-one-build-dream-team/)\n* [如何照顾团队中的新人](https://www.phodal.com/blog/rethink-one-help-new-hire/)\n* [说说代码](https://www.phodal.com/blog/rethink-3-about-code/)\n\n##开源函数库与工具\n\n####1）[2015年最棒的10个 JavaScript 框架](http://info.9iphp.com/2015-best-javascript-frameworks/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\nJavaScript是最流行的前端开发程序设计语言。它为WEB开发者提供了能够设计出具有丰富功能、干净用户界面的WEB应用的能力。JavaScript框架使得WEB应用的设计变的简单，并且它能够提供很多的功能和方法。\n\n####2）[AndFix](https://github.com/alibaba/AndFix)\n\nAndFix 是阿里巴巴开源的 Android 应用热修复工具，帮助 Anroid 开发者修复应用的线上问题。\n\n####3）[安卓书签网](https://github.com/ColorfulCat/AndroidGuide)\n\nAndroid开发资料的汇总。\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十九期","slug":"019","date":"2015-09-09T00:00:00.000Z","updated":"2015-09-22T07:43:18.000Z","comments":true,"path":"2015/09/09/019/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/09/09/019/","excerpt":"","text":"业界新闻1）重磅! Google 将于今年秋季重返中国市场, 预计 9 月末宣布据 The Information 消息 ，Google 最快将于今年秋季推出专为中国大陆定制的「妥协版 Google Play 商店」，当前正等待中国政府部门的审核。熟悉该计划的人士指出，Google 为建设和运营这个本土化应用商店做了全方位的规划，包括与一些中国公司建立合作伙伴关系来共推此事。 2）When is React Native Android coming?React Native Android发布倒计时。 3）LinkedIn发布旨在检测Android应用漏洞的工具QARKQARK的首秀是在8月23日的DEFCON 23上，之后便很快在GitHub上公布了源代码。QARK使用PLYJ——一个分析Java源码的Python工具，还使用了Beautiful Soup来分析Android manifest（配置文件）。而且，QARK通过使用多种反编译器（包括：Procyon, JD-Core, CFR,DEX2JAR, 和APKTool）并合并他们的分析结果，还可以处理编译后的二进制文件。 Android开发1）Log最佳实践通过本文，我们可以看到即使一个最简单的log都有很多点是可优化的，而且看到了我们之前一直写的模板式代码是多么枯燥乏味。通过这篇文章，大家可以看到一个优化的过程，相信大家都会喜欢最终的简单、美观、方便的log类去调试应用。 2）剖析Android中进程与线程调度之nice在计算机操作系统中，进程是进行资源分配和调度的基本单位，同时每个进程之内也可以存在多个线程。那么在Android系统（Linux Kernel）中，进程是如何去抢占资源，线程又是如何根据优先级切换呢，本文将尝试剖析这个问题，研究nice在Linux以及Android系统中的应用。 3）Android微信上的SVG&amp;version=11020201&amp;pass_ticket=%2Bs6pqujbse1gbtzw94A4fz3rneIoDGUk8aDHv3Qc4O1tU2cpG7IIyYKiaubpnWAZ)栅格图自身特点导致了高清资源同安装包体积之间的矛盾。这方面矢量图存在明显的优势，它可以在表达清晰图片的同时，不增加文件体积。而且只要你不重新设计图片，就用不着再去适配高dpi模式，矢量图什么分辨率都可以自适应。 4）Android内存泄露案例分析一款优秀的Android应用，不仅要有完善的功能，也要有良好的体验，而性能是影响体验的重要因素之一。内存泄露是Android开发中常见的性能问题。本文作者以真实案例演示内存泄露从发现、分析定位到最终解决的全过程。 5）手把手教你当微信运动第一名 – 利用Android Hook进行微信运动作弊当微信运动想要知道我们走了多少步的时候，微信app会询问android系统的计数传感器，随后计数传感器会返回我们行走的步数。因此，如果我们能够拦截微信运动和计数传感器之间的对话，然后伪造一个步数传递给微信运动就可以达到我们想要的作弊效果。 iOS开发1）Objective-C与Runtime笔者用了很大的篇幅和代码片段尝试去解释Objective-C最基本的一些概念，包括面向对象、消息派发、内存管理等等，并且也讨论了这些概念在Rumtime上的实现。 2）ReactiveCocoa2 源码浅析ReactiveCocoa 是一个重型的 FRP 框架，内容十分丰富，它使用了大量内建的 block，这使得其有强大的功能的同时，内部源码也比较复杂。本文研究的版本是2.4.4，小版本间的差别不是太大，无需担心此问题。 这里只探究其核心 RACSignal 源码及其相关部分。 3）浅谈Swift 2中的Objective-C指针在Objective-C中，开发者经常会用到指针，有些方法也需要直接去操作指针，本文作者详细介绍了如何在Swift中使用指针，而简而言之即为Swift指针类型是对C指针的包装，用.memory的setter/getter实现了解指针引用。 4）如何在ReactiveCocoa中写单元测试现在很多人在开发iOS时都使用ReactiveCocoa，它是一个函数式和响应式编程的框架，使用Signal来代替KVO、Notification、Delegate和Target-Action等传递消息和解决对象之间状态与状态的依赖过多问题。但很多时候使用它之后，如何编写单元测试来验证程序是否正确呢？下面首先了解MVVM架构，然后通过一个例子来讲述我如何在RAC(ReactiveCocoa简称)中使用Kiwi来编写单元测试。 5）我们是如何创建iOS版的Guillotine菜单动画的 技术纵横1）Google新logo是如何缩减13000字节的有人在Quora上提问：Google的新logo是如何做到只有305字节的？旧logo的大小有14000字节之多。来自多伦多的UI设计师Ilya Yakubovich的回答1万+的投票。 2）HTTP/2 与 WEB 性能优化HTTP/2 究竟会给前端带来什么，什么都不是？还是像某些人说的「让前端那些优化小伎俩直接退休」？ 3）A practical introduction to functional programmingMany functional programming articles teach abstract functional techniques. That is, composition, pipelining, higher order functions. This one is different. It shows examples of imperative, unfunctional code that people write every day and translates these examples to a functional style. 4）Java 8 被动迭代式特性介绍本文首先对迭代设计模式进行简单介绍，然后对 Java 8 引入的 Lambda 表达式进行介绍，接下来重点介绍了 Java 8 与较早 JDK 版本对于集合迭代读取操作的不同点，并通过示例代码形式进行解释，最后对该特性进行总结。 5）细说JavaScript异步函数发展历程对大部分JavaScript开发者而言，async函数仍是新鲜事物，其发展经历了漫长的旅程。本文将梳理总结JavaScript异步函数的发展历程，并表示未来async函数将成为实现异步的主要方式。 开源函数库与工具1）vb-android-app-qualityGradle标准的android质量工具包。 2）BuildingBlocks积木 – 以知乎日报为数据展现内容；以选项菜单为功能扩展入口；以 Material Design 为主导设计 UI，已帮你完成了应用整体框架的搭建，希望你能利用她快速搭建属于自己的应用。","raw":"title: 平安科技移动开发二队技术周报 第十九期\ncategories: weekly\ndate: 2015-09-09\n---\n\n##业界新闻\n\n####1）[重磅! Google 将于今年秋季重返中国市场, 预计 9 月末宣布](http://cn.technode.com/post/2015-09-05/google-china-return-play-app-store/)\n\n据 The Information 消息 ，Google 最快将于今年秋季推出专为中国大陆定制的「妥协版 Google Play 商店」，当前正等待中国政府部门的审核。熟悉该计划的人士指出，Google 为建设和运营这个本土化应用商店做了全方位的规划，包括与一些中国公司建立合作伙伴关系来共推此事。\n\n####2）[When is React Native Android coming?](http://www.reactnativeandroid.com/)\n\nReact Native Android发布倒计时。\n\n####3）[LinkedIn发布旨在检测Android应用漏洞的工具QARK](http://www.infoq.com/cn/news/2015/09/qark)\n\nQARK的首秀是在8月23日的DEFCON 23上，之后便很快在GitHub上公布了源代码。QARK使用PLYJ——一个分析Java源码的Python工具，还使用了Beautiful Soup来分析Android manifest（配置文件）。而且，QARK通过使用多种反编译器（包括：Procyon, JD-Core, CFR,DEX2JAR, 和APKTool）并合并他们的分析结果，还可以处理编译后的二进制文件。\n\n\n##Android开发\n\n####1）[Log最佳实践](https://github.com/tianzhijiexian/Android-Best-Practices/blob/master/2015.8/log/log.md)\n\n通过本文，我们可以看到即使一个最简单的log都有很多点是可优化的，而且看到了我们之前一直写的模板式代码是多么枯燥乏味。通过这篇文章，大家可以看到一个优化的过程，相信大家都会喜欢最终的简单、美观、方便的log类去调试应用。\n\n####2）[剖析Android中进程与线程调度之nice](http://droidyue.com/blog/2015/09/05/android-process-and-thread-schedule-nice/)\n\n在计算机操作系统中，进程是进行资源分配和调度的基本单位，同时每个进程之内也可以存在多个线程。那么在Android系统（Linux Kernel）中，进程是如何去抢占资源，线程又是如何根据优先级切换呢，本文将尝试剖析这个问题，研究nice在Linux以及Android系统中的应用。\n\n####3）[Android微信上的SVG](https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=207863967&idx=1&sn=3d7b07d528f38e9f812e8df7df1e3322&scene=0&key=dffc561732c226510058a809485453faeca197aabfd2758f76f3a8d1ae3e35e72762cfd56cf433051e7f57acf62feb69&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.10.5+build(14F27)&version=11020201&pass_ticket=%2Bs6pqujbse1gbtzw94A4fz3rneIoDGUk8aDHv3Qc4O1tU2cpG7IIyYKiaubpnWAZ)\n\n栅格图自身特点导致了高清资源同安装包体积之间的矛盾。这方面矢量图存在明显的优势，它可以在表达清晰图片的同时，不增加文件体积。而且只要你不重新设计图片，就用不着再去适配高dpi模式，矢量图什么分辨率都可以自适应。\n\n####4）[Android内存泄露案例分析](http://www.csdn.net/article/2015-09-07/2825631)\n\n一款优秀的Android应用，不仅要有完善的功能，也要有良好的体验，而性能是影响体验的重要因素之一。内存泄露是Android开发中常见的性能问题。本文作者以真实案例演示内存泄露从发现、分析定位到最终解决的全过程。\n\n####5）[手把手教你当微信运动第一名 – 利用Android Hook进行微信运动作弊](http://drops.wooyun.org/tips/8416)\n\n当微信运动想要知道我们走了多少步的时候，微信app会询问android系统的计数传感器，随后计数传感器会返回我们行走的步数。因此，如果我们能够拦截微信运动和计数传感器之间的对话，然后伪造一个步数传递给微信运动就可以达到我们想要的作弊效果。\n\n##iOS开发\n\n####1）[Objective-C与Runtime](http://springox.w18.net/2015/09/03/objectivecruntime/)\n\n笔者用了很大的篇幅和代码片段尝试去解释Objective-C最基本的一些概念，包括面向对象、消息派发、内存管理等等，并且也讨论了这些概念在Rumtime上的实现。\n\n####2）[ReactiveCocoa2 源码浅析](http://nathanli.cn/2015/08/27/reactivecocoa2-%E6%BA%90%E7%A0%81%E6%B5%85%E6%9E%90/)\n\nReactiveCocoa 是一个重型的 FRP 框架，内容十分丰富，它使用了大量内建的 block，这使得其有强大的功能的同时，内部源码也比较复杂。本文研究的版本是2.4.4，小版本间的差别不是太大，无需担心此问题。 这里只探究其核心 RACSignal 源码及其相关部分。\n\n####3）[浅谈Swift 2中的Objective-C指针](http://www.csdn.net/article/2015-09-07/2825641)\n\n在Objective-C中，开发者经常会用到指针，有些方法也需要直接去操作指针，本文作者详细介绍了如何在Swift中使用指针，而简而言之即为Swift指针类型是对C指针的包装，用.memory的setter/getter实现了解指针引用。\n\n####4）[如何在ReactiveCocoa中写单元测试](http://www.jianshu.com/p/412875512bd1)\n\n现在很多人在开发iOS时都使用ReactiveCocoa，它是一个函数式和响应式编程的框架，使用Signal来代替KVO、Notification、Delegate和Target-Action等传递消息和解决对象之间状态与状态的依赖过多问题。但很多时候使用它之后，如何编写单元测试来验证程序是否正确呢？下面首先了解MVVM架构，然后通过一个例子来讲述我如何在RAC(ReactiveCocoa简称)中使用Kiwi来编写单元测试。\n\n####5）[我们是如何创建iOS版的Guillotine菜单动画的](http://ios.jobbole.com/82286/)\n\n![](http://ww1.sinaimg.cn/large/7cc829d3gw1evqnzljx2sg20m80gowog.gif)\n\n\n##技术纵横\n\n####1）[Google新logo是如何缩减13000字节的](http://www.jointforce.com/jfperiodical/article/1028)\n\n有人在Quora上提问：Google的新logo是如何做到只有305字节的？旧logo的大小有14000字节之多。来自多伦多的UI设计师Ilya Yakubovich的回答1万+的投票。\n\n####2）[HTTP/2 与 WEB 性能优化](https://imququ.com/post/http2-and-wpo-1.html)\n\nHTTP/2 究竟会给前端带来什么，什么都不是？还是像某些人说的「让前端那些优化小伎俩直接退休」？\n\n####3）[A practical introduction to functional programming](http://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming)\n\nMany functional programming articles teach abstract functional techniques. That is, composition, pipelining, higher order functions. This one is different. It shows examples of imperative, unfunctional code that people write every day and translates these examples to a functional style.\n\n####4）[Java 8 被动迭代式特性介绍](http://www.ibm.com/developerworks/cn/java/j-lo-java8-iterator/index.html?ca=drs-)\n\n本文首先对迭代设计模式进行简单介绍，然后对 Java 8 引入的 Lambda 表达式进行介绍，接下来重点介绍了 Java 8 与较早 JDK 版本对于集合迭代读取操作的不同点，并通过示例代码形式进行解释，最后对该特性进行总结。\n\n####5）[细说JavaScript异步函数发展历程](http://www.csdn.net/article/2015-09-08/2825643-asynchronous-javascript)\n\n对大部分JavaScript开发者而言，async函数仍是新鲜事物，其发展经历了漫长的旅程。本文将梳理总结JavaScript异步函数的发展历程，并表示未来async函数将成为实现异步的主要方式。\n\n\n##开源函数库与工具\n\n####1）[vb-android-app-quality](https://github.com/vincentbrison/vb-android-app-quality)\n\nGradle标准的android质量工具包。\n\n####2）[BuildingBlocks](https://github.com/tangqi92/BuildingBlocks)\n\n积木 – 以知乎日报为数据展现内容；以选项菜单为功能扩展入口；以 Material Design 为主导设计 UI，已帮你完成了应用整体框架的搭建，希望你能利用她快速搭建属于自己的应用。\n\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十八期","slug":"018","date":"2015-09-02T00:00:00.000Z","updated":"2015-11-21T08:32:52.000Z","comments":true,"path":"2015/09/02/018/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/09/02/018/","excerpt":"","text":"业界新闻1）读完这个，你就清楚 Google logo 的变迁史了冷不丁地，Google 的 Logo 今天又换新款了。 Android开发1）开源、高效、跨平台：深剖Google FlatBuffers工作原理FlatBuffers是Google专为游戏开发而创建的开源、高效的跨平台序列化库，Facebook以其取代JSON来提升数据处理性能。本文作者介绍了在Android应用中使用FlatBuffers的方法，并与JSON对比，深剖FlatBuffers工作原理。 2）Android M 新的运行时权限开发者需要知道的一切Android在不断发展，最近的更新M非常不同，一些主要的变化例如运行时权限将有颠覆性影响。本文介绍关于Android运行时权限你需要知道的，包括如何在代码中实现。 3）ReactiveX和RxJava文档中文翻译想开始了解ReativeX？可以从这里开始。 4）Parse SDK：里面到底有什么宝贝？本文解密构建Parse SDKs时最具挑战性的一面：构造异步的 API，解耦架构，和实现API 一致性。 5）Android插件实例——360 DroidPlugin详解DroidPlugin是360手机助手在Android系统上实现了一种新的插件机制: 它可以在无需安装、修改的情况下运行APK文件,此机制对改进大型APP的架构，实现多团队协作开发具有一定的好处。 iOS开发1）苹果团队App开发流程本文包含了两部分，前半部分介绍Apple的工作流，并且加上了部分个人理解；后半部分是Apple用一个虚拟的项目展示了如何快速完成一个三轮迭代。 2）iOS编写高质量代码这是一篇读书笔记，快速记录各种高效率编程的技巧和方法。这些方法是为了提升编码质量和效率，高质量代码利于后期的维护和更新，毕竟不能一份代码到永远。 3）Swift学习: 从Objective-C到Swift 从Objective-C到Swift的语法差异。我们熟悉的Objective-C特性在Swift中如何展现。 从Objective-C到Swift的进步改进。研究对比Swift在安全性,易用性上的提升,给我们带来的新编程范式。 4）iOS面试题集锦（附答案）招聘一个靠谱的 iOS一文中面试题的答案总结。 5) 为什么人人都该懂点LLVMLLVM 是现在 Apple 开发使用的编译器，对于 iOS 开发者来说，了解一点 LLVM 的基本使用方式和原理会对开发有所帮助 — 最直接的就是你能明白 Xcode 项目的 Build Setting 中那一堆东西到底都是在做什么，这篇文章介绍了一些 LLVM 的基本工作流程，可以让你对 LLVM 有个大致的了解。 技术纵横1）职业规划：管理vs技术每个人都身怀天赋，但如果用会不会爬树能力来评判一只鱼，那它这辈子都会觉得自己是条蠢鱼” - 阿尔伯特.爱因斯坦 2）作为程序员最应该投资的是这十件事会写代码的确很重要，但是要拿到更好薪水，则更依赖于别人是否知道你的才能。换言之，你需要推销自己。下面是如何成功推销的秘诀。 3）前端开发人员为什么应该拿高薪现在是互联网公司的春天，很多公司如雨后春笋般发展，所以对前端开发的需求很旺盛，都是处在供小于求的情况。随便上招聘网一搜，北上广深这些一线城市不说，二线城市一个月的招聘消息都不少。更别说现在像竞鹿网这种新型招聘网站的出现，更是有利于求职者的。 开源函数库与工具1）MaterialDrawer一款简单强大的Material Desgin风格的侧滑菜单 2）KCon 2015 黑客大会幻灯片","raw":"title: 平安科技移动开发二队技术周报 第十八期\ncategories: weekly\ndate: 2015-09-02\n---\n\n##业界新闻\n\n####1）[读完这个，你就清楚 Google logo 的变迁史了](http://www.ifanr.com/557647)\n\n冷不丁地，Google 的 Logo 今天又换新款了。\n\n![](http://images.ifanr.cn/wp-content/uploads/2015/09/september-1st-doodle-do-not-translate-5078286822539264-hp.0.gif)\n\n\n\n##Android开发\n\n####1）[开源、高效、跨平台：深剖Google FlatBuffers工作原理](http://www.csdn.net/article/2015-08-31/2825579)\n\nFlatBuffers是Google专为游戏开发而创建的开源、高效的跨平台序列化库，Facebook以其取代JSON来提升数据处理性能。本文作者介绍了在Android应用中使用FlatBuffers的方法，并与JSON对比，深剖FlatBuffers工作原理。\n\n####2）[Android M 新的运行时权限开发者需要知道的一切](http://gold.xitu.io/entry/55e2fa1a00b075a5f29a261c)\n\nAndroid在不断发展，最近的更新M非常不同，一些主要的变化例如运行时权限将有颠覆性影响。本文介绍关于Android运行时权限你需要知道的，包括如何在代码中实现。\n\n####3）[ReactiveX和RxJava文档中文翻译](http://mcxiaoke.gitbooks.io/rxdocs/content/)\n\n想开始了解ReativeX？可以从这里开始。\n\n####4）[Parse SDK：里面到底有什么宝贝？](http://www.oschina.net/translate/the-parse-sdk-whats-inside?utm_source=tuicool)\n\n本文解密构建Parse SDKs时最具挑战性的一面：构造异步的 API，解耦架构，和实现API 一致性。\n\n####5）[Android插件实例——360 DroidPlugin详解](http://blog.csdn.net/yzzst/article/details/48093567)\n\nDroidPlugin是360手机助手在Android系统上实现了一种新的插件机制: 它可以在无需安装、修改的情况下运行APK文件,此机制对改进大型APP的架构，实现多团队协作开发具有一定的好处。\n\n##iOS开发\n\n####1）[苹果团队App开发流程](http://atleeon.com/write/2015/08/30/fake-it-till-you-make-it/)\n\n本文包含了两部分，前半部分介绍Apple的工作流，并且加上了部分个人理解；后半部分是Apple用一个虚拟的项目展示了如何快速完成一个三轮迭代。\n\n####2）[iOS编写高质量代码](http://segmentfault.com/a/1190000003694112)\n\n这是一篇读书笔记，快速记录各种高效率编程的技巧和方法。这些方法是为了提升编码质量和效率，高质量代码利于后期的维护和更新，毕竟不能一份代码到永远。\n\n####3）[Swift学习: 从Objective-C到Swift](https://github.com/100mango/zen/blob/master/Swift%E5%AD%A6%E4%B9%A0%EF%BC%9A%E4%BB%8EObjective-C%E5%88%B0Swift/Swift%E5%AD%A6%E4%B9%A0%EF%BC%9A%E4%BB%8EObjective-C%E5%88%B0Swift.md)\n\n* 从Objective-C到Swift的语法差异。我们熟悉的Objective-C特性在Swift中如何展现。\n* 从Objective-C到Swift的进步改进。研究对比Swift在安全性,易用性上的提升,给我们带来的新编程范式。\n\n####4）[iOS面试题集锦（附答案）](https://github.com/ChenYilong/iOSInterviewQuestions)\n\n[招聘一个靠谱的 iOS](http://blog.sunnyxx.com/2015/07/04/ios-interview/)一文中面试题的答案总结。\n\n![](https://camo.githubusercontent.com/e80430f344c68a6c91dd755b11130ba23a091e29/687474703a2f2f7777772e726573756d657461726765742e636f6d2f626c6f672f77702d636f6e74656e742f75706c6f6164732f323031332f30362f6261642d696e746572766965772e6a7067)\n\n####5) [为什么人人都该懂点LLVM](http://adriansampson.net/blog/llvm.html)\n\nLLVM 是现在 Apple 开发使用的编译器，对于 iOS 开发者来说，了解一点 LLVM 的基本使用方式和原理会对开发有所帮助 -- 最直接的就是你能明白 Xcode 项目的 Build Setting 中那一堆东西到底都是在做什么，这篇文章介绍了一些 LLVM 的基本工作流程，可以让你对 LLVM 有个大致的了解。\n\n\n\n##技术纵横\n\n####1）[职业规划：管理vs技术](http://www.cnblogs.com/moonz-wu/p/4776439.html)\n\n每个人都身怀天赋，但如果用会不会爬树能力来评判一只鱼，那它这辈子都会觉得自己是条蠢鱼\" - 阿尔伯特.爱因斯坦\n\n####2）[作为程序员最应该投资的是这十件事](http://www.cocoachina.com/programmer/20150901/12690.html)\n\n会写代码的确很重要，但是要拿到更好薪水，则更依赖于别人是否知道你的才能。换言之，你需要推销自己。下面是如何成功推销的秘诀。\n\n####3）[前端开发人员为什么应该拿高薪](http://yalishizhude.github.io/2015/08/27/salary/)\n\n现在是互联网公司的春天，很多公司如雨后春笋般发展，所以对前端开发的需求很旺盛，都是处在供小于求的情况。随便上招聘网一搜，北上广深这些一线城市不说，二线城市一个月的招聘消息都不少。更别说现在像竞鹿网这种新型招聘网站的出现，更是有利于求职者的。\n\n\n\n##开源函数库与工具\n\n####1）[MaterialDrawer](https://github.com/mikepenz/MaterialDrawer)\n\n一款简单强大的Material Desgin风格的侧滑菜单\n\n![](https://raw.githubusercontent.com/mikepenz/MaterialDrawer/develop/DEV/github/screenshots2.jpg)\n\n####2）[KCon 2015 黑客大会幻灯片](https://github.com/knownsec/KCon/tree/master/KCon%202015)\n\n![](http://img.blog.csdn.net/20150902122724994?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十七期","slug":"017","date":"2015-08-27T00:00:00.000Z","updated":"2015-11-21T08:32:47.000Z","comments":true,"path":"2015/08/27/017/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/08/27/017/","excerpt":"","text":"业界新闻1）锤子科技2015夏季新品发布会锤子科技于8月25日晚19:30在上海举办2015夏季手机新品发布会，发布了一款面向年轻人售价899元起的坚果手机，“漂亮的不像实力派”。 Android开发1）Android 6.0 中的新技术最近 Google 正式发布了 Android M，并命名为“棉花糖”（Marshmallow），对于开发者来说，有哪些新的技术和变化呢？本文尝试总结一下 Android 6.0（API 23）给开发者带来新的技术和改变。 2）Android NestedScrolling 实战从 Android 5.0 Lollipop 开始提供一套 API 来支持嵌入的滑动效果。同样在最新的 Support V4 包中也提供了前向的兼容。有了嵌入滑动机制，就能实现很多很复杂的滑动效果。在 Android Design Support 库中非常总要的 CoordinatorLayout 组件就是使用了这套机制，实现了 Toolbar 的收起和展开功能。 3）Android微信智能心跳方案微信移动客户端开发团队分享的智能心跳方案，干货一篇。 4）微信ANDROID客户端-会话速度提升70%的背后微信移动客户端开发团队另一篇干货，介绍了微信会话速度提升的背景和实践。 5）实战解析Android架构设计原则好的软件设计必须能够帮助开发者发展和扩充解决方案，保持代码清晰健壮，并且可扩展，易于维护，而不必每件事都重写代码。面对软件存在的问题，必须遵守SOLID原则，不要过度工程化，尽可能降低框架中模块的依赖性。 iOS开发1）这样好用的ReactiveCocoa，根本停不下来一篇有趣的介绍ReactiveCocoa的文章，行文通俗易懂，可以快速了解ReactiveCocoa能做什么。 2）iOS大型项目开发漫谈iOS项目开发的经验之谈，虽然题目有点夸大，但内容还不错。 3）Swift编程规范：保持代码优美的10个方法继Objective-C风格指南之后，RayWenderlich团队为帮助开发者实现代码的优美与一致性、可读性和简洁性，共同编写了Swift风格指南，包含命名、空格、注释、类和结构体、函数声明、闭包表达式、类型、控制流、分号等。 4）工程师的懒惰有利的懒惰是指讨厌重复而低效的任务，自己懒得做，就让工具做，将重复任务自动化。有利的懒惰能够极大地提高效率，节约时间。不利的懒惰会极大地妨碍我们成为优秀的工程师。 5）通过iOS 9 SFSafariViewController提供完整的Web浏览体验当前，移动应用和各种网络上的内容已无所不在。多年以来， iOS开发者都是要么在APP中创建自己的web浏览体验，要么让Safari来打开URL。这两种方法都有不可避免的缺点。不过，现在这一切都改变了， iOS 9引入了SFSafariViewController类。你可以通过它在APP中提供完整的web浏览体验，无需浪费重要的开发时间。 技术纵横1）做Web App 和 Native App之前，你需要考虑的四个方面随着HTML（超文本标记语言）第五版的更新，也就是大家常说的H5，在移动端，由于其相对较低的开发成本及强大的跨平台运行能力，越来越多的信息型产品也开始选择这样轻量级的H5页面进行快速迭代，同时借用微信等平台快速触达用户。 2）如何写一本书？写博客/文章和写书还是有很大差别的，一个明显的差异是写文章会比较随意，而且应该尽量保持精简。一篇文章提供一些信息即可，应该尽量远离细节（如果写一篇教程，则另当别论）。而写书则应该尽可能的深入细节，尽可能可以让读者依书自修。 3）SDK之我理解的SDKSDK其实就是把每个应用接入相同功能都要做一遍的工作抽离出来，做成公共组件，然后无偿提供给别人使用的东西。他最大的价值都是代码复用和降低工作的复杂度、理解成本。 4）什么才算是真正的编程能力？知乎上的一个热门讨论，你是如何认为的呢？ 5）成为核心程序员的一些建议成为核心程序员或技术榜样既是一个伟大的责任，也是一个很好的职业机遇，但中间的过程却是艰辛的。 开源函数库与工具1）SimplifyReader一款基于Google Material Design设计开发的Android客户端，包括新闻简读，图片浏览，视频爽看 ，音乐轻听以及二维码扫描五个子模块。 2）dryrun一个让你可以可以快速尝试 Github 上的各开源项目。的工具。","raw":"title: 平安科技移动开发二队技术周报 第十七期\ncategories: weekly\ndate: 2015-08-27\n---\n\n##业界新闻\n\n####1）[锤子科技2015夏季新品发布会](http://tech.sina.com.cn/mobile/chuizi2015jianguo/index.shtml)\n\n锤子科技于8月25日晚19:30在上海举办2015夏季手机新品发布会，发布了一款面向年轻人售价899元起的坚果手机，“漂亮的不像实力派”。\n\n\n##Android开发\n\n####1）[Android 6.0 中的新技术](http://www.race604.com/whats-new-in-android6.0/)\n\n最近 Google 正式发布了 Android M，并命名为“棉花糖”（Marshmallow），对于开发者来说，有哪些新的技术和变化呢？本文尝试总结一下 Android 6.0（API 23）给开发者带来新的技术和改变。\n\n####2）[Android NestedScrolling 实战](http://www.race604.com/android-nested-scrolling/)\n\n从 Android 5.0 Lollipop 开始提供一套 API 来支持嵌入的滑动效果。同样在最新的 Support V4 包中也提供了前向的兼容。有了嵌入滑动机制，就能实现很多很复杂的滑动效果。在 Android Design Support 库中非常总要的 CoordinatorLayout 组件就是使用了这套机制，实现了 Toolbar 的收起和展开功能。\n\n####3）[Android微信智能心跳方案](http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=207243549&idx=1&sn=4ebe4beb8123f1b5ab58810ac8bc5994&3rd=MzA3MDU4NTYzMw==&scene=6#rd)\n\n微信移动客户端开发团队分享的智能心跳方案，干货一篇。\n\n####4）[微信ANDROID客户端-会话速度提升70%的背后](http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=207548094&idx=1&sn=1a277620bc28349368b68ed98fbefebe&3rd=MzA3MDU4NTYzMw==&scene=6#rd)\n\n微信移动客户端开发团队另一篇干货，介绍了微信会话速度提升的背景和实践。\n\n####5）[实战解析Android架构设计原则](http://www.csdn.net/article/2015-08-20/2825506?utm_source=androidweekly.cn)\n\n好的软件设计必须能够帮助开发者发展和扩充解决方案，保持代码清晰健壮，并且可扩展，易于维护，而不必每件事都重写代码。面对软件存在的问题，必须遵守SOLID原则，不要过度工程化，尽可能降低框架中模块的依赖性。\n\n\n\n\n\n##iOS开发\n\n####1）[这样好用的ReactiveCocoa，根本停不下来](http://supermao.cn/zhe-yang-hao-yong-de-reactivecocoagen-ben-ting-bu-xia-lai/)\n\n一篇有趣的介绍ReactiveCocoa的文章，行文通俗易懂，可以快速了解ReactiveCocoa能做什么。\n\n####2）[iOS大型项目开发漫谈](http://www.jianshu.com/p/921ab32c3c71)\n\niOS项目开发的经验之谈，虽然题目有点夸大，但内容还不错。\n\n####3）[Swift编程规范：保持代码优美的10个方法](http://www.csdn.net/article/2015-08-20/2825503-swift-style-guide)\n\n继Objective-C风格指南之后，RayWenderlich团队为帮助开发者实现代码的优美与一致性、可读性和简洁性，共同编写了Swift风格指南，包含命名、空格、注释、类和结构体、函数声明、闭包表达式、类型、控制流、分号等。\n\n####4）[工程师的懒惰](http://joeshang.github.io/2015/08/19/the-lazy-of-engineer/)\n\n有利的懒惰是指讨厌重复而低效的任务，自己懒得做，就让工具做，将重复任务自动化。有利的懒惰能够极大地提高效率，节约时间。不利的懒惰会极大地妨碍我们成为优秀的工程师。\n\n####5）[通过iOS 9 SFSafariViewController提供完整的Web浏览体验](http://www.cocoachina.com/ios/20150826/13157.html)\n\n当前，移动应用和各种网络上的内容已无所不在。多年以来， iOS开发者都是要么在APP中创建自己的web浏览体验，要么让Safari来打开URL。这两种方法都有不可避免的缺点。不过，现在这一切都改变了， iOS 9引入了SFSafariViewController类。你可以通过它在APP中提供完整的web浏览体验，无需浪费重要的开发时间。\n\n\n##技术纵横\n\n####1）[做Web App 和 Native App之前，你需要考虑的四个方面](http://www.cocoachina.com/webapp/20150825/13177.html)\n\n随着HTML（超文本标记语言）第五版的更新，也就是大家常说的H5，在移动端，由于其相对较低的开发成本及强大的跨平台运行能力，越来越多的信息型产品也开始选择这样轻量级的H5页面进行快速迭代，同时借用微信等平台快速触达用户。\n\n####2）[如何写一本书？](http://icodeit.org/2015/08/how-to-write-a-book/)\n\n写博客/文章和写书还是有很大差别的，一个明显的差异是写文章会比较随意，而且应该尽量保持精简。一篇文章提供一些信息即可，应该尽量远离细节（如果写一篇教程，则另当别论）。而写书则应该尽可能的深入细节，尽可能可以让读者依书自修。\n\n####3）[SDK之我理解的SDK](http://blog.bihe0832.com/SDK%E4%B9%8B%E6%88%91%E7%90%86%E8%A7%A3%E7%9A%84SDK.html)\n\nSDK其实就是把每个应用接入相同功能都要做一遍的工作抽离出来，做成公共组件，然后无偿提供给别人使用的东西。他最大的价值都是代码复用和降低工作的复杂度、理解成本。\n\n####4）[什么才算是真正的编程能力？](http://www.zhihu.com/question/31034164)\n\n知乎上的一个热门讨论，你是如何认为的呢？\n\n####5）[成为核心程序员的一些建议](http://developer.51cto.com/art/201508/489425.htm)\n\n成为核心程序员或技术榜样既是一个伟大的责任，也是一个很好的职业机遇，但中间的过程却是艰辛的。\n\n\n\n##开源函数库与工具\n\n####1）[SimplifyReader](https://github.com/SkillCollege/SimplifyReader)\n\n一款基于Google Material Design设计开发的Android客户端，包括新闻简读，图片浏览，视频爽看 ，音乐轻听以及二维码扫描五个子模块。\n\n####2）[dryrun](https://github.com/cesarferreira/dryrun)\n\n一个让你可以可以快速尝试 Github 上的各开源项目。的工具。\n\n![](https://raw.githubusercontent.com/cesarferreira/dryrun/master/extras/usage.gif)\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十六期","slug":"016","date":"2015-08-19T00:00:00.000Z","updated":"2015-08-19T05:59:11.000Z","comments":true,"path":"2015/08/19/016/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/08/19/016/","excerpt":"","text":"业界新闻1）iOS应用开发登陆Windows平台惹争议现在，开发者可以在Windows 10上用Visual Studio 2015来开发iOS应用了。这项技术之前曾在微软内部的Islandwood项目中被提及过，现在官方公布了正式名称：Windows Bridge for iOS。这个项目基于MIT开源许可证书，通过GitHub开源代码。 2）Android 6.0“准正式版”来也新版SDK包含最新的Android API以及相对应的开发工具，下载后将应用项目compileSdkVersion更新至Level 23，就可以测试自己的应用软件与新平台的兼容性了，尤其是自动备份、应用许可等新功能。 附上超炫的开机启动动画： Android开发1）关于Android的.so文件你所需要知道的应用程序二进制接口（Application Binary Interface）定义了二进制文件（尤其是.so文件）如何运行在相应的系统平台上，从使用的指令集，内存对齐到可用的系统函数库。在Android系统上，每一个CPU架构对应一个ABI：armeabi，armeabi-v7a，x86，mips，arm64-v8a，mips64，x86_64。 2）Android中的Flux架构Flux 架构 被Facebook使用来构建他们的客户端web应用。跟Clean Architecture一样，它不是为移动应用设计的，但是它的特性和简单可以让我们很好的在安卓项目中采用。 3）Android性能优化典范（三）Android性能优化典范的课程最近更新到第三季了，这次一共12个短视频课程，包括的内容大致有：更高效的ArrayMap容器，使用Android系统提供的特殊容器来避免自动装箱，避免使用枚举类型，注意onLowMemory与onTrimMemory的回调，避免内存泄漏，高效的位置更新操作，重复layout操作的性能影响，以及使用Batching，Prefetching优化网络请求，压缩传输数据等等使用技巧。 4）Android中插件开发篇之——应用换肤原理解析现在市场上有很多应用都有换肤的功能，就是能够提供给用户一些皮肤包，然后下载，替换。而且有些皮肤是要收费的。对于这个功能的话，其实没有什么技术难度的，但是他包含了一个现阶段很火的一个技术：动态加载。 5）最美应用－从Android研发工程师的角度之[厨房故事]本文我们将如约来分析下厨房故事这款德国app的技术堆栈。由于国内和国外网络环境，技术环境的不同，我们将会看到它和最美时光很不一样的东西。我们需要思考的是如果是自己开发一款全新的app时，会如何选择属于自己的技术堆栈呢？ iOS开发1）深入理解Objective-C：方法缓存只要用到Objective-C，我们每天都会跟方法调用打交道。我们都知道Objective-C的方法决议是动态的，但是在底层一个方法究竟是怎么找到的，方法缓存又是怎么运作的却鲜为人知。本文主要从源码角度探究了Objective-C在runtime层的方法决议（Method resolving）过程和方法缓存（Method cache）的实现。 2）How Not to Crash在iOS和Mac应用开发中如何避免写出Crash的bug，这一系列文章将告诉你需要注意的点。 3）给Objective-C的“悼词”作者Aaron Hillegass是知名的Objective-C开发者和布道者，他于90年代在NeXT公司工作，后来专注技术布道，是Big Nerd Ranch的创始人兼CEO。他撰写了多本Objective-C书籍，在苹果发布Swift后，目前他开始将布道重心转向Swift。 4）iOS APP安全杂谈这是一系列文章的开篇，主要讲解了： IOS APP本地文件安全 HTTP/HTTPS下通信数据安全性的思考 非安全从业者是中间人攻击的重灾区 5）我的iOS高效编程秘诀—坚持编程习惯习惯会影响一个人做事的方式，也会直接影响效率。我经常在项目完成后自我总结，有哪些做得好的，有哪些做得不好的？然后把一些好的流程记录下来，并且重新运用回编程中。那些能够坚持去做的流程，就变成了我的编程习惯，这些良好的习惯就成就了我高效的编程效率! 技术纵横1）我所理解的执行力 永远不放弃对目标的努力 多替别人着想 努力提高自己的综合能力 2）谈谈React.js的核心入门知识React并不是一个框架，React提供了一些新颖的概念、库 和编程原则让你能够同时在服务端和客户端编写快速、紧凑、漂亮的代码来构建 你的web应用。 3）LinkedIn副总裁谈工程师文化LinkedIn高级副总裁Kevin Scott根据自己的亲身经历，将组织和管理研发团队的经验梳理出来，总结为研发团队领导者赖以生存的四点智慧： 不要将建立公司与构建技术相混淆 在问“what”之前多问“how” 对研发来说，不断改进是有效的，但对研发文化却不行 不要等，写下你的文化宣言 4）美团前端组件化开发实践随着前端开发复杂度的日益提升，组件化开发应运而生，并随着 FIS、React 等优秀框架的出现遍地开花。这一过程同样发生在美团，面临业务规模的快速发展和工程师团队的不断扩张，我们历经引入组件化解决资源整合问题、逐步增强组件功能促进开发效率、重新打造新一代组件化方案适应全栈开发和共享共建等阶段，努力“controlling complexity”。本文将介绍我们组件化开发的实践过程。 5）如何成为一名卓越的前端工程师一个前端工程师的应该有的心态： 别光解决问题，想想究竟发生了什么 学会预见未来的浏览器发展趋势 阅读规范文档 阅读别人的代码 与比你聪明的人一起工作 “造轮子” 把你学到的东西都记录下来 开源函数库与工具1）国外著名后端云服务商Parse开源其Android&amp;iOS SDKSDK源码质量很高，对于日常工作是 SDK开发的开发者来说，是一个难得的学习机会。 2）显示 Markdown 格式文本自定义WebView基于MarkdownJ实现扩展的WebView，可用于加载MarkDown格式的文本或者文件，并以HTML形式显示出来。","raw":"title: \"平安科技移动开发二队技术周报 第十六期\"\ncategories: weekly\ndate: 2015-08-19\n---\n\n##业界新闻\n\n####1）[iOS应用开发登陆Windows平台惹争议](http://www.infoq.com/cn/news/2015/08/ios-apps-windows)\n\n现在，开发者可以在Windows 10上用Visual Studio 2015来开发iOS应用了。这项技术之前曾在微软内部的Islandwood项目中被提及过，现在官方公布了正式名称：Windows Bridge for iOS。这个项目基于MIT开源许可证书，通过GitHub开源代码。\n\n####2）[Android 6.0“准正式版”来也](http://www.techweb.com.cn/it/2015-08-18/2190751.shtml)\n\n新版SDK包含最新的Android API以及相对应的开发工具，下载后将应用项目compileSdkVersion更新至Level 23，就可以测试自己的应用软件与新平台的兼容性了，尤其是自动备份、应用许可等新功能。\n\n![](http://ww3.sinaimg.cn/large/a8e44e81jw1ev6rcu2ov6g20dw07tqv5.gif)\n\n附上超炫的开机启动动画：\n\n![](http://ww4.sinaimg.cn/large/66e8f898gw1ev74ewctxeg20mm05yb2b.gif)\n\n##Android开发\n\n####1）[关于Android的.so文件你所需要知道的](http://www.jianshu.com/p/cb05698a1968)\n\n应用程序二进制接口（Application Binary Interface）定义了二进制文件（尤其是.so文件）如何运行在相应的系统平台上，从使用的指令集，内存对齐到可用的系统函数库。在Android系统上，每一个CPU架构对应一个ABI：armeabi，armeabi-v7a，x86，mips，arm64-v8a，mips64，x86_64。\n\n####2）[Android中的Flux架构](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0816/3311.html)\n\nFlux 架构 被Facebook使用来构建他们的客户端web应用。跟Clean Architecture一样，它不是为移动应用设计的，但是它的特性和简单可以让我们很好的在安卓项目中采用。\n\n![](http://www.jcodecraeer.com/uploads/20150816/1439709800103525.png)\n\n####3）[Android性能优化典范（三）](http://www.csdn.net/article/2015-08-12/2825447-android-performance-patterns-season-3)\n\nAndroid性能优化典范的课程最近更新到第三季了，这次一共12个短视频课程，包括的内容大致有：更高效的ArrayMap容器，使用Android系统提供的特殊容器来避免自动装箱，避免使用枚举类型，注意onLowMemory与onTrimMemory的回调，避免内存泄漏，高效的位置更新操作，重复layout操作的性能影响，以及使用Batching，Prefetching优化网络请求，压缩传输数据等等使用技巧。\n\n####4）[Android中插件开发篇之----应用换肤原理解析](http://blog.csdn.net/jiangwei0910410003/article/details/47679843)\n\n现在市场上有很多应用都有换肤的功能，就是能够提供给用户一些皮肤包，然后下载，替换。而且有些皮肤是要收费的。对于这个功能的话，其实没有什么技术难度的，但是他包含了一个现阶段很火的一个技术：动态加载。\n\n####5）[最美应用－从Android研发工程师的角度之[厨房故事]](http://www.jianshu.com/p/c8c6dbe00787)\n\n本文我们将如约来分析下厨房故事这款德国app的技术堆栈。由于国内和国外网络环境，技术环境的不同，我们将会看到它和最美时光很不一样的东西。我们需要思考的是如果是自己开发一款全新的app时，会如何选择属于自己的技术堆栈呢？\n\n\n##iOS开发\n\n####1）[深入理解Objective-C：方法缓存](http://tech.meituan.com/DiveIntoMethodCache.html)\n\n只要用到Objective-C，我们每天都会跟方法调用打交道。我们都知道Objective-C的方法决议是动态的，但是在底层一个方法究竟是怎么找到的，方法缓存又是怎么运作的却鲜为人知。本文主要从源码角度探究了Objective-C在runtime层的方法决议（Method resolving）过程和方法缓存（Method cache）的实现。\n\n####2）[How Not to Crash](http://inessential.com/hownottocrash)\n\n在iOS和Mac应用开发中如何避免写出Crash的bug，这一系列文章将告诉你需要注意的点。\n\n####3）[给Objective-C的“悼词”](http://www.infoq.com/cn/news/2015/08/Eulogy-for-Objective-C?utm_source=infoq&utm_medium=popular_widget&utm_campaign=popular_content_list&utm_content=homepage)\n\n作者Aaron Hillegass是知名的Objective-C开发者和布道者，他于90年代在NeXT公司工作，后来专注技术布道，是Big Nerd Ranch的创始人兼CEO。他撰写了多本Objective-C书籍，在苹果发布Swift后，目前他开始将布道重心转向Swift。\n\n####4）[iOS APP安全杂谈](http://drops.wooyun.org/tips/6826)\n\n这是一系列文章的开篇，主要讲解了：\n\n* IOS APP本地文件安全\n* HTTP/HTTPS下通信数据安全性的思考\n* 非安全从业者是中间人攻击的重灾区\n\n####5）[我的iOS高效编程秘诀—坚持编程习惯](http://www.jianshu.com/p/a649847f781a)\n\n习惯会影响一个人做事的方式，也会直接影响效率。我经常在项目完成后自我总结，有哪些做得好的，有哪些做得不好的？然后把一些好的流程记录下来，并且重新运用回编程中。那些能够坚持去做的流程，就变成了我的编程习惯，这些良好的习惯就成就了我高效的编程效率!\n\n##技术纵横\n\n####1）[我所理解的执行力](http://blog.devtang.com/blog/2015/08/15/talk-about-execution/)\n\n* 永远不放弃对目标的努力\n* 多替别人着想\n* 努力提高自己的综合能力\n\n####2）[谈谈React.js的核心入门知识](http://wwsun.me/posts/react-getting-started.html)\n\nReact并不是一个框架，React提供了一些新颖的概念、库 和编程原则让你能够同时在服务端和客户端编写快速、紧凑、漂亮的代码来构建 你的web应用。\n\n####3）[LinkedIn副总裁谈工程师文化](http://www.infoq.com/cn/news/2015/08/LinkedIn-AdMob)\n\nLinkedIn高级副总裁Kevin Scott根据自己的亲身经历，将组织和管理研发团队的经验梳理出来，总结为研发团队领导者赖以生存的四点智慧：\n\n* 不要将建立公司与构建技术相混淆\n* 在问“what”之前多问“how”\n* 对研发来说，不断改进是有效的，但对研发文化却不行\n* 不要等，写下你的文化宣言\n\n####4）[美团前端组件化开发实践](http://tech.meituan.com/frontend-component-practice.html)\n\n随着前端开发复杂度的日益提升，组件化开发应运而生，并随着 FIS、React 等优秀框架的出现遍地开花。这一过程同样发生在美团，面临业务规模的快速发展和工程师团队的不断扩张，我们历经引入组件化解决资源整合问题、逐步增强组件功能促进开发效率、重新打造新一代组件化方案适应全栈开发和共享共建等阶段，努力“controlling complexity”。本文将介绍我们组件化开发的实践过程。\n\n####5）[如何成为一名卓越的前端工程师](http://jiongks.name/blog/how-to-become-a-great-front-end-engineer/?utm_source=tuicool)\n\n一个前端工程师的应该有的心态：\n\n* 别光解决问题，想想究竟发生了什么\n* 学会预见未来的浏览器发展趋势\n* 阅读规范文档\n* 阅读别人的代码\n* 与比你聪明的人一起工作\n* “造轮子”\n* 把你学到的东西都记录下来\n\n##开源函数库与工具\n\n####1）[国外著名后端云服务商Parse开源其Android&iOS SDK](http://blog.parse.com/announcements/open-sourcing-our-sdks/)\n\nSDK源码质量很高，对于日常工作是 SDK开发的开发者来说，是一个难得的学习机会。\n\n####2）[显示 Markdown 格式文本自定义WebView](https://github.com/falnatsheh/MarkdownView)\n\n基于MarkdownJ实现扩展的WebView，可用于加载MarkDown格式的文本或者文件，并以HTML形式显示出来。","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十五期","slug":"015","date":"2015-08-12T00:00:00.000Z","updated":"2015-08-18T05:01:30.000Z","comments":true,"path":"2015/08/12/015/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/08/12/015/","excerpt":"","text":"业界新闻1）谷歌重组更名Alphabet谷歌8月11日宣布重组。拉里-佩奇将与谢尔盖-布林创办新的控股公司Alphabet，两人分别出任CEO与总裁职位。Alphabet将取代谷歌在纳斯达克上市，谷歌目前所有股份将自动转换为同等数量与权益的Alphabet股份。原先的谷歌将成为Alphabet的全资子公司。 Alphabet公司架构： 2）BlackHat 2015 黑帽大会总结 Day 1 Day 2黑帽大会的要点总结 Android开发1）Android拆分与加载Dex的多种方案对比对于Android大型程序来说，64k方法数与线性内存的限制都是必须要考虑的问题。事实上，解决64K方法限制的唯一方法是拆分多dex,不同方案的差异在于需指定哪些类必须在主dex，这与我们期待的效果以及加载方式相关。 2）Android项目中如何用好构建神器Gradle本文作者贾吉鑫为大众点评Android工程师，在进行团队并行开发时，分库遇到的问题很多都要通过Gradle脚本解决。Gradle虽为构建神器，但学习曲线比较陡峭，要想在Android项目中用好Gradle必须要做到三点。 3）最美应用－从Android研发工程师的角度之[最美时光]最近发现最美应用这样一个网站，它会定期推介一些很有意思的app，作为开发者，每次看到很棒的app都会从实现角度进行剖析，想着如果是自己将如何实现呢？因此，就有了这个系列的文章，旨在从技术选型和架构的角度解读一些有意思的app。 4）跟我一起写EventBus系列跟随作者的脚步了解如何一步一步实现自己的EventBus。 5）10 ways to improve your Android app performanceGoogle工程师Boris Farber整理的最佳实践和应该避免的常见问题。 iOS开发1）Swift2面向协议编程在WWDC 2015上，Apple发布Swift语言的第二个修订版本–Swift 2，它包含了许多新的语言特性，这些特性能够帮助你更加方便得写代码。在这些新特性中，最令人兴奋的是protocol extensions。在第一个版本的Swift中，它能够扩展class、struct和enum类型的功能。现在，在Swift 2中，你也能扩展一个协议。 2）用 VIPER 构建 iOS 应用架构本篇文章由 Jeff Gilbert 和 Conrad Stoll 共同编写，通过构建一个基础示例应用，深入了解 VIPER，并从视图、交互器等多个部件理清 VIPER 的整体布局及思路。通过 VIPER 构建 iOS 应用架构，提升应用质量，迎接应用构建的新机遇！ 3）How We Built Tinder-Like Koloda Animation in SwiftKoloda动画效果实现原理解析。 4）UIWebView与JS的深度交互一篇实战的UIWebView和JS交互的文章。 技术纵横1）探索React生态圈React社区从其他领域（游戏渲染、ClojureScript、函数式编程）偷师学艺，结合前端面临的独特问题，提出了一系列解决方案。React社区在各方面都推动着前端社区往前进。这对整个社区都是好事。 2）关于烂代码的那些事（上）烂代码产生的原因和现象（中）如何尽可能高效和客观的评价代码的优劣 3）架构腐化之谜新技术层出不穷。过去十年时间里，我们经历了许多激动人心的新技术，包括那些新的框架、语言、平台、编程模型等等。这些新技术极大地改善了开发人员的工作环境，缩短了产品和项目的面世时间。然而作为在软件行业第一线工作多年的从业者，我们却不得不面对一个现实，那就是当初采用新技术的乐趣随着项目周期的增长而迅速减少。 开源函数库与工具1）KolodaYalantis出品的基于卡片的 Tinder-style 动画效果示例。 2）device-year-classFacebook出品的一个Android工具库，用来判断你的手机是哪个年代的旗舰机，也就是可以用来判断机器的性能，便于动态适配不同机型。","raw":"title: 平安科技移动开发二队技术周报 第十五期\ncategories: weekly\ndate: 2015-08-12\n---\n\n##业界新闻\n\n###1）[谷歌重组更名Alphabet](http://tech.sina.com.cn/z/google_restructuring/)\n\n谷歌8月11日宣布重组。拉里-佩奇将与谢尔盖-布林创办新的控股公司Alphabet，两人分别出任CEO与总裁职位。Alphabet将取代谷歌在纳斯达克上市，谷歌目前所有股份将自动转换为同等数量与权益的Alphabet股份。原先的谷歌将成为Alphabet的全资子公司。\n\nAlphabet公司架构：\n\n![](http://n.sinaimg.cn/default/20150811/Altt-fxftkpx3763765.jpg)\n\n###2）BlackHat 2015 黑帽大会总结 [Day 1](http://www.droidsec.cn/blackhat-2015-%E9%BB%91%E5%B8%BD%E5%A4%A7%E4%BC%9A-day1/) [Day 2](http://www.droidsec.cn/%E4%BD%A0%E7%9A%84%E6%8C%87%E7%BA%B9%E8%BF%98%E5%AE%89%E5%85%A8%E5%90%97%EF%BC%9F-blackhat-2015-%E9%BB%91%E5%B8%BD%E5%A4%A7%E4%BC%9A%E6%80%BB%E7%BB%93-day-2/)\n\n黑帽大会的要点总结\n\n##Android开发\n\n###1）[Android拆分与加载Dex的多种方案对比](http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=207151651&idx=1&sn=9eab282711f4eb2b4daf2fbae5a5ca9a&3rd=MzA3MDU4NTYzMw==&scene=6#rd)\n\n对于Android大型程序来说，64k方法数与线性内存的限制都是必须要考虑的问题。事实上，解决64K方法限制的唯一方法是拆分多dex,不同方案的差异在于需指定哪些类必须在主dex，这与我们期待的效果以及加载方式相关。\n\n###2）[Android项目中如何用好构建神器Gradle](http://www.csdn.net/article/2015-08-10/2825420)\n\n本文作者贾吉鑫为大众点评Android工程师，在进行团队并行开发时，分库遇到的问题很多都要通过Gradle脚本解决。Gradle虽为构建神器，但学习曲线比较陡峭，要想在Android项目中用好Gradle必须要做到三点。\n\n###3）[最美应用－从Android研发工程师的角度之[最美时光]](http://www.jianshu.com/p/bc7a3f022854)\n\n最近发现最美应用这样一个网站，它会定期推介一些很有意思的app，作为开发者，每次看到很棒的app都会从实现角度进行剖析，想着如果是自己将如何实现呢？因此，就有了这个系列的文章，旨在从技术选型和架构的角度解读一些有意思的app。\n\n###4）[跟我一起写EventBus系列](http://blog.mcxiaoke.com/2015/08/11/how-to-write-an-eventbus-part4/)\n\n跟随作者的脚步了解如何一步一步实现自己的EventBus。\n\n###5）[10 ways to improve your Android app performance](http://pan.baidu.com/s/1kTL7Tbh)\n\nGoogle工程师Boris Farber整理的最佳实践和应该避免的常见问题。\n\n##iOS开发\n\n###1）[Swift2面向协议编程](http://www.devtf.cn/?p=987)\n\n在WWDC 2015上，Apple发布Swift语言的第二个修订版本–Swift 2，它包含了许多新的语言特性，这些特性能够帮助你更加方便得写代码。在这些新特性中，最令人兴奋的是protocol extensions。在第一个版本的Swift中，它能够扩展class、struct和enum类型的功能。现在，在Swift 2中，你也能扩展一个协议。\n\n###2）[用 VIPER 构建 iOS 应用架构](http://news.oneapm.com/viper-ios-oneapm/)\n\n本篇文章由 Jeff Gilbert 和 Conrad Stoll 共同编写，通过构建一个基础示例应用，深入了解 VIPER，并从视图、交互器等多个部件理清 VIPER 的整体布局及思路。通过 VIPER 构建 iOS 应用架构，提升应用质量，迎接应用构建的新机遇！\n\n###3）[How We Built Tinder-Like Koloda Animation in Swift](https://yalantis.com/blog/how-we-built-tinder-like-koloda-in-swift/)\n\nKoloda动画效果实现原理解析。\n\n###4）[UIWebView与JS的深度交互](http://kittenyang.com/webview-javascript-bridge/)\n\n一篇实战的UIWebView和JS交互的文章。\n\n##技术纵横\n\n###1）[探索React生态圈](http://www.csdn.net/article/2015-08-04/2825370-react)\n\nReact社区从其他领域（游戏渲染、ClojureScript、函数式编程）偷师学艺，结合前端面临的独特问题，提出了一系列解决方案。React社区在各方面都推动着前端社区往前进。这对整个社区都是好事。\n\n###2）关于烂代码的那些事\n[（上）烂代码产生的原因和现象](http://blog.2baxb.me/archives/1343) \n[（中）如何尽可能高效和客观的评价代码的优劣](http://blog.2baxb.me/archives/1378)\n\n###3）[架构腐化之谜](http://insights.thoughtworkers.org/architecture-corruption/)\n\n新技术层出不穷。过去十年时间里，我们经历了许多激动人心的新技术，包括那些新的框架、语言、平台、编程模型等等。这些新技术极大地改善了开发人员的工作环境，缩短了产品和项目的面世时间。然而作为在软件行业第一线工作多年的从业者，我们却不得不面对一个现实，那就是当初采用新技术的乐趣随着项目周期的增长而迅速减少。\n\n\n##开源函数库与工具\n\n###1）[Koloda](https://github.com/Yalantis/Koloda)\n\nYalantis出品的基于卡片的 Tinder-style 动画效果示例。\n\n![](http://ww3.sinaimg.cn/large/005DI7Bigw1etqhadcssyg30m80goe89.gif)\n\n###2）[device-year-class](https://github.com/facebook/device-year-class)\n\nFacebook出品的一个Android工具库，用来判断你的手机是哪个年代的旗舰机，也就是可以用来判断机器的性能，便于动态适配不同机型。\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十四期","slug":"014","date":"2015-08-05T00:00:00.000Z","updated":"2015-08-18T05:02:11.000Z","comments":true,"path":"2015/08/05/014/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/08/05/014/","excerpt":"","text":"业界新闻1）Android Studio 1.3 正式发布Android Studio 1.3 正式进入稳定版，求稳的同学该升级了。作为今年改进最大的一个版本，Studio 1.3 包括新的 memory profiler ，改进的测试支持，并且包含了完整的 C++ 编辑和调试功能。 Android开发1）使用O-LLVM和NDK对Android应用进行混淆Android开发中经常需要对敏感信息进行加密，避免不了要将密钥存放在终端设备上，那么如何防止密钥被逆向出来呢？这是一个先有鸡还是先有蛋的悖论。相比较将密钥写在Java层，将其下移到NDK层是个更好的选择，本文就来介绍如何对NDK层代码进行混淆，以更好的保护我们的密钥。 2）Android平台免Root无侵入AOP框架Dexposed使用详解阿里巴巴无线事业部最近开源的Android平台下的无侵入运行期AOP框架Dexposed，该框架基于AOP思想，支持经典的AOP使用场景，可应用于日志记录，性能统计，安全控制，事务处理，异常处理等方面。 针对Android平台，Dexposed支持函数级别的在线热更新，例如对已经发布在应用市场上的宿主APK，当我们从crash统计平台上发现某个函数调用有bug，导致经常性crash，这时，可以在本地开发一个补丁APK，并发布到服务器中，宿主APK下载这个补丁APK并集成后，就可以很容易修复这个crash。 3）Android开发中，有哪些让你觉得相见恨晚的方法、类或接口？Android（Java）开发中，有哪些方法或类（接口）很实用，但是你却没能在第一时间知道它？当有一天你发现它时，只想说一句：“What the f**k，还有这个！” 4）如果让我重新设计一款Android App一篇关于Android app技术选型的探讨。 5）全自动化的 Android 编译管线本文阐述了作者在使用自动化工序去构建 Android 应用程序遇到的一些难题，大家不妨读读，希望能有所收获。 iOS开发1）The Swift Programming Language 中文版Swift 2.0来了！《The Swift Programming Language》中文版全新发布，37个章节全部完成更新！ 2）iOS 并发编程之 Operation Queues在 iOS 开发中，我们主要可以通过 Operation Queues、Dispatch Queues 和 Dispatch Sources 来提高应用的并发性，从而充分地利用多核心 CPU 的性能。本文主要阐述了 iOS 的并发编程模型，以及详细地介绍了 Operation Queues 的相关知识。 3）如何轻松实现iOS9多任务管理器效果(iCarousel高级教程)文章带领大家实现了一个类似 iOS 9 中 app switcher 的动画效果。虽然只是用 Core Animation 的相关内容也是可以实现类似效果的，但是作者选用了 iCarousel 这个特性丰富的强大动画库，这节省了非常多的时间和代码量。 技术纵横1）深入浅出React系列 React的设计哲学 - 简单之美 React开发神器Webpack 理解JSX和组件 2）跨终端Web之Hybrid AppNative App（以下简称Native）和Mobile Web（以下简称Web）二者混合开发的产物被称为Hybrid App（以下简称Hybrid）。Hybrid并不是什么新概念，最早可以追溯到Symbian时代，直到iOS和Android出现之后才充分展现出价值。 3）阿里百川技术分享：OneSDK与手机淘宝技术能力开放随着大量第三方SDK的使用，一些问题也慢慢暴露出来，比如： 多平台。不同的App管理体系，多个密钥带来的安全问题，以及多次接入带来的集成成本。 多风格。不同SDK的初始化方法、接口标准，以及编程风格。 复杂依赖。不同SDK本身的依赖不同，会带来依赖关系混乱，版本冲突，以及引入不需要的依赖的问题。 包大小。由于不同SDK可能包含重复能力，带来重复依赖，以及不需要的资源导入，会带来包大小的超标。 4）100分程序员的8个习惯 慎于说Yes 敢于说No 构建自己的知识体系 培养大局观 代码规范 代码审查 学习业务知识 坚持 5）360加固保，应用安全攻防的核心实现开发加固应用的技术门槛还是很高的。需要对于Android应用的运行机制具有非常深的理解。比如对于Dalvik虚拟机、DEX和OAT文件结构、动态链接的过程等都需要了然于胸。另外，还需要掌握攻防的技术，因为加固产品需要不停的技术迭代，对于常见的攻击方法进行防护。 开源函数库与工具1）PINRemoteImage图片社交 app 的始祖之一的Pinterest最近开源的一个 iOS 下的图片下载和缓存的框架。除了支持常规的异步下载和缓存之外，还支持是WepP或者gif这样的图片，同时支持JPEG图片的渐进式加载，堪比Android平台Facebook开源的Fresco。 2）WaveSwipeRefreshLayout水滴式下拉刷新","raw":"title: 平安科技移动开发二队技术周报 第十四期\ncategories: weekly\ndate: 2015-08-05\n---\n\n##业界新闻\n\n###1）[Android Studio 1.3 正式发布](http://chinagdg.org/2015/08/android-studio-1-3-%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83/)\n\nAndroid Studio 1.3 正式进入稳定版，求稳的同学该升级了。作为今年改进最大的一个版本，Studio 1.3 包括新的 memory profiler ，改进的测试支持，并且包含了完整的 C++ 编辑和调试功能。\n\n\n##Android开发\n\n###1）[使用O-LLVM和NDK对Android应用进行混淆](http://www.jianshu.com/p/0c23e0a886f4)\n\nAndroid开发中经常需要对敏感信息进行加密，避免不了要将密钥存放在终端设备上，那么如何防止密钥被逆向出来呢？这是一个先有鸡还是先有蛋的悖论。相比较将密钥写在Java层，将其下移到NDK层是个更好的选择，本文就来介绍如何对NDK层代码进行混淆，以更好的保护我们的密钥。\n\n###2）[Android平台免Root无侵入AOP框架Dexposed使用详解](http://www.jianshu.com/p/14edcb444c51)\n\n阿里巴巴无线事业部最近开源的Android平台下的无侵入运行期AOP框架Dexposed，该框架基于AOP思想，支持经典的AOP使用场景，可应用于日志记录，性能统计，安全控制，事务处理，异常处理等方面。\n\n针对Android平台，Dexposed支持函数级别的在线热更新，例如对已经发布在应用市场上的宿主APK，当我们从crash统计平台上发现某个函数调用有bug，导致经常性crash，这时，可以在本地开发一个补丁APK，并发布到服务器中，宿主APK下载这个补丁APK并集成后，就可以很容易修复这个crash。\n\n###3）[Android开发中，有哪些让你觉得相见恨晚的方法、类或接口？](http://www.zhihu.com/question/33636939)\n\nAndroid（Java）开发中，有哪些方法或类（接口）很实用，但是你却没能在第一时间知道它？当有一天你发现它时，只想说一句：“What the f**k，还有这个！”\n\n###4）[如果让我重新设计一款Android App](http://blog.csdn.net/ahence/article/details/47154419)\n\n一篇关于Android app技术选型的探讨。\n\n###5）[全自动化的 Android 编译管线](http://segmentfault.com/a/1190000003036406)\n\n本文阐述了作者在使用自动化工序去构建 Android 应用程序遇到的一些难题，大家不妨读读，希望能有所收获。\n\n##iOS开发\n\n###1）[The Swift Programming Language 中文版](http://wiki.jikexueyuan.com/project/swift/)\n\nSwift 2.0来了！《The Swift Programming Language》中文版全新发布，37个章节全部完成更新！\n\n###2）[iOS 并发编程之 Operation Queues](http://blog.leichunfeng.com/blog/2015/07/29/ios-concurrency-programming-operation-queues/#jtss-tsina)\n\n在 iOS 开发中，我们主要可以通过 Operation Queues、Dispatch Queues 和 Dispatch Sources 来提高应用的并发性，从而充分地利用多核心 CPU 的性能。本文主要阐述了 iOS 的并发编程模型，以及详细地介绍了 Operation Queues 的相关知识。\n\n###3）[如何轻松实现iOS9多任务管理器效果(iCarousel高级教程)](http://adad184.com/2015/08/01/advanced-icarousel-tutorial-copycat-of-ios9-task-tray/)\n\n文章带领大家实现了一个类似 iOS 9 中 app switcher 的动画效果。虽然只是用 Core Animation 的相关内容也是可以实现类似效果的，但是作者选用了 iCarousel 这个特性丰富的强大动画库，这节省了非常多的时间和代码量。\n\n##技术纵横\n\n###1）深入浅出React系列\n\n* [React的设计哲学 - 简单之美](http://www.infoq.com/cn/articles/react-art-of-simplity?utm_source=infoq&utm_medium=related_content_link&utm_campaign=relatedContent_articles_clk)\n* [React开发神器Webpack](http://www.infoq.com/cn/articles/react-and-webpack?utm_source=infoq&utm_medium=related_content_link&utm_campaign=relatedContent_articles_clk)\n* [理解JSX和组件](http://www.infoq.com/cn/articles/react-jsx-and-component?utm_source=infoq&utm_medium=related_content_link&utm_campaign=relatedContent_articles_clk)\n\n###2）[跨终端Web之Hybrid App](http://www.infoq.com/cn/articles/hybrid-app)\n\nNative App（以下简称Native）和Mobile Web（以下简称Web）二者混合开发的产物被称为Hybrid App（以下简称Hybrid）。Hybrid并不是什么新概念，最早可以追溯到Symbian时代，直到iOS和Android出现之后才充分展现出价值。\n\n###3）[阿里百川技术分享：OneSDK与手机淘宝技术能力开放](http://www.infoq.com/cn/news/2015/08/onesdk-shoutao)\n\n随着大量第三方SDK的使用，一些问题也慢慢暴露出来，比如：\n\n* 多平台。不同的App管理体系，多个密钥带来的安全问题，以及多次接入带来的集成成本。\n* 多风格。不同SDK的初始化方法、接口标准，以及编程风格。\n* 复杂依赖。不同SDK本身的依赖不同，会带来依赖关系混乱，版本冲突，以及引入不需要的依赖的问题。\n* 包大小。由于不同SDK可能包含重复能力，带来重复依赖，以及不需要的资源导入，会带来包大小的超标。\n\n###4）[100分程序员的8个习惯](http://www.infoq.com/cn/news/2015/08/best-coder-experience)\n\n* 慎于说Yes\n* 敢于说No\n* 构建自己的知识体系\n* 培养大局观\n* 代码规范\n* 代码审查\n* 学习业务知识\n* 坚持\n\n###5）[360加固保，应用安全攻防的核心实现](http://www.csdn.net/article/2015-07-30/2825338-jinjiang-360)\n\n开发加固应用的技术门槛还是很高的。需要对于Android应用的运行机制具有非常深的理解。比如对于Dalvik虚拟机、DEX和OAT文件结构、动态链接的过程等都需要了然于胸。另外，还需要掌握攻防的技术，因为加固产品需要不停的技术迭代，对于常见的攻击方法进行防护。\n\n##开源函数库与工具\n\n###1）[PINRemoteImage](https://github.com/pinterest/PINRemoteImage)\n\n图片社交 app 的始祖之一的Pinterest最近开源的一个 iOS 下的图片下载和缓存的框架。除了支持常规的异步下载和缓存之外，还支持是WepP或者gif这样的图片，同时支持JPEG图片的渐进式加载，堪比Android平台Facebook开源的[Fresco](https://github.com/facebook/fresco)。\n\n###2）[WaveSwipeRefreshLayout](https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout)\n\n水滴式下拉刷新\n\n![](https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout/blob/master/sc/animation.gif?raw=true)","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十三期","slug":"013","date":"2015-07-29T00:00:00.000Z","updated":"2015-08-18T05:00:23.000Z","comments":true,"path":"2015/07/29/013/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/07/29/013/","excerpt":"","text":"业界新闻1）Android曝严重安全漏洞 95%设备受影响网络安全公司Zimperium研究人员日前表示，他们在Android设备中发现了一处安全漏洞，允许黑客在用户全然不知的情况下远程访问Android设备。 2）2015年第一季度移动安全报告－阿里聚安全2015年第一季度，安卓平台受病毒感染设备呈上升趋势，感染总量高达2406.6万，平均每7.6台设备就有1台设备染毒。 3）谷歌确认Android M系统版本号为5.20谷歌曾经发布了Android M系统，新的系统虽然还没有应用在手机上面，但是已经有不少厂商对新系统感兴趣了。因为Android M具备很多 新功能，在内存占用等问题上也得到了优化。不过一直没有确认的是这款新系统究竟是以什么样的名字或者版本号出现。最近谷歌自己曝光了这一点。 Android开发1）Android DataBinding：再见Presenter，你好ViewModel！关于Android平台上MVP模式和MVVM模式的对比。 2）ORM 框架之 greenDAO 使用心得本文详细的介绍如何在 Android Studio 上使用 greenDAO，并结合代码总结一些使用过程中的心得。 3）Android中的Interpolator已图标形式介绍了Androdi系统中常见的Interpolator对应的函数及代码实现。 4）Android代码内存优化建议-OnTrimMemory优化OnTrimMemory 回调是 Android 4.0 之后提供的一个API，这个 API 是提供给开发者的，它的主要作用是提示开发者在系统内存不足的时候，通过处理部分资源来释放内存，从而避免被 Android 系统杀死。这样应用在下一次启动的时候，速度就会比较快。 5）android APP优化知识图谱本文是对Android app优化知识点的一个思维导图，可以对照着看看。 iOS开发1）那些用 Swift 写的 App 们Swift 已经正式面世一年，而它的 2.0 版本（在我看来是真正的 1.0）也将于今年秋季正式发布，这一年，到底有多少公司、团队开始使用 Swift，并且将他们的 App 用 Swift 来写了呢？ 2）使用Storyboards开发的10个小技巧Storyboard是我花时间钻研最多的一个领域。我非常喜欢可视化编程。只需要简单地将项目拖到画布中，更新位置信息，再设置一些描述信息，就已创建了一个用户界面而不用编写任何代码。这非常重要，因为用户界面的代码可以很快让你的代码变得一团糟。 3）如何手动解析CrashLog解决崩溃问题是移动应用开发者最日常的工作之一。如果是开发过程中遇到的崩溃，可以根据重现步骤调试，但线上版本就无能为力了。好在目前已经有很多不错的第三方CrashLog搜集平台（如友盟、Crashlytics等）为我们做好了解析工作，甚至在Xcode7里苹果也跟进了解析线上版本崩溃日志的功能，为开发者减轻了不少负担。尽管通常已经不需要我们手工处理CrashLog，了解CrashLog的还原原理和方法还是有必要的。 4）后台定位上传的代码实践LBS定位的社交APP其中主要的一个功能就是能够实时定位社交圈中各个成员的位置 后台实时上传位置则是非常重要的一个技术点接下来就来说说我关于这方面的实践经验。 5）Strings in Swift 2一篇来自官方的 Swift 博客，为我们讲述了新版本中 String 类型的设计思想的变化理由。对字符串的处理在各个语言中都是有很多细节需要注意的。在 Objective-C里由于一些历史原因，NSString 其实是有很多不足的。Swift 1 中的 String可以说是真正有机会抛开原来的历史包袱，而现在借着 Swift 2 中 protocol extension 的引入，String也有了更好的实现方式。 技术纵横1）IT 技术人必须思考的 15 个问题如何更好的成就自己！ 2）我心目中的理想团队非常理想化的想法，但不接地气。小而精的全栈式团队，就像一个曲线的波峰，看似美好，但不稳定。更喜欢朴实的工程团队，能安然处于谷底，每个人可能都不太牛，但通过各种土办法，能汇聚起来，所向无敌。 3）LinkedIn架构这十年LinkedIn后台系统架构十年来的一个演变过程。 4）移动统计分析—— 那些年一起踩过的坑出门在外，被问得最多的问题就是“应用开发者为啥要用TalkingData的统计分析，自己做不行吗，看起来很简单啊”。每当这时，我就觉得万般辛酸，内牛满面，在做统计分析平台的过程中遇到的无数坑，骑着羊驼在脑海呼啸而过。 5）为移动应用提供离线支持对移动应用的离线支持可以理解为应用在网络连接不稳定的情况下能够做出优雅的反应的能力。在移动设备这一相对较新的技术背景中，新的问题也随之产生，例如网络连接的正常或异常、高延迟以及低带宽等情况。这些问题出现的时间并不算长，刚刚上手进行移动开发的工程师对此并不十分了解。 开源函数库与工具1）Android File Grouping Plugin一款开源的Android Studio插件，能智能的对你的资源文件夹进行分类，当然，它并没有真的创建文件夹，一切都是虚拟的，自己感受下吧： 2）JSONExport将JSON对象导出成模型类的Mac OS X桌面应用（Swift），支持 Java、Swift、Objective-C。 3）gradle-dexinfo-plugin一个用于打印Android工程dex method count的Android Studio插件。","raw":"title: 平安科技移动开发二队技术周报 第十三期\ncategories: weekly\ndate: 2015-07-29\n---\n\n##业界新闻\n\n###1）[Android曝严重安全漏洞 95%设备受影响](http://tech.sina.com.cn/it/2015-07-27/doc-ifxfhxmr6490678.shtml)\n\n网络安全公司Zimperium研究人员日前表示，他们在Android设备中发现了一处安全漏洞，允许黑客在用户全然不知的情况下远程访问Android设备。\n\n###2）[2015年第一季度移动安全报告－阿里聚安全](http://gw.alicdn.com/tfscom/TB1GyqUHVXXXXbVXVXXAeRbFXXX.pdf?spm=0.0.0.0.Wa4Ofw&file=TB1GyqUHVXXXXbVXVXXAeRbFXXX.pdf)\n\n2015年第一季度，安卓平台受病毒感染设备呈上升趋势，感染总量高达2406.6万，平均每7.6台设备就有1台设备染毒。\n\n###3）[谷歌确认Android M系统版本号为5.20](http://tech.sina.com.cn/notebook/pad/2015-07-21/doc-ifxfaswm0921946.shtml)\n\n谷歌曾经发布了Android M系统，新的系统虽然还没有应用在手机上面，但是已经有不少厂商对新系统感兴趣了。因为Android M具备很多 新功能，在内存占用等问题上也得到了优化。不过一直没有确认的是这款新系统究竟是以什么样的名字或者版本号出现。最近谷歌自己曝光了这一点。\n\n\n##Android开发\n\n###1）[Android DataBinding：再见Presenter，你好ViewModel！](http://www.jianshu.com/p/4e3220a580f6)\n\n关于Android平台上MVP模式和MVVM模式的对比。\n\n###2）[ORM 框架之 greenDAO 使用心得](http://itangqi.me/android/using-greendao-experience/)\n\n本文详细的介绍如何在 Android Studio 上使用 greenDAO，并结合代码总结一些使用过程中的心得。\n\n###3）[Android中的Interpolator](http://blog.csdn.net/hpu_zyh/article/details/46995371)\n\n已图标形式介绍了Androdi系统中常见的Interpolator对应的函数及代码实现。\n\n###4）[Android代码内存优化建议-OnTrimMemory优化](http://androidperformance.com/2015/07/20/Android%E4%BB%A3%E7%A0%81%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE-OnTrimMemory%E4%BC%98%E5%8C%96/)\n\nOnTrimMemory 回调是 Android 4.0 之后提供的一个API，这个 API 是提供给开发者的，它的主要作用是提示开发者在系统内存不足的时候，通过处理部分资源来释放内存，从而避免被 Android 系统杀死。这样应用在下一次启动的时候，速度就会比较快。\n\n###5）[android APP优化知识图谱](http://blog.csdn.net/a910626/article/details/46955041)\n\n本文是对Android app优化知识点的一个思维导图，可以对照着看看。\n\n\n\n##iOS开发\n\n###1）[那些用 Swift 写的 App 们](http://imtx.me/archives/1940.html)\n\nSwift 已经正式面世一年，而它的 2.0 版本（在我看来是真正的 1.0）也将于今年秋季正式发布，这一年，到底有多少公司、团队开始使用 Swift，并且将他们的 App 用 Swift 来写了呢？\n\n###2）[使用Storyboards开发的10个小技巧](http://www.cocoachina.com/ios/20150727/12772.html)\n\nStoryboard是我花时间钻研最多的一个领域。我非常喜欢可视化编程。只需要简单地将项目拖到画布中，更新位置信息，再设置一些描述信息，就已创建了一个用户界面而不用编写任何代码。这非常重要，因为用户界面的代码可以很快让你的代码变得一团糟。\n\n###3）[如何手动解析CrashLog](http://foggry.com/blog/2015/07/27/ru-he-shou-dong-jie-xi-crashlog/)\n\n解决崩溃问题是移动应用开发者最日常的工作之一。如果是开发过程中遇到的崩溃，可以根据重现步骤调试，但线上版本就无能为力了。好在目前已经有很多不错的第三方CrashLog搜集平台（如友盟、Crashlytics等）为我们做好了解析工作，甚至在Xcode7里苹果也跟进了解析线上版本崩溃日志的功能，为开发者减轻了不少负担。尽管通常已经不需要我们手工处理CrashLog，了解CrashLog的还原原理和方法还是有必要的。\n\n###4）[后台定位上传的代码实践](http://adad184.com/2015/07/22/how-to-deal-with-background-location-update/)\n\nLBS定位的社交APP其中主要的一个功能就是能够实时定位社交圈中各个成员的位置 后台实时上传位置则是非常重要的一个技术点接下来就来说说我关于这方面的实践经验。\n\n###5）[Strings in Swift 2](https://developer.apple.com/swift/blog/?id=30)\n\n一篇来自官方的 Swift 博客，为我们讲述了新版本中 String 类型的设计思想的变化理由。对字符串的处理在各个语言中都是有很多细节需要注意的。在 Objective-C里由于一些历史原因，NSString 其实是有很多不足的。Swift 1 中的 String可以说是真正有机会抛开原来的历史包袱，而现在借着 Swift 2 中 protocol extension 的引入，String也有了更好的实现方式。\n\n##技术纵横\n\n###1）[IT 技术人必须思考的 15 个问题](http://blog.jobbole.com/76569/)\n\n如何更好的成就自己！\n\n###2）[我心目中的理想团队](http://mp.weixin.qq.com/s?__biz=MzAxNzM4OTE4Mg==&mid=210320484&idx=1&sn=eab0401c2a20b7d2fd117733807e1eed)\n\n非常理想化的想法，但不接地气。小而精的全栈式团队，就像一个曲线的波峰，看似美好，但不稳定。更喜欢朴实的工程团队，能安然处于谷底，每个人可能都不太牛，但通过各种土办法，能汇聚起来，所向无敌。\n\n###3）[LinkedIn架构这十年](http://colobu.com/2015/07/24/brief-history-scaling-linkedin/)\n\nLinkedIn后台系统架构十年来的一个演变过程。\n\n###4）[移动统计分析—— 那些年一起踩过的坑](http://www.infoq.com/cn/articles/TalkdingData-Mobile-Statistical-Analysis)\n\n出门在外，被问得最多的问题就是“应用开发者为啥要用TalkingData的统计分析，自己做不行吗，看起来很简单啊”。每当这时，我就觉得万般辛酸，内牛满面，在做统计分析平台的过程中遇到的无数坑，骑着羊驼在脑海呼啸而过。\n\n###5）[为移动应用提供离线支持](http://www.infoq.com/cn/articles/mobile-apps-offline-support)\n\n对移动应用的离线支持可以理解为应用在网络连接不稳定的情况下能够做出优雅的反应的能力。在移动设备这一相对较新的技术背景中，新的问题也随之产生，例如网络连接的正常或异常、高延迟以及低带宽等情况。这些问题出现的时间并不算长，刚刚上手进行移动开发的工程师对此并不十分了解。\n\n\n##开源函数库与工具\n\n###1）[Android File Grouping Plugin](http://www.dmytrodanylyk.com/pages/blog/android-file-grouping.html)\n\n一款开源的Android Studio插件，能智能的对你的资源文件夹进行分类，当然，它并没有真的创建文件夹，一切都是虚拟的，自己感受下吧：\n\n![](http://www.dmytrodanylyk.com/images/blog/file-grouping/preview.png)\n\n###2）[JSONExport](https://github.com/Ahmed-Ali/JSONExport)\n\n将JSON对象导出成模型类的Mac OS X桌面应用（Swift），支持 Java、Swift、Objective-C。\n\n###3）[gradle-dexinfo-plugin](https://github.com/mutualmobile/gradle-dexinfo-plugin)\n\n一个用于打印Android工程dex method count的Android Studio插件。","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十二期","slug":"012","date":"2015-07-22T00:00:00.000Z","updated":"2015-07-23T08:13:42.000Z","comments":true,"path":"2015/07/22/012/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/07/22/012/","excerpt":"","text":"业界新闻1）无人机将带领程序员进入一个新开发者时代将无人机和不同行业结合起来想象空间非常巨大。这种行业创新，只要能开发出不一样的产品体验，那么便有成功的可能。随着更多智能技术的加入，这种成功在消费领域更有前景。无人机的普及和爆发，翘首以待开发者引爆。 2）安卓很受伤：Black Hat 2015黑客大会上将公布的6个移动安全威胁Black Hat 2015召开在即，现在随小编一起瞅瞅下个月将在Black Hat USA公布的一些Android安全威胁吧。 Android开发1）深入理解Android NDK日志符号化现在的App基本都会采集上报崩溃时的日志信息，无论是采用第三方云平台，还是自己搭建云服务，都要将含调试信息的so动态库上传，实现云端日志符号化和云端可视化管理，本文对so动态库的组成结构进行了深入分析。 2）使用Android Support Annotations优化你的代码如果你还没有听说过Android Support Annotations 函数库，你将错过一个整洁的新软件包，它有助于你捕获程序中的bugs。该函数库包含了许多的Java注解，用于帮助Android Studio检测代码中可能存在的错误，并报告给开发者。注解类型有很多种，本文将只介绍其中几种，请一定要自己阅读文档以了解本文未介绍的其他注解类型。 3）Dexposed：Android平台免Root无侵入AOP框架近日，阿里巴巴无线事业部推出首个重量级Android开源项目，名为Dexposed，是一个Android平台下的无侵入运行期AOP框架。旨在解决像性能监控、在线热补丁等移动开发常见难题，典型使用场景为： AOP编程 插桩 (如测试、性能监控等) 在线热补丁 SDK hooking以提供更好的开发体验 4）Android安全输入设计与思考本文对市面上的Android安全键盘进行了总结，详细分析了为什么采用安全键盘，怎么样实现安全键盘等问题。以及各个产品线使用的安全键盘有何优劣点。以方便开发者对自我开发安全项目键盘进行总结与学习 5）CoordinatorLayout与滚动的处理CoordinatorLayout是Design Support Library中最重要与最难的部分，它实现了多种Material Design中提到的滚动效果。目前这个框架提供了几种不用写动画代码就能工作的方法，这些效果包括： 让浮动操作按钮上下滑动，为Snackbar留出空间。 扩展或者缩小Toolbar或者头部，让主内容区域有更多的空间。 控制哪个view应该扩展还是收缩，以及其显示大小比例，包括视差滚动效果动画。 iOS开发1）iOS应用架构谈 网络层设计方案网络层在一个App中也是一个不可缺少的部分，工程师们在网络层能够发挥的空间也比较大。另外，苹果对网络请求部分已经做了很好的封装，业界的AFNetworking也被广泛使用。其它的ASIHttpRequest，MKNetworkKit啥的其实也都还不错，但前者已经弃坑，后者也在弃坑的边缘。在实际的App开发中，Afnetworking已经成为了事实上各大App的标准配置。 2）腾讯Bugly干货分享：浅谈Swift在实际项目中的应用Swift发展已有一年多的时间，越来越多的开发者开始学习和使用这门语言，但在实际项目中的应用却还是比较少。本文作者从Swift的语义逻辑、易用性、语言特性、与Cocoa交互等全方位分享如何在实际工程中使用Swift开发。 3）玩转iOS 9的UIDynamicsUIDynamics在iOS7 SDK中是一个受欢迎的新加特性， 它基本上是一个支持UIView的物理引擎，可以让我们自定义UI 控件的物理特性。这个API浅显易懂，你可以轻松地创建很棒的动画或者过渡效果。之前我在 这篇文章 中已经涵盖了其基本要点， 而这一次，我们将看看iOS 9里的UIDynamics有什么新玩意。 4）关于自定义转场动画，我都告诉你这篇文章讲述了几种转场动画的自定义方式，并且每种方式附上一个示例，毕竟代码才是我们的语言，这样比较容易上手。其中主要有以下三种自定义方法，供大家参考： Push &amp; Pop Modal Segue 5）招聘一个靠谱的 iOS本文总结了面试人过程中的感受，包括对简历、算法、性格、iOS 基础、底层知识的看法和一些常问的面试题。 技术纵横1）简洁Java之道本文着重介绍编写简洁Java代码的最佳实践，特别是关于JDK8中新增的功能。简而言之，Java 8中Lambda表达式的引入让更加优雅的代码成为可能。这在用新的Java Streaming API处理集合时尤其明显。 2）Material Design：扁而不平关于Material Design设计哲学的一个探讨。 3）春晚微信红包，是怎么扛住一百亿次请求的？本文介绍了微信春晚红包从V0.1原型系统到正式上线的改进过程。 开源函数库与工具1）CircleRefreshLayout如下下拉刷新效果的开源代码实现： 2）StickerCamera这是一款集成了相机,图片裁剪,给图片贴贴图打标签的APP：","raw":"title: 平安科技移动开发二队技术周报 第十二期\ncategories: weekly\ndate: 2015-07-22\n---\n\n##业界新闻\n\n###1）[无人机将带领程序员进入一个新开发者时代](http://www.csdn.net/article/2015-07-20/2825251)\n\n将无人机和不同行业结合起来想象空间非常巨大。这种行业创新，只要能开发出不一样的产品体验，那么便有成功的可能。随着更多智能技术的加入，这种成功在消费领域更有前景。无人机的普及和爆发，翘首以待开发者引爆。\n\n###2）[安卓很受伤：Black Hat 2015黑客大会上将公布的6个移动安全威胁](http://www.freebuf.com/news/72615.html)\n\nBlack Hat 2015召开在即，现在随小编一起瞅瞅下个月将在Black Hat USA公布的一些Android安全威胁吧。\n\n\n##Android开发\n\n###1）[深入理解Android NDK日志符号化](http://www.csdn.net/article/2015-07-20/2825256)\n\n现在的App基本都会采集上报崩溃时的日志信息，无论是采用第三方云平台，还是自己搭建云服务，都要将含调试信息的so动态库上传，实现云端日志符号化和云端可视化管理，本文对so动态库的组成结构进行了深入分析。\n\n###2）[使用Android Support Annotations优化你的代码](http://www.jianshu.com/p/1d0faca34a6e)\n\n如果你还没有听说过Android Support Annotations 函数库，你将错过一个整洁的新软件包，它有助于你捕获程序中的bugs。该函数库包含了许多的Java注解，用于帮助Android Studio检测代码中可能存在的错误，并报告给开发者。注解类型有很多种，本文将只介绍其中几种，请一定要自己阅读文档以了解本文未介绍的其他注解类型。\n\n###3）[Dexposed：Android平台免Root无侵入AOP框架](http://www.infoq.com/cn/news/2015/07/dexposed)\n\n近日，阿里巴巴无线事业部推出首个重量级Android开源项目，名为Dexposed，是一个Android平台下的无侵入运行期AOP框架。旨在解决像性能监控、在线热补丁等移动开发常见难题，典型使用场景为：\n\n* AOP编程\n* 插桩 (如测试、性能监控等)\n* 在线热补丁\n* SDK hooking以提供更好的开发体验\n\n###4）[Android安全输入设计与思考](http://blog.csdn.net/yzzst/article/details/46741681)\n\n本文对市面上的Android安全键盘进行了总结，详细分析了为什么采用安全键盘，怎么样实现安全键盘等问题。以及各个产品线使用的安全键盘有何优劣点。以方便开发者对自我开发安全项目键盘进行总结与学习\n\n###5）[CoordinatorLayout与滚动的处理](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0717/3196.html)\n\nCoordinatorLayout是Design Support Library中最重要与最难的部分，它实现了多种Material Design中提到的滚动效果。目前这个框架提供了几种不用写动画代码就能工作的方法，这些效果包括：\n\n* 让浮动操作按钮上下滑动，为Snackbar留出空间。\n* 扩展或者缩小Toolbar或者头部，让主内容区域有更多的空间。\n* 控制哪个view应该扩展还是收缩，以及其显示大小比例，包括视差滚动效果动画。\n\n\n##iOS开发\n\n###1）[iOS应用架构谈 网络层设计方案](http://casatwy.com/iosying-yong-jia-gou-tan-wang-luo-ceng-she-ji-fang-an.html)\n\n网络层在一个App中也是一个不可缺少的部分，工程师们在网络层能够发挥的空间也比较大。另外，苹果对网络请求部分已经做了很好的封装，业界的AFNetworking也被广泛使用。其它的ASIHttpRequest，MKNetworkKit啥的其实也都还不错，但前者已经弃坑，后者也在弃坑的边缘。在实际的App开发中，Afnetworking已经成为了事实上各大App的标准配置。\n\n###2）[腾讯Bugly干货分享：浅谈Swift在实际项目中的应用](http://www.csdn.net/article/2015-07-16/2825231-tencent-swift/1)\n\nSwift发展已有一年多的时间，越来越多的开发者开始学习和使用这门语言，但在实际项目中的应用却还是比较少。本文作者从Swift的语义逻辑、易用性、语言特性、与Cocoa交互等全方位分享如何在实际工程中使用Swift开发。\n\n###3）[玩转iOS 9的UIDynamics](http://www.cocoachina.com/ios/20150716/12613.html)\n\nUIDynamics在iOS7 SDK中是一个受欢迎的新加特性， 它基本上是一个支持UIView的物理引擎，可以让我们自定义UI 控件的物理特性。这个API浅显易懂，你可以轻松地创建很棒的动画或者过渡效果。之前我在 这篇文章 中已经涵盖了其基本要点， 而这一次，我们将看看iOS 9里的UIDynamics有什么新玩意。\n\n###4）[关于自定义转场动画，我都告诉你](http://www.jianshu.com/p/38cd35968864)\n\n这篇文章讲述了几种转场动画的自定义方式，并且每种方式附上一个示例，毕竟代码才是我们的语言，这样比较容易上手。其中主要有以下三种自定义方法，供大家参考：\n\n* Push & Pop\n* Modal\n* Segue\n\n###5）[招聘一个靠谱的 iOS](http://blog.sunnyxx.com/2015/07/04/ios-interview/)\n\n本文总结了面试人过程中的感受，包括对简历、算法、性格、iOS 基础、底层知识的看法和一些常问的面试题。\n\n##技术纵横\n\n###1）[简洁Java之道](http://www.infoq.com/cn/articles/Concise-Java)\n\n本文着重介绍编写简洁Java代码的最佳实践，特别是关于JDK8中新增的功能。简而言之，Java 8中Lambda表达式的引入让更加优雅的代码成为可能。这在用新的Java Streaming API处理集合时尤其明显。\n\n###2）[Material Design：扁而不平](http://www.jianshu.com/p/63d6011213d1)\n\n关于Material Design设计哲学的一个探讨。\n\n###3）[春晚微信红包，是怎么扛住一百亿次请求的？](http://www.tuicool.com/articles/2yMZNr)\n\n本文介绍了微信春晚红包从V0.1原型系统到正式上线的改进过程。\n\n\n##开源函数库与工具\n\n###1）[CircleRefreshLayout](https://github.com/tuesda/CircleRefreshLayout)\n\n如下下拉刷新效果的开源代码实现：\n\n![](https://d13yacurqjgara.cloudfront.net/users/25514/screenshots/1797373/pull-down-refresh-iphone-app-interface-ux-design-ramotion.gif)\n\n###2）[StickerCamera](https://github.com/Skykai521/StickerCamera)\n\n这是一款集成了相机,图片裁剪,给图片贴贴图打标签的APP：\n\n![](https://github.com/Skykai521/StickerCamera/blob/master/screenshot/Screenshot_01.gif?raw=true)\n\n\n\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十一期","slug":"011","date":"2015-07-15T00:00:00.000Z","updated":"2015-07-23T08:13:30.000Z","comments":true,"path":"2015/07/15/011/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/07/15/011/","excerpt":"","text":"业界新闻1）黑莓谷歌合作研发“企业版”安卓黑莓公司拥抱安卓生态的速度之快，令人吃惊。黑莓年内推出安卓手机基本是板上钉钉，而日前，黑莓公开宣布，已经和谷歌建立了伙伴关系，将为企业用户定制出更加安全的安卓版本。 2）Google 收购 Android 十周年，多图看 Android 十年间的变迁北京时间7月11号晚上 8 点多，和安迪·鲁宾一起开发 Android 的搭档、现在的 Google Ventures 合伙人 Rich Miner 发了一条推文说：”距 Google 收购 Android 已经 10 年了，原来的 Android 团队成员们，周年快乐！” Android开发1）Android Data Binding代码实战本文介绍使用Android Data Binding技术，结合豆瓣电影搜索API，在RecycleView中展示电影列表。 2）Android Chromium WebView原理剖析系列Android从4.4起提供基于Chromium实现的WebView。此前WebView基于WebKit实现。WebKit提供网页解析、布局和绘制以及JS运行等基础功能。Chromium在WebKit基础上为WebView提供进程、线程和渲染等基础构架。因此基于Chromium实现的WebView更好地提供了网页浏览功能。 3）Android ViewDragHelper完全解析 自定义ViewGroup神器在自定义ViewGroup中，很多效果都包含用户手指去拖动其内部的某个View(eg:侧滑菜单等)，针对具体的需要去写好onInterceptTouchEvent和onTouchEvent这两个方法是一件很不容易的事，需要自己去处理：多手指的处理、加速度检测等等。好在官方在v4的支持包中提供了ViewDragHelper这样一个类来帮助我们方便的编写自定义ViewGroup。 4）Android 开发有哪些新技术出现？知乎上关于进来出现的Android开发新技术的讨论。 5）从ViewRootImpl类分析View绘制的流程我们知道Activity中的PhoneView对象帮我们创建了一个PhoneView内部类DecorView（父类为FrameLayout）窗口顶层视图，然后通过LayoutInflater将xml内容布局解析成View树形结构添加到DecorView顶层视图中id为content的FrameLayout父容器上面。到此，我们已经知道Activity的content内容布局最终会添加到DecorView窗口顶层视图上面，相信很多人也会有这样的疑惑：窗口顶层视图DecorView是怎么绘制到我们的手机屏幕上的呢？这篇博客来尝试着分析DecorView的绘制流程。 iOS开发1）JSPatch实现原理详解&lt;二&gt;距离上次写的有一个月的时间，在这段时间里 JSPatch 在不断地完善和改进，代码已经有很多变化，有一些修改值得写一下，作为上一篇的补充。 2）提高iOS开发效率的方法和工具这篇文章主要是介绍一下我在iOS开发中使用到的一些可以提升开发效率的方法和工具。 3）深入理解 Objective-C 2.0 Category无论一个类设计的多么完美，在未来的需求演进中，都有可能会碰到一些无法预测的情况。那怎么扩展已有的类呢？一般而言，继承和组合是不错的选择。但是在Objective-C 2.0中，又提供了category这个语言特性，可以动态地为已有类添加新行为。如今category已经遍布于Objective-C代码的各个角落，从Apple官方的framework到各个开源框架，从功能繁复的大型APP到简单的应用，catagory无处不在。本文对category做了比较全面的整理，希望对读者有所裨益。 4）Objective-C Runtime中的并发内存分配Objective-C的Runtime机制是Mac和iOS程序中的核心，而objc_msgSend函数是Runtime的核心，进言之，这个函数的核心正是方法缓存。今天将代领大家探索苹果是如何以一种线程安全且不影响程序性能的方式来调整和分配方法缓存所用内存的，其所用的技术也许是在其他关于线程安全的资料中从未使用的。 5）iOS 9 分屏多任务：入门（中文版）这是API或开发技术的初步文档。苹果公司提供这些信息主要是为了帮助你通过苹果产品使用这些技术或者编程接口而做好计划，该信息有可能会在未来发生改变，本文当中提到的软件应该以最终发布的操作系统测试和最终文档为准。未来有可能会提供新版本的文档信息。 技术纵横1）Mocks vs Stubs最近在学习JUnit，遇到了关于Mocks和Stubs的问题，仔细学习的过程中遇到了这篇文章。学习这个知识点的前提应该是在了解并且会使用JUnit的基础上。 开源函数库与工具1）Android-PictureTagView仿nice图片上打标签控件。 2）Android-Download-Manager-Pro并行执行下载任务的管理器。 3）好书分享《高效能程序员的修炼》知名博主和程序员Jeff Atwood力作，Coding Horror精华文章首度结集出版，程序员必读，告诉你：软件开发远不只是写代码那么简单。","raw":"title: 平安科技移动开发二队技术周报 第十一期\ncategories: weekly\ndate: 2015-07-15\n---\n\n##业界新闻\n\n###1）[黑莓谷歌合作研发“企业版”安卓](http://tech.qq.com/a/20150711/006567.htm)\n\n黑莓公司拥抱安卓生态的速度之快，令人吃惊。黑莓年内推出安卓手机基本是板上钉钉，而日前，黑莓公开宣布，已经和谷歌建立了伙伴关系，将为企业用户定制出更加安全的安卓版本。\n\n###2）[Google 收购 Android 十周年，多图看 Android 十年间的变迁](http://www.pingwest.com/ten-years-after-google-acquired-android/)\n\n北京时间7月11号晚上 8 点多，和安迪·鲁宾一起开发 Android 的搭档、现在的 Google Ventures 合伙人 Rich Miner 发了一条推文说：\"距 Google 收购 Android 已经 10 年了，原来的 Android 团队成员们，周年快乐！\"\n\n\n\n##Android开发\n\n###1）[Android Data Binding代码实战](http://www.aswifter.com/2015/07/11/android-data-binding-example/?from=toutiao)\n\n本文介绍使用Android Data Binding技术，结合豆瓣电影搜索API，在RecycleView中展示电影列表。\n\n###2）[Android Chromium WebView原理剖析系列](http://blog.csdn.net/luoshengyang/article/details/46569161)\n\nAndroid从4.4起提供基于Chromium实现的WebView。此前WebView基于WebKit实现。WebKit提供网页解析、布局和绘制以及JS运行等基础功能。Chromium在WebKit基础上为WebView提供进程、线程和渲染等基础构架。因此基于Chromium实现的WebView更好地提供了网页浏览功能。\n\n###3）[Android ViewDragHelper完全解析 自定义ViewGroup神器](http://blog.csdn.net/lmj623565791/article/details/46858663)\n\n在自定义ViewGroup中，很多效果都包含用户手指去拖动其内部的某个View(eg:侧滑菜单等)，针对具体的需要去写好onInterceptTouchEvent和onTouchEvent这两个方法是一件很不容易的事，需要自己去处理：多手指的处理、加速度检测等等。好在官方在v4的支持包中提供了ViewDragHelper这样一个类来帮助我们方便的编写自定义ViewGroup。\n\n###4）[Android 开发有哪些新技术出现？](http://www.zhihu.com/question/32037895/answer/54486823?utm_source=weibo&utm_medium=weibo_share&utm_content=share_answer&utm_campaign=share_button)\n\n知乎上关于进来出现的Android开发新技术的讨论。\n\n###5）[从ViewRootImpl类分析View绘制的流程](http://blog.csdn.net/feiduclear_up/article/details/46772477)\n\n我们知道Activity中的PhoneView对象帮我们创建了一个PhoneView内部类DecorView（父类为FrameLayout）窗口顶层视图，然后通过LayoutInflater将xml内容布局解析成View树形结构添加到DecorView顶层视图中id为content的FrameLayout父容器上面。到此，我们已经知道Activity的content内容布局最终会添加到DecorView窗口顶层视图上面，相信很多人也会有这样的疑惑：窗口顶层视图DecorView是怎么绘制到我们的手机屏幕上的呢？这篇博客来尝试着分析DecorView的绘制流程。\n\n##iOS开发\n\n###1）[JSPatch实现原理详解<二>](http://blog.cnbang.net/tech/2855/)\n\n距离上次写的<JSPatch实现原理详解>有一个月的时间，在这段时间里 JSPatch 在不断地完善和改进，代码已经有很多变化，有一些修改值得写一下，作为上一篇的补充。\n\n###2）[提高iOS开发效率的方法和工具](http://yyny.me/ios/%E6%8F%90%E9%AB%98iOS%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E5%B7%A5%E5%85%B7/)\n\n这篇文章主要是介绍一下我在iOS开发中使用到的一些可以提升开发效率的方法和工具。\n\n###3）[深入理解 Objective-C 2.0 Category](http://tech.meituan.com/DiveIntoCategory.html)\n\n无论一个类设计的多么完美，在未来的需求演进中，都有可能会碰到一些无法预测的情况。那怎么扩展已有的类呢？一般而言，继承和组合是不错的选择。但是在Objective-C 2.0中，又提供了category这个语言特性，可以动态地为已有类添加新行为。如今category已经遍布于Objective-C代码的各个角落，从Apple官方的framework到各个开源框架，从功能繁复的大型APP到简单的应用，catagory无处不在。本文对category做了比较全面的整理，希望对读者有所裨益。\n\n###4）[Objective-C Runtime中的并发内存分配](http://www.cocoachina.com/ios/20150706/12417.html?utm_source=tuicool)\n\nObjective-C的Runtime机制是Mac和iOS程序中的核心，而objc_msgSend函数是Runtime的核心，进言之，这个函数的核心正是方法缓存。今天将代领大家探索苹果是如何以一种线程安全且不影响程序性能的方式来调整和分配方法缓存所用内存的，其所用的技术也许是在其他关于线程安全的资料中从未使用的。\n\n###5）[iOS 9 分屏多任务：入门（中文版）](http://www.cocoachina.com/ios/20150714/12555.html)\n\n这是API或开发技术的初步文档。苹果公司提供这些信息主要是为了帮助你通过苹果产品使用这些技术或者编程接口而做好计划，该信息有可能会在未来发生改变，本文当中提到的软件应该以最终发布的操作系统测试和最终文档为准。未来有可能会提供新版本的文档信息。  \n\n##技术纵横\n\n###1）[Mocks vs Stubs](http://tracylihui.github.io/2015/07/12/Mocks%20Aren%E2%80%99t%20Stubs/)\n\n最近在学习JUnit，遇到了关于Mocks和Stubs的问题，仔细学习的过程中遇到了这篇文章。学习这个知识点的前提应该是在了解并且会使用JUnit的基础上。\n\n\n##开源函数库与工具\n\n###1）[Android-PictureTagView](https://github.com/saiwu-bigkoo/Android-PictureTagView)\n\n仿nice图片上打标签控件。\n\n###2）[Android-Download-Manager-Pro](https://github.com/majidgolshadi/Android-Download-Manager-Pro)\n\n并行执行下载任务的管理器。\n\n###3）[好书分享《高效能程序员的修炼》](http://product.dangdang.com/23295642.html)\n\n知名博主和程序员Jeff Atwood力作，Coding Horror精华文章首度结集出版，程序员必读，告诉你：软件开发远不只是写代码那么简单。\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第十期","slug":"010","date":"2015-07-09T00:00:00.000Z","updated":"2015-07-23T08:13:14.000Z","comments":true,"path":"2015/07/09/010/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/07/09/010/","excerpt":"","text":"业界新闻1）Java版权案谷歌上诉被驳回 甲骨文笑到最后美国最高法院周一驳回了谷歌(微博)在一宗软件版权诉案中提出的上诉申请，维持原先的判决，即允许甲骨文向使用其Java编程语言的公司收取专利版税。 Android开发1）Android开源项目源码解析第二期第二期的Android热门开源项目源码解析，想提高技术，那就多看成熟的开源代码吧。 2）Android Design Support Library的 代码实验非常详细的讲解如何基于Android Design Support Library来改造你的app。 3）RxJava &amp; RxAndroid备忘Android函数响应式编程资料汇总。 4）Android依赖注入：Dagger、RoboGuice和ButterKnife当涉及到Android上的依赖注入（DI）类库的时候，存在不少的选择，但怎么知道哪一个最适合你呢？当差别很细微的时候，看一看别人为什么中意一种或者另一种方案或许是很有用的。 5）Android屏幕适配全攻略(最权威的官方适配指导)Android的屏幕适配一直以来都在折磨着我们这些开发者，本篇文章以Google的官方文档为基础，全面而深入的讲解了Android屏幕适配的原因、重要概念、解决方案及最佳实践，我相信如果你能认真的学习本文，对于Android的屏幕适配，你将有所收获！ iOS开发1）iOS framework 跟 library 的比较深入比较了iOS 的 framework 跟 static library。 2）历届wwdc演讲实录－可收藏赶紧Mark一下吧！ 3）ReactiveCocoa自述：工作原理和应用ReactiveCocoa (RAC)是一个Objective-C的框架,它的灵感来自函数式响应式编程。 4）iOS8使用icloud对于开发者来说，如何用适当的方式来存储应用程序数据是一个比较重要的问题。 毫无疑问，任何应用都或多或少需要存储一些数据。对于一般的应用程序来说，被保存的数据各不相同，大部分时间都被存储在本地以便再次在相同的设备运行该应用程序。尽管这不是是唯一的选择。随着云服务的发展，一个应用程序也可以把数据存储在云端，既可以完全把数据存储在云端，也可以本地和远程都存储。 技术纵横1）移动H5前端性能优化指南移动H5前端性能优化的一些关键点。 2）前端自动化测试探索测试是完善的研发体系中不可或缺的一环。前端同样需要测试，你的css改动可能导致页面错位、js改动可能导致功能不正常。由于前端偏向GUI软件的特殊性，尽管测试领域工具层出不穷，在前端的自动化测试上面却实施并不广泛，很多人依旧以手工测试为主。本文试图探讨前端自动化测试领域的工具和实践。 开源函数库与工具1）Android Library FinderAndroid Studio第三方依赖库地址查找工具 2）dexposed阿里巴巴无线事业部的第一个重量级Android开源项目——无侵入的运行期AOP框架『Dexposed』，基于ROOT社区著名开源项目Xposed改造剥离了ROOT部分，演化为服务于所在应用自身的AOP框架。它支撑了阿里大部分App的在线分钟级客户端bugfix和线上调试能力。 3）AndroidRubberIndicator一个橡胶效果的ViewPager滑动指示器indicator，效果很赞哦","raw":"title: 平安科技移动开发二队技术周报 第十期\ncategories: weekly\ndate: 2015-07-09\n---\n\n##业界新闻\n\n###1）[Java版权案谷歌上诉被驳回 甲骨文笑到最后](http://tech.qq.com/a/20150630/005928.htm)\n\n美国最高法院周一驳回了谷歌(微博)在一宗软件版权诉案中提出的上诉申请，维持原先的判决，即允许甲骨文向使用其Java编程语言的公司收取专利版税。\n\n##Android开发\n\n###1）[Android开源项目源码解析第二期](http://codekk.com/open-source-project-analysis)\n\n第二期的Android热门开源项目源码解析，想提高技术，那就多看成熟的开源代码吧。\n\n###2）[Android Design Support Library的 代码实验](http://www.jianshu.com/p/1078568e859f?utm_campaign=hugo&utm_medium=reader_share&utm_content=note)\n\n非常详细的讲解如何基于Android Design Support Library来改造你的app。\n\n###3）[RxJava & RxAndroid备忘](http://chenqichao.me/2015/07/01/119-Mastering-RxAndroid/#0-tsina-1-25561-397232819ff9a47a7b7e80a40613cfe1)\n\nAndroid函数响应式编程资料汇总。\n\n###4）[Android依赖注入：Dagger、RoboGuice和ButterKnife](http://blog.jobbole.com/71885/)\n\n当涉及到Android上的依赖注入（DI）类库的时候，存在不少的选择，但怎么知道哪一个最适合你呢？当差别很细微的时候，看一看别人为什么中意一种或者另一种方案或许是很有用的。\n\n###5）[Android屏幕适配全攻略(最权威的官方适配指导)](http://blog.csdn.net/zhaokaiqiang1992/article/details/45419023)\n\nAndroid的屏幕适配一直以来都在折磨着我们这些开发者，本篇文章以Google的官方文档为基础，全面而深入的讲解了Android屏幕适配的原因、重要概念、解决方案及最佳实践，我相信如果你能认真的学习本文，对于Android的屏幕适配，你将有所收获！\n\n\n##iOS开发\n\n###1）[iOS framework 跟 library 的比较](http://www.knowstack.com/framework-vs-library-cocoa-ios/)\n\n深入比较了iOS 的 framework 跟 static library。\n\n###2）[历届wwdc演讲实录－可收藏](http://asciiwwdc.com/)\n\n赶紧Mark一下吧！\n\n###3）[ReactiveCocoa自述：工作原理和应用](http://www.cocoachina.com/ios/20150702/12302.html)\n\nReactiveCocoa (RAC)是一个Objective-C的框架,它的灵感来自函数式响应式编程。\n\n###4）[iOS8使用icloud](http://www.devtf.cn/?p=574)\n\n对于开发者来说，如何用适当的方式来存储应用程序数据是一个比较重要的问题。 毫无疑问，任何应用都或多或少需要存储一些数据。对于一般的应用程序来说，被保存的数据各不相同，大部分时间都被存储在本地以便再次在相同的设备运行该应用程序。尽管这不是是唯一的选择。随着云服务的发展，一个应用程序也可以把数据存储在云端，既可以完全把数据存储在云端，也可以本地和远程都存储。\n\n##技术纵横\n\n###1）[移动H5前端性能优化指南](http://isux.tencent.com/h5-performance.html)\n\n移动H5前端性能优化的一些关键点。\n\n###2）[前端自动化测试探索](http://web.jobbole.com/82621/)\n\n测试是完善的研发体系中不可或缺的一环。前端同样需要测试，你的css改动可能导致页面错位、js改动可能导致功能不正常。由于前端偏向GUI软件的特殊性，尽管测试领域工具层出不穷，在前端的自动化测试上面却实施并不广泛，很多人依旧以手工测试为主。本文试图探讨前端自动化测试领域的工具和实践。\n\n##开源函数库与工具\n\n###1）[Android Library Finder](https://github.com/cesarferreira/alfi)\n\nAndroid Studio第三方依赖库地址查找工具\n\n![](https://camo.githubusercontent.com/afa6678a7a5a98040461b3f597df3b2808b7abd5/68747470733a2f2f7261772e6769746875622e636f6d2f636573617266657272656972612f616c66692f6d61737465722f6578747261732f696d616765732f7465726d696e616c30312e676966)\n\n###2）[dexposed](https://github.com/alibaba/dexposed)\n\n阿里巴巴无线事业部的第一个重量级Android开源项目——无侵入的运行期AOP框架『Dexposed』，基于ROOT社区著名开源项目Xposed改造剥离了ROOT部分，演化为服务于所在应用自身的AOP框架。它支撑了阿里大部分App的在线分钟级客户端bugfix和线上调试能力。\n\n###3）[AndroidRubberIndicator](https://github.com/LyndonChin/AndroidRubberIndicator)\n\n一个橡胶效果的ViewPager滑动指示器indicator，效果很赞哦\n\n![](https://camo.githubusercontent.com/2ea6152b06aa5f9ca21ab7ff0a83830f73f48fbe/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3330333233342f73637265656e73686f74732f323039303830332f70616765696e64696361746f722e676966)\n\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第九期","slug":"009","date":"2015-07-01T00:00:00.000Z","updated":"2015-08-10T06:39:29.000Z","comments":true,"path":"2015/07/01/009/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/07/01/009/","excerpt":"","text":"业界新闻1）谷歌宣布Android Studio将取代Eclipse编译环境 中止对后者支持Google安卓产品经理Jamal Eason在声明中写道“谷歌将会全力专注于Android Studio编译工具的开发和技术支持，中止为Eclipse提供官方支持。包括中止对Eclipse ADT插件以及Android Ant编译系统的支持。” Android开发1）Kotlin：Android世界的SwiftKotlin是一门与Swift类似的静态类型JVM语言，由JetBrains设计开发并开源。与Java相比，Kotlin的语法更简洁、更具表达性，而且提供了更多的特性，比如，高阶函数、操作符重载、字符串模板。它与Java高度可互操作，可以同时用在一个项目中。 2）Kotlin在Android工程中的应用如果你在寻求Android开发的可替代编程语言，那么应该试一下Kotlin。使用Kotlin，你可以很容易的在Android工程中替代Java或者与Java混合使用。本文接下来将介绍在Android Studio工程中如何使用Kotlin和Kotlin插件。 3）Android屏幕适配全攻略(最权威的官方适配指导)Android的屏幕适配一直以来都在折磨着我们这些开发者，本篇文章以Google的官方文档为基础，全面而深入的讲解了Android屏幕适配的原因、重要概念、解决方案及最佳实践，我相信如果你能认真的学习本文，对于Android的屏幕适配，你将有所收获！ 4）手动实现布局过渡效果（Layout transition）Layout transition（布局过渡效果）是Material design的重要方面，因为它帮助用户理解app的操作流程，在用户切换视图的时候把不同组建有机的结合起来。要实现布局过渡效果，有两个重要的工具：Activity Transition（以后会有这方面的讲解）以及Layout Transition（我们已经在Styling Android上讲过 ）。但是Layout Transition只支持api 19以上。在本系列文章中，我们将探讨如何做到不使用transitions API也能实现不错的过渡动画。 第一部分 第二部分 第三部分 iOS开发1）苹果AppStore被拒理由大全app提交审核之前都可以先看一看。 2）Objective-C Associated Objects 的实现原理我们知道，在 Objective-C 中可以通过 Category 给一个现有的类添加属性，但是却不能添加实例变量，这似乎成为了 Objective-C 的一个明显短板。然而值得庆幸的是，我们可以通过 Associated Objects 来弥补这一不足。本文将结合 runtime 源码深入探究 Objective-C 中 Associated Objects 的实现原理。 3）漫谈iOS Crash收集框架本文主要讨论了Crash日志收集过程中的如下几个问题： 是否集成越多的Crash日志收集服务就越保险？ 自己收集的Crash日志和系统生成的Crash日志有分歧，应该相信谁？ 为什么有大量Crash日志显示崩在main函数里,但函数栈中却没有一行自己的代码？ 野指针类的Crash难定位，有何妙招来应对？ 4）AFNetworking实现项目下载需求时遇过的那些坑当前市面上的APP，凡有涉及到视频、期刊、或其它大型文件传输、浏览等用途的，添加下载或缓存至本地的功能以避免网速的限制及依赖，毫无疑问都将给用户带来更好的体验。而谈到下载技术，就又不得不牵扯到了断点续传，队列任务等老生常谈的问题。 5）React Native探索系列本文作者为天猫前端负责人徐凯（花名鬼道），天猫前端是国内最早接触React Native并将其用于实践的团队之一，本系列文章中他们将分享使用React Native的经验和遇到的问题。 背景、规划和风险 布局篇 与react-web的融合 技术纵横1）技术主管的瑞士军刀本文分享了一些方法，以帮助你实现作为一名技术主管的最终目标，那当然就是打造一个强壮的技术环境，让开发者们可以依赖这个环境，并使他们每天都能够发挥出最高的水平，让他们感到安全，并且清楚地掌握代码的质量。 开源函数库与工具1）Github Atom 1.0 发布经过7年的酝酿，Github推出了文本编辑器Atom 1.0。 2）在SVN上实现代码风格自动检查在程序开发的过程中，我们希望团队成员的代码风格保持一致。但是，如果只是口头或者书面协定的话，结果往往不太好，甚至更糟，可能会导致多种代码风格混杂在同一个源文件中的局面出现。","raw":"title: 平安科技移动开发二队技术周报 第九期\ncategories: weekly\ndate: 2015-07-01\n---\n\n##业界新闻\n\n###1）[谷歌宣布Android Studio将取代Eclipse编译环境 中止对后者支持](http://www.cnbeta.com/articles/406205.htm)\n\nGoogle安卓产品经理Jamal Eason在声明中写道“谷歌将会全力专注于Android Studio编译工具的开发和技术支持，中止为Eclipse提供官方支持。包括中止对Eclipse ADT插件以及Android Ant编译系统的支持。”\n\n##Android开发\n\n###1）[Kotlin：Android世界的Swift](http://www.infoq.com/cn/news/2015/06/Android-JVM-JetBrains-Kotlin)\n\nKotlin是一门与Swift类似的静态类型JVM语言，由JetBrains设计开发并开源。与Java相比，Kotlin的语法更简洁、更具表达性，而且提供了更多的特性，比如，高阶函数、操作符重载、字符串模板。它与Java高度可互操作，可以同时用在一个项目中。\n\n###2）[Kotlin在Android工程中的应用](http://www.jianshu.com/p/a7fadc79e0fb)\n\n如果你在寻求Android开发的可替代编程语言，那么应该试一下Kotlin。使用Kotlin，你可以很容易的在Android工程中替代Java或者与Java混合使用。本文接下来将介绍在Android Studio工程中如何使用Kotlin和Kotlin插件。\n\n###3）[Android屏幕适配全攻略(最权威的官方适配指导)](http://blog.csdn.net/zhaokaiqiang1992/article/details/45419023)\n\nAndroid的屏幕适配一直以来都在折磨着我们这些开发者，本篇文章以Google的官方文档为基础，全面而深入的讲解了Android屏幕适配的原因、重要概念、解决方案及最佳实践，我相信如果你能认真的学习本文，对于Android的屏幕适配，你将有所收获！\n\n###4）手动实现布局过渡效果（Layout transition）\n\nLayout transition（布局过渡效果）是Material design的重要方面，因为它帮助用户理解app的操作流程，在用户切换视图的时候把不同组建有机的结合起来。要实现布局过渡效果，有两个重要的工具：Activity Transition（以后会有这方面的讲解）以及Layout Transition（我们已经在Styling Android上讲过  ）。但是Layout Transition只支持api 19以上。在本系列文章中，我们将探讨如何做到不使用transitions API也能实现不错的过渡动画。\n\n* [第一部分](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0625/3108.html)\n* [第二部分](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0625/3111.html)\n* [第三部分](http://www.devtf.cn/?p=746)\n\n##iOS开发\n\n###1）[苹果AppStore被拒理由大全](https://github.com/jcccn/Why-Reject)\n\napp提交审核之前都可以先看一看。\n\n###2）[Objective-C Associated Objects 的实现原理](http://blog.leichunfeng.com/blog/2015/06/26/objective-c-associated-objects-implementation-principle/)\n\n我们知道，在 Objective-C 中可以通过 Category 给一个现有的类添加属性，但是却不能添加实例变量，这似乎成为了 Objective-C 的一个明显短板。然而值得庆幸的是，我们可以通过 Associated Objects 来弥补这一不足。本文将结合 runtime 源码深入探究 Objective-C 中 Associated Objects 的实现原理。\n\n###3）[漫谈iOS Crash收集框架](http://nianxi.net/ios/ios-crash-reporter/)\n\n本文主要讨论了Crash日志收集过程中的如下几个问题：\n\n* 是否集成越多的Crash日志收集服务就越保险？\n* 自己收集的Crash日志和系统生成的Crash日志有分歧，应该相信谁？\n* 为什么有大量Crash日志显示崩在main函数里,但函数栈中却没有一行自己的代码？\n* 野指针类的Crash难定位，有何妙招来应对？\n\n###4）[AFNetworking实现项目下载需求时遇过的那些坑](http://www.cocoachina.com/ios/20150624/12242.html)\n\n当前市面上的APP，凡有涉及到视频、期刊、或其它大型文件传输、浏览等用途的，添加下载或缓存至本地的功能以避免网速的限制及依赖，毫无疑问都将给用户带来更好的体验。而谈到下载技术，就又不得不牵扯到了断点续传，队列任务等老生常谈的问题。\n\n###5）React Native探索系列 \n\n本文作者为天猫前端负责人徐凯（花名鬼道），天猫前端是国内最早接触React Native并将其用于实践的团队之一，本系列文章中他们将分享使用React Native的经验和遇到的问题。\n\n* [背景、规划和风险](http://www.infoq.com/cn/articles/react-native-overview)\n* [布局篇](http://www.infoq.com/cn/articles/react-native-layout)\n* [与react-web的融合](http://www.infoq.com/cn/articles/react-native-web)\n\n##技术纵横\n\n###1）[技术主管的瑞士军刀](http://www.infoq.com/cn/articles/tech-lead-swissarmyknife)\n\n本文分享了一些方法，以帮助你实现作为一名技术主管的最终目标，那当然就是打造一个强壮的技术环境，让开发者们可以依赖这个环境，并使他们每天都能够发挥出最高的水平，让他们感到安全，并且清楚地掌握代码的质量。\n\n##开源函数库与工具\n\n###1）[Github Atom 1.0 发布](https://github.com/blog/2031-announcing-atom-1-0)\n\n经过7年的酝酿，Github推出了文本编辑器Atom 1.0。\n\n###2）[在SVN上实现代码风格自动检查](http://www.cnblogs.com/frydsh/archive/2012/12/27/2835249.html)\n\n在程序开发的过程中，我们希望团队成员的代码风格保持一致。但是，如果只是口头或者书面协定的话，结果往往不太好，甚至更糟，可能会导致多种代码风格混杂在同一个源文件中的局面出现。\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第八期","slug":"008","date":"2015-06-25T00:00:00.000Z","updated":"2015-07-23T07:27:11.000Z","comments":true,"path":"2015/06/25/008/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/06/25/008/","excerpt":"","text":"业界新闻1）如何评价美团外卖商家版强杀竞争对手的商家版 App 进程？一段代码引发的关于不正当竞争的讨论。 2）Swift正在蚕食Objective-C的市场关于Objective-C市场份额萎缩的更详尽的报道。 3）苹果真贴心，更新iOS 9不用担心空间不够尽管iOS 9的升级空间从4.6GB降至现在的1.3GB，依然有不少低存储空间的设备会有安装空间不够的问题。有开发者发现，在升级iOS 9 Beta2时，小存储版本iPhone/iPad在安装过程中，如果出现系统空间不够时，苹果会自动为你解决。 4）这10点让你认清苹果新系统El Capitan苹果的新系统 El Capitan 带来了不少新鲜玩意，但更多的是对已有功能的优化升级，新的字体，全新的分屏功能，以及更加智能的 Spotlight 功能，以及不再鸡肋的地图和备忘录……虽然不是颠覆性的创新，但细细体验，真的是用户最想要，最能提高用户体验的改进！ Android开发1）Android应用程序UI硬件加速渲染的动画执行过程分析通常我们说一个系统不如另一个系统流畅，说的就是前者动画显示不如后者流畅，因此动画显示流畅程度是衡量一个系统流畅性的关键指标。为什么这样说呢？这是因为流畅的动画显示需要60fps的UI刷新速度，然而这却不是一个容易达到的速度。Android 5.0通过引入Render Thread尽最大努力提升动画显示流畅性。本文就分析Render Thread显示动画的过程，以便了解它是如何提高动画显示流畅性的。 2）详解Android开发中常用的 DPI / DP / SPAndroid的碎片化已经被喷了好多年，随着国内手机厂商的崛起，碎片化也越来越严重，根据OpenSignal的最新调查，2014年市面上有18796种不同的Android设备，作为开发者，一个无法回避的难题就是需要适配各种各样奇奇怪怪的机型。 3）Android Studio分模块自动化构建实战众所周知，AndroidStudio中应该尽量使用Module来进行模块的划分，既能达到模块解耦的目的，也能在必要的时候轻松实现分模块打包，特别是在SDK项目中。那么什么是分模块打包呢？就是我们可以根据第三方使用者的需求，自动化的提供SDK的全量版本，部分功能版本以及最小功能版本等等。 4）Android应用分析进阶教程之一- 初识JEBAPIJEB是Android应用静态分析的de facto standard,除去准确的反编译结果、高容错性之外,JEB提供的API也方便了我们编写插件对源文件进行处理,实施反混淆甚至一些更高级的应用分析来方便后续的人工分析。 5）如何使用Android Studio把自己的Android library分享到jCenter和Maven Central关于通过Android Studio发布Android library的文章很多，但这一篇应该说是目前最为详尽的。 iOS开发1）iOS应用程序的生命周期iOS应用程序一般都是由自己编写的代码和系统框架(system frameworks)组成，系统框架提供一些基本infrastructure给所有app来运行，而你提供自己编写的代码来定制app的外观和行为。因此，了解iOS infrastructure和它们如何工作对编写app是很有帮助的。 2）iOS 9: UIStackView入门同iOS以往每个迭代一样，iOS 9带来了很多新特性。UIKit框架每个版本都在改变，而在iOS 9比较特别的是UIStackView，它将从根本上改变开发者在iOS上创建用户界面的方式。本文将带你学习怎样使用UIStackView创建用户界面。 3）使用Jenkins搭建iOS开发的CI服务器持续集成CI（continuous integration）是一种可以增加项目可见性，降低项目失败风险的开发实践。iOS开发中CI的选择有很多，比如可以使用Apple提供的Bots来完成自动化构建和单元测试，其优点就是和Xcode深度集成，只需几步配置就可以完成，缺点就是不够灵活，可定制化程度不高。这篇文章主要讲解如何使用开源社区的一个CI工具Jenkins来搭建iOS开发的CI环境。如果是搭建单独CI服务器的话，就需要一台单独的mac机器了。 4）iOS9适配系列教程iOS9适配问题的总结。 技术纵横1）Go 1.5新特性：支持Android，实验性支持iOS（演讲幻灯）Go语言开发团队成员Andrew Gerrand在2015年2月份FOSDEM上的演讲幻灯。幻灯中介绍说，Go 1.5计划在2015年8月份发布，目前已经进入功能冻结阶段。其他主要内容： Go 1.5会将GC工具链从C切换到Go；Go 1.5的工具链或运行时中都不会有C代码了； Go 1.5支持一些新的GOOS/GOARCH组合；不再支持Apple OS X 10.6； Go 1.5可以制作Go可用的Go共享库（shared libraries)； Go 1.5会支持Android，并试验性支持iOS。 2）NGINX引入线程池 性能提升9倍NGINX采用了异步、事件驱动的方法来处理连接。这种处理方式无需（像使用传统架构的服务器一样）为每个请求创建额外的专用进程或者线程，而是在一个工作进程中处理多个连接和请求。为此，NGINX工作在非阻塞的socket模式下，并使用了epoll 和 kqueue这样有效的方法。 3）如何设计一个比较完备的、有用户黏性的用户激励体系？像百科、论坛这样没有实际物质利益激励的社区或者app，如何通过完善的精神层面激励，提高用户黏性？常用的手段有哪些？设计用户成长体系的时候需要注意哪些问题？ 开源函数库与工具1）GuillotineMenu-AndroidYalantis出品的一个开源函数库，实现炫酷的菜单效果。","raw":"title: 平安科技移动开发二队技术周报 第八期\ncategories: weekly\ndate: 2015-06-25\n---\n\n##业界新闻\n\n###1）[如何评价美团外卖商家版强杀竞争对手的商家版 App 进程？](http://www.zhihu.com/question/31413252)\n\n一段代码引发的关于不正当竞争的讨论。\n\n###2）[Swift正在蚕食Objective-C的市场](http://www.infoq.com/cn/news/2015/06/Swift-Objective-C?utm_source=tuicool)\n\n关于Objective-C市场份额萎缩的更详尽的报道。\n\n###3）[苹果真贴心，更新iOS 9不用担心空间不够](http://www.leiphone.com/news/201506/ZUAynBqMivJ2b6O2.html)\n\n尽管iOS 9的升级空间从4.6GB降至现在的1.3GB，依然有不少低存储空间的设备会有安装空间不够的问题。\n有开发者发现，在升级iOS 9 Beta2时，小存储版本iPhone/iPad在安装过程中，如果出现系统空间不够时，苹果会自动为你解决。\n\n###4）[这10点让你认清苹果新系统El Capitan](http://tech2ipo.com/100146)\n\n苹果的新系统 El Capitan 带来了不少新鲜玩意，但更多的是对已有功能的优化升级，新的字体，全新的分屏功能，以及更加智能的 Spotlight 功能，以及不再鸡肋的地图和备忘录……虽然不是颠覆性的创新，但细细体验，真的是用户最想要，最能提高用户体验的改进！\n\n\n##Android开发\n\n###1）[Android应用程序UI硬件加速渲染的动画执行过程分析](http://blog.csdn.net/luoshengyang/article/details/46449677)\n\n通常我们说一个系统不如另一个系统流畅，说的就是前者动画显示不如后者流畅，因此动画显示流畅程度是衡量一个系统流畅性的关键指标。为什么这样说呢？这是因为流畅的动画显示需要60fps的UI刷新速度，然而这却不是一个容易达到的速度。Android 5.0通过引入Render Thread尽最大努力提升动画显示流畅性。本文就分析Render Thread显示动画的过程，以便了解它是如何提高动画显示流畅性的。\n\n###2）[详解Android开发中常用的 DPI / DP / SP](http://www.jianshu.com/p/913943d25829)\n\nAndroid的碎片化已经被喷了好多年，随着国内手机厂商的崛起，碎片化也越来越严重，根据OpenSignal的最新调查，2014年市面上有18796种不同的Android设备，作为开发者，一个无法回避的难题就是需要适配各种各样奇奇怪怪的机型。\n\n###3）[Android Studio分模块自动化构建实战](http://www.jianshu.com/p/fec2818f2f20)\n\n众所周知，AndroidStudio中应该尽量使用Module来进行模块的划分，既能达到模块解耦的目的，也能在必要的时候轻松实现分模块打包，特别是在SDK项目中。那么什么是分模块打包呢？就是我们可以根据第三方使用者的需求，自动化的提供SDK的全量版本，部分功能版本以及最小功能版本等等。\n\n###4）[Android应用分析进阶教程之一- 初识JEBAPI](http://drops.wooyun.org/mobile/6665)\n\nJEB是Android应用静态分析的de facto standard,除去准确的反编译结果、高容错性之外,JEB提供的API也方便了我们编写插件对源文件进行处理,实施反混淆甚至一些更高级的应用分析来方便后续的人工分析。\n\n###5）[如何使用Android Studio把自己的Android library分享到jCenter和Maven Central](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0623/3097.html)\n\n关于通过Android Studio发布Android library的文章很多，但这一篇应该说是目前最为详尽的。\n\n##iOS开发\n\n###1）[iOS应用程序的生命周期](http://www.jianshu.com/p/aa50e5350852)\n\niOS应用程序一般都是由自己编写的代码和系统框架(system frameworks)组成，系统框架提供一些基本infrastructure给所有app来运行，而你提供自己编写的代码来定制app的外观和行为。因此，了解iOS infrastructure和它们如何工作对编写app是很有帮助的。\n\n###2）[iOS 9: UIStackView入门](http://www.cocoachina.com/ios/20150623/12233.html)\n\n同iOS以往每个迭代一样，iOS 9带来了很多新特性。UIKit框架每个版本都在改变，而在iOS 9比较特别的是UIStackView，它将从根本上改变开发者在iOS上创建用户界面的方式。本文将带你学习怎样使用UIStackView创建用户界面。\n\n###3）[使用Jenkins搭建iOS开发的CI服务器](http://blog.nswebfrog.com/2013/12/31/jenkins-ios-ci/#541841-tsina-1-70988-d0fc3b3b40d03e6b36d60be81253e42e)\n\n持续集成CI（continuous integration）是一种可以增加项目可见性，降低项目失败风险的开发实践。iOS开发中CI的选择有很多，比如可以使用Apple提供的Bots来完成自动化构建和单元测试，其优点就是和Xcode深度集成，只需几步配置就可以完成，缺点就是不够灵活，可定制化程度不高。这篇文章主要讲解如何使用开源社区的一个CI工具Jenkins来搭建iOS开发的CI环境。如果是搭建单独CI服务器的话，就需要一台单独的mac机器了。\n\n###4）[iOS9适配系列教程](https://github.com/ChenYilong/iOS9AdaptationTips)\n\niOS9适配问题的总结。\n\n##技术纵横\n\n###1）[Go 1.5新特性：支持Android，实验性支持iOS（演讲幻灯）](http://www.tuicool.com/articles/vamIfej)\n\nGo语言开发团队成员Andrew Gerrand在2015年2月份FOSDEM上的演讲幻灯。幻灯中介绍说，Go 1.5计划在2015年8月份发布，目前已经进入功能冻结阶段。其他主要内容：\n\n* Go 1.5会将GC工具链从C切换到Go；Go 1.5的工具链或运行时中都不会有C代码了；\n* Go 1.5支持一些新的GOOS/GOARCH组合；不再支持Apple OS X 10.6；\n* Go 1.5可以制作Go可用的Go共享库（shared libraries)；\n* Go 1.5会支持Android，并试验性支持iOS。\n\n###2）[NGINX引入线程池 性能提升9倍](http://www.infoq.com/cn/articles/thread-pools-boost-performance-9x)\n\nNGINX采用了异步、事件驱动的方法来处理连接。这种处理方式无需（像使用传统架构的服务器一样）为每个请求创建额外的专用进程或者线程，而是在一个工作进程中处理多个连接和请求。为此，NGINX工作在非阻塞的socket模式下，并使用了epoll 和 kqueue这样有效的方法。\n\n###3）[如何设计一个比较完备的、有用户黏性的用户激励体系？](http://www.zhihu.com/question/19575650)\n\n像百科、论坛这样没有实际物质利益激励的社区或者app，如何通过完善的精神层面激励，提高用户黏性？常用的手段有哪些？设计用户成长体系的时候需要注意哪些问题？ \n\n\n##开源函数库与工具\n\n###1）[GuillotineMenu-Android](https://github.com/Yalantis/GuillotineMenu-Android)\n\nYalantis出品的一个开源函数库，实现炫酷的菜单效果。\n\n![](https://camo.githubusercontent.com/f044b38de3fed4496b98dff747b3bf6555ec67e4/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3439353739322f73637265656e73686f74732f323131333331342f64726166742d30332e676966)\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第七期","slug":"007","date":"2015-06-17T00:00:00.000Z","updated":"2015-07-23T08:12:23.000Z","comments":true,"path":"2015/06/17/007/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/06/17/007/","excerpt":"","text":"业界新闻1）从数据来看，Android 还是挺安全的Google 近日公布了一份白皮书，详细记载了 Android 安全小组去年一整年的工作内容。 2）Mac中国市场报告腾讯ISUX用户研究中心出品的一份Mac中国市场使用报告。 3）GitHub账户被黑：旧漏洞导致弱密钥大量留存Cartwright-Cox在GitHub上发现了大约94个包括Debian衍生缺陷的密钥。3月份他向GitHub官方报告之后，才发现实际用户数量要高得多。GitHub于上月撤销了这些密钥，目前GitHub官方没有作出其他回应。 4）越来越像：iOS9与Android M简单上手对比谷歌和苹果都已经在日前先后放出了下一代系统的开发者预览版本，既Android M 开发者预览版以及iOS9 开发者预览版。而现在，是时候将两者放在一起进行一番对比了。 Android开发1）Android Studio新手完全指引入门Android Studio你所需要知道的一切。 2）Google Developing for Android系列Google官方最近发表的关于开发高性能Android应用的7篇文章，作为Android开发者都应该好好看一下。 3）Android应用内多进程介绍及使用一个应用默认只有一个进程，这个进程（主进程）的名称就是应用的包名，进程是系统分配资源和调度的基本单位，每个进程都有自己独立的资源和内存空间，其它进程不能任意访问当前进程的内存和资源，系统给每个进程分配的内存会有限制。 4）美团Android DEX自动拆包及动态加载简介Google为构建超过65K方法数的应用提供官方支持的方案：MultiDex在Dalvik下MultiDex带来了一些问题。 5）Android M 的＂App Links＂实现详解谷歌2015年的I/O大会上宣布了一个新特性 ：允许开发者将app和他们的web域名关联。这一举措是为了最小化用户遇到“打开方式”对话框的概率。 iOS开发1）2015 Objective-C 新特性自 WWDC 2015 推出和开源 Swift 2.0 后，大家对 Swift 的热情又一次高涨起来，在羡慕创业公司的朋友们大谈 Swift 新特性的同时，也有很多像我一样工作上依然需要坚守着 Objective-C 语言的开发者们。今年的 WWDC 中介绍了几个 Objective-C 语言的新特性，还是在“与 Swift 协同工作”这种 Topic 里讲的，越发凸显这门语言的边缘化了，不过有新特性还是极好的，接下来，本文将介绍下面三个主要的新特性： Nullability Lightweight Generics __kindof 2）Swift 语言指南Swift是大势所趋，这份指南汇集了 Swift 语言主流学习资源，并以开发者的视角整理编排。 3）Objective-C Method Swizzling 的最佳实践Objective-C 中的 Method Swizzling 是一项异常强大的技术，它可以允许我们动态地替换方法的实现，实现 Hook 功能，是一种比子类化更加灵活的“重写”方法的方式。 4）谈谈iOS中粘性动画以及果冻效果的实现下图所示动画效果实现原理解析： 5）Xcode插件AllTargets开发教程Xcode插件制作过程简介。 技术纵横1）更快学会任何东西的终极指南在这个资讯爆炸、新东西层出不穷的时代，学习是件终生的事业。书到用时方狠少，很多时候我们总是后悔当初没学，然后抱怨时间不够多，最后开始反思—时间对每个人来说都是公平，所以我们的问题应该是如何才能更快地学会东西？也许Sean Kim的这篇学习终极指南可以参考。 2）Facebook 静态检测工具 Infer 中文文档Facebook 的 Infer 是一个静态分析工具。Infer 可以分析 Objective-C， Java 或者 C 代码，报告潜在的问题。任何人都可以使用 Infer 检测应用，这可以将那些严重的 bug 扼杀在发布之前，同时防止应用崩溃和性能低下。 3）谷歌如何找回「失散多年」的设计师？与苹果相比，谷歌更多地是一家技术驱动的科技公司，其产品设计充满着浓厚的工程师思维，正因为如此，其设计也一直为用户所诟病。但是现在的谷歌比任何时候更加注重设计，运用Material Design的安卓5.0给人眼前一亮的感觉：清爽的界面，清晰的交互逻辑，应用统一的设计风格。x`` 开源函数库与工具1）What’s New In Android MPPT中简述了关于Android M所带来的一些新的变化。 2）enjarifyGoogle官方出品的将Davilk字节码转换成Java字节码的开源工具，建议用于替换dex2jar。 3）inferFacebook 最新开源的静态程序分析工具，用于在发布移动应用之前对代码进行分析，找出潜在的问题。目前 Facebook 使用该工具来分析 Facebook 的 App，包括 Android 、iOS、Facebook Messenger 和 Instagram 等等。","raw":"title: 平安科技移动开发二队技术周报 第七期\ncategories: weekly\ndate: 2015-06-17\n---\n\n##业界新闻\n\n###1）[从数据来看，Android 还是挺安全的](http://www.techug.com/google-android-safe)\n\nGoogle 近日公布了一份白皮书，详细记载了 Android 安全小组去年一整年的工作内容。\n\n###2）[Mac中国市场报告](http://isux.tencent.com/mac-in-china-s-market.html)\n\n腾讯ISUX用户研究中心出品的一份Mac中国市场使用报告。\n\n###3）[GitHub账户被黑：旧漏洞导致弱密钥大量留存](http://www.freebuf.com/news/69038.html)\n\nCartwright-Cox在GitHub上发现了大约94个包括Debian衍生缺陷的密钥。3月份他向GitHub官方报告之后，才发现实际用户数量要高得多。GitHub于上月撤销了这些密钥，目前GitHub官方没有作出其他回应。\n\n###4）[越来越像：iOS9与Android M简单上手对比](http://www.ithome.com/html/android/154671.htm)\n\n谷歌和苹果都已经在日前先后放出了下一代系统的开发者预览版本，既Android M 开发者预览版以及iOS9 开发者预览版。而现在，是时候将两者放在一起进行一番对比了。\n\n\n##Android开发\n\n###1）[Android Studio新手完全指引](http://www.jianshu.com/p/f7de559b9752)\n\n入门Android Studio你所需要知道的一切。\n\n###2）[Google Developing for Android系列](http://www.lightskystreet.com/2015/06/07/google-for-android-1-mobile-context/)\n\nGoogle官方最近发表的关于开发高性能Android应用的7篇文章，作为Android开发者都应该好好看一下。\n\n###3）[Android应用内多进程介绍及使用](http://zmywly8866.github.io/2015/06/14/android-multi-process-use-and-notice.html)\n\n一个应用默认只有一个进程，这个进程（主进程）的名称就是应用的包名，进程是系统分配资源和调度的基本单位，每个进程都有自己独立的资源和内存空间，其它进程不能任意访问当前进程的内存和资源，系统给每个进程分配的内存会有限制。\n\n###4）[美团Android DEX自动拆包及动态加载简介](http://tech.meituan.com/mt-android-auto-split-dex.html)\n\nGoogle为构建超过65K方法数的应用提供官方支持的方案：MultiDex在Dalvik下MultiDex带来了一些问题。\n\n###5）[Android M 的＂App Links＂实现详解](http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0609/3022.html)\n\n谷歌2015年的I/O大会上宣布了一个新特性 ：允许开发者将app和他们的web域名关联。这一举措是为了最小化用户遇到“打开方式”对话框的概率。\n\n##iOS开发\n\n###1）[2015 Objective-C 新特性](http://blog.sunnyxx.com/2015/06/12/objc-new-features-in-2015/)\n\n自 WWDC 2015 推出和开源 Swift 2.0 后，大家对 Swift 的热情又一次高涨起来，在羡慕创业公司的朋友们大谈 Swift 新特性的同时，也有很多像我一样工作上依然需要坚守着 Objective-C 语言的开发者们。今年的 WWDC 中介绍了几个 Objective-C 语言的新特性，还是在“与 Swift 协同工作”这种 Topic 里讲的，越发凸显这门语言的边缘化了，不过有新特性还是极好的，接下来，本文将介绍下面三个主要的新特性：\n\n* Nullability\n* Lightweight Generics\n* __kindof\n\n###2）[Swift 语言指南](https://github.com/ipader/SwiftGuide)\n\nSwift是大势所趋，这份指南汇集了 Swift 语言主流学习资源，并以开发者的视角整理编排。\n\n###3）[Objective-C Method Swizzling 的最佳实践](http://blog.leichunfeng.com/blog/2015/06/14/objective-c-method-swizzling-best-practice/#jtss-tsina)\n\nObjective-C 中的 Method Swizzling 是一项异常强大的技术，它可以允许我们动态地替换方法的实现，实现 Hook 功能，是一种比子类化更加灵活的“重写”方法的方式。\n\n###4）[谈谈iOS中粘性动画以及果冻效果的实现](http://kittenyang.com/deformationandgooey/)\n\n下图所示动画效果实现原理解析：\n\n![](http://kittenyang.com/content/images/2015/Jun/gooeyCircle.gif)\n\n###5）[Xcode插件AllTargets开发教程](http://www.poboke.com/study/write-a-xcode-plugin-to-auto-select-all-targets.html?utm_source=tuicool)\n\nXcode插件制作过程简介。\n\n##技术纵横\n\n###1）[更快学会任何东西的终极指南](http://36kr.com/p/533829.html)\n\n在这个资讯爆炸、新东西层出不穷的时代，学习是件终生的事业。书到用时方狠少，很多时候我们总是后悔当初没学，然后抱怨时间不够多，最后开始反思—时间对每个人来说都是公平，所以我们的问题应该是如何才能更快地学会东西？也许Sean Kim的这篇学习终极指南可以参考。\n\n###2）[Facebook 静态检测工具 Infer 中文文档](http://infer.liaohuqiu.net/)\n\nFacebook 的 Infer 是一个静态分析工具。Infer 可以分析 Objective-C， Java 或者 C 代码，报告潜在的问题。\n任何人都可以使用 Infer 检测应用，这可以将那些严重的 bug 扼杀在发布之前，同时防止应用崩溃和性能低下。\n\n###3）[谷歌如何找回「失散多年」的设计师？](http://tech2ipo.com/99629)\n\n与苹果相比，谷歌更多地是一家技术驱动的科技公司，其产品设计充满着浓厚的工程师思维，正因为如此，其设计也一直为用户所诟病。但是现在的谷歌比任何时候更加注重设计，运用Material Design的安卓5.0给人眼前一亮的感觉：清爽的界面，清晰的交互逻辑，应用统一的设计风格。x``\n\n##开源函数库与工具\n\n###1）[What's New In Android M](http://vdisk.weibo.com/s/aOLaE-JchyzDQ/1434112035)\n\nPPT中简述了关于Android M所带来的一些新的变化。\n\n###2）[enjarify](https://github.com/google/enjarify)\n\nGoogle官方出品的将Davilk字节码转换成Java字节码的开源工具，建议用于替换dex2jar。\n\n###3）[infer](https://github.com/facebook/infer)\n\nFacebook 最新开源的静态程序分析工具，用于在发布移动应用之前对代码进行分析，找出潜在的问题。目前 Facebook 使用该工具来分析 Facebook 的 App，包括 Android 、iOS、Facebook Messenger 和 Instagram 等等。\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第六期","slug":"006","date":"2015-06-10T00:00:00.000Z","updated":"2015-07-23T08:12:09.000Z","comments":true,"path":"2015/06/10/006/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/06/10/006/","excerpt":"","text":"业界新闻1）WWDC 15 发布会在一段迥异过往风格的搞笑彩排视频之后，今年 WWDC 2015 拉开了帷幕，库克表示这是最国际化的一次发布会，有来自 70 个国家的不同开发者，在场有 80% 的人是首次参加 WWDC。尽管传闻中的 Apple TV 和互联网电视台服务没有出现，但产品软件层面上的更新仍然令人欣喜。 2）Swift 2.0发布：即将开源，支持Linux在6月9日凌晨举行的WWDC 2015全球开发者大会上，苹果发布了Swift 2.0，并宣布将于今年年底开源Swift语言。Swift 2.0引入了很多的新特性以确保开发者可以更快、更简单的构建应用，这些新特性包括更好的性能、新的异常处理API、可用性检查、支持Linux等。 3）超全解析 关于Android Wear你所要知道的一切在2015年度谷歌I/O开发者大会上，我们了解到更多关于Android Wear的消息。主要的焦点集中在Android Wear 5.1.1上，而这些消息也反映出该平台正试图努力跟上Apple Watch的脚步。 4）TIOBE 2015年6月编程语言排行榜 Objective-C 迅速迁移 SwiftObjective-C是真正进入自由落体。过去的几个月就每月损失了约1%的市场份额。如果这种趋势继续下去，它将在今年年底离开TIOBE排行榜前20名。主要的原因是去年苹果宣布其新的编程语言Swift取代Objective-C。编程社区接受Swift因为它符合比尔更好。除此之外，也有使用C++更频繁的一个iOS应用程序的低层的趋势。 Android开发1）Android属性动画完全解析(下)，Interpolator和ViewPropertyAnimator的用法Android属性动画解析的最后一篇，前两篇可参见前几期周报。 2）Data Binding（数据绑定）用户指南这篇文章介绍了如何使用Data Binding库来写声明的layouts文件，并且用最少的代码来绑定你的app逻辑和layouts文件。Data Binding库不仅灵活而且广泛兼容- 它是一个support库，因此你可以在所有的Android平台最低能到Android 2.1（API等级7+）上使用它。 3）FlyRefresh——让人眼前一亮的下拉刷新炫酷下拉刷新效果FlyRefresh的实现原理解析。 4）MVP在Android平台上的应用这篇文章向你介绍Android平台上的MVP模式，从一个简浅的例子开始实践之路。文章也会介绍一个一个库让你在Android平台上轻松的实现MVP。 5）Mac下修改Android Studio 所用的JDK版本本文介绍了Android开发中如何将JDK版本降级，包括Android Studio，环境变量和Jenkins三方面的修改。 iOS开发1）JSPatch实现原理详解本篇文章从基础原理、方法调用和方法替换三块内容介绍整个 JSPatch 的实现原理，并把实现过程中的想法和碰到的坑也尽可能记录下来 2）详解Xcode 6的视图调试开发者会经常遇到视图或者Auto Layout约束中存在bug的情况，并且这种bug很难通过代码发现，所以开发者很有必要熟知如何进行简单高效的视图调试，并且Xcode 6的发布使得视图调试变得前所未有的简单。 3）iOS应用架构谈 网络层设计方案网络层在一个App中也是一个不可缺少的部分，工程师们在网络层能够发挥的空间也比较大。另外，苹果对网络请求部分已经做了很好的封装，业界的AFNetworking也被广泛使用。其它的ASIHttpRequest，MKNetworkKit啥的其实也都还不错，但前者已经弃坑，后者也在弃坑的边缘。在实际的App开发中，Afnetworking已经成为了事实上各大App的标准配置。 4）Objective-C Autorelease Pool 的实现原理内存管理一直是学习 Objective-C 的重点和难点之一，尽管现在已经是 ARC 时代了，但是了解 Objective-C 的内存管理机制仍然是十分必要的。其中，弄清楚 autorelease 的原理更是重中之重，只有理解了 autorelease 的原理，我们才算是真正了解了 Objective-C 的内存管理机制。 技术纵横1）Executor框架线程池任务执行全过程JDK 1.5后引入的Executor框架的最大优点是把任务的提交和执行解耦。要执行任务的人只需把Task描述清楚，然后提交即可。这个Task是怎么被执行的，被谁执行的，什么时候执行的，提交的人就不用关心了。本文是对这一执行过程较详细解析。 2）重构概要图解本文将《重构-改善既有代码的设计》一书的内容以图表的形式展示出来，方便快速复习。 3）程序猿必看交互设计本文作者 Pasquale D’Silva 是 Elepath 的一位交互设计师兼产品设计师，在本文中，他从交互的角度阐释了优秀的设计应该具有的一些品质，或者说，优秀的产品该如何实现与用户的自然沟通。 开源函数库与工具1）AppIntro每一款App都有引导页，这个函数库能让我们快速制作出漂亮的引导页。 2）EventBus 3 betaEventBus 3 beta发布了，可以从Maven central上面获取到，引入了编译时注解，性能比EventBus2.4提升了3到6倍。 3）support annotations自从Android support library 19.1引入新的注解包，开发者已经大量使用其中提供的元注解来发现程序bug，在刚刚更新的Android support librar 22.2中，Google又给开发者带来了13个新的注解类型。","raw":"title: 平安科技移动开发二队技术周报 第六期\ncategories: weekly\ndate: 2015-06-10\n---\n\n##业界新闻\n\n###1）[WWDC 15 发布会](http://www.ifanr.com/530247)\n\n在一段迥异过往风格的搞笑彩排视频之后，今年 WWDC 2015 拉开了帷幕，库克表示这是最国际化的一次发布会，有来自 70 个国家的不同开发者，在场有 80% 的人是首次参加 WWDC。\n尽管传闻中的 Apple TV 和互联网电视台服务没有出现，但产品软件层面上的更新仍然令人欣喜。\n\n###2）[Swift 2.0发布：即将开源，支持Linux](http://www.infoq.com/cn/news/2015/06/swift-2-0)\n\n在6月9日凌晨举行的WWDC 2015全球开发者大会上，苹果发布了Swift 2.0，并宣布将于今年年底开源Swift语言。Swift 2.0引入了很多的新特性以确保开发者可以更快、更简单的构建应用，这些新特性包括更好的性能、新的异常处理API、可用性检查、支持Linux等。\n\n###3）[超全解析 关于Android Wear你所要知道的一切](http://digi.tech.qq.com/a/20150609/021852.htm)\n\n在2015年度谷歌I/O开发者大会上，我们了解到更多关于Android Wear的消息。主要的焦点集中在Android Wear 5.1.1上，而这些消息也反映出该平台正试图努力跟上Apple Watch的脚步。\n\n###4）[TIOBE 2015年6月编程语言排行榜 Objective-C 迅速迁移 Swift](http://www.cnbeta.com/articles/400641.htm)\n\nObjective-C是真正进入自由落体。过去的几个月就每月损失了约1%的市场份额。如果这种趋势继续下去，它将在今年年底离开TIOBE排行榜前20名。主要的原因是去年苹果宣布其新的编程语言Swift取代Objective-C。编程社区接受Swift因为它符合比尔更好。除此之外，也有使用C++更频繁的一个iOS应用程序的低层的趋势。\n\n##Android开发\n\n###1）[Android属性动画完全解析(下)，Interpolator和ViewPropertyAnimator的用法](http://blog.csdn.net/guolin_blog/article/details/44171115)\n\nAndroid属性动画解析的最后一篇，前两篇可参见前几期周报。\n\n###2）[Data Binding（数据绑定）用户指南](http://www.jianshu.com/p/b1df61a4df77)\n\n这篇文章介绍了如何使用Data Binding库来写声明的layouts文件，并且用最少的代码来绑定你的app逻辑和layouts文件。Data Binding库不仅灵活而且广泛兼容- 它是一个support库，因此你可以在所有的Android平台最低能到Android 2.1（API等级7+）上使用它。\n\n###3）[FlyRefresh——让人眼前一亮的下拉刷新](http://www.race604.com/flyrefresh/)\n\n炫酷下拉刷新效果FlyRefresh的实现原理解析。\n\n###4）[MVP在Android平台上的应用](http://www.devtf.cn/?p=567)\n\n这篇文章向你介绍Android平台上的MVP模式，从一个简浅的例子开始实践之路。文章也会介绍一个一个库让你在Android平台上轻松的实现MVP。\n\n###5）[Mac下修改Android Studio 所用的JDK版本](http://www.jianshu.com/p/d8d1d72d0248)\n\n本文介绍了Android开发中如何将JDK版本降级，包括Android Studio，环境变量和Jenkins三方面的修改。\n\n\n##iOS开发\n\n###1）[JSPatch实现原理详解](http://blog.cnbang.net/tech/2808/)\n\n本篇文章从基础原理、方法调用和方法替换三块内容介绍整个 JSPatch 的实现原理，并把实现过程中的想法和碰到的坑也尽可能记录下来\n\n###2）[详解Xcode 6的视图调试](http://www.cocoachina.com/ios/20150423/11656.html)\n\n开发者会经常遇到视图或者Auto Layout约束中存在bug的情况，并且这种bug很难通过代码发现，所以开发者很有必要熟知如何进行简单高效的视图调试，并且Xcode 6的发布使得视图调试变得前所未有的简单。\n\n###3）[iOS应用架构谈 网络层设计方案](http://casatwy.com/iosying-yong-jia-gou-tan-wang-luo-ceng-she-ji-fang-an.html)\n\n网络层在一个App中也是一个不可缺少的部分，工程师们在网络层能够发挥的空间也比较大。另外，苹果对网络请求部分已经做了很好的封装，业界的AFNetworking也被广泛使用。其它的ASIHttpRequest，MKNetworkKit啥的其实也都还不错，但前者已经弃坑，后者也在弃坑的边缘。在实际的App开发中，Afnetworking已经成为了事实上各大App的标准配置。\n\n###4）[Objective-C Autorelease Pool 的实现原理](http://blog.leichunfeng.com/blog/2015/05/31/objective-c-autorelease-pool-implementation-principle/#jtss-tsina)\n\n内存管理一直是学习 Objective-C 的重点和难点之一，尽管现在已经是 ARC 时代了，但是了解 Objective-C 的内存管理机制仍然是十分必要的。其中，弄清楚 autorelease 的原理更是重中之重，只有理解了 autorelease 的原理，我们才算是真正了解了 Objective-C 的内存管理机制。\n\n\n\n##技术纵横\n\n###1）[Executor框架线程池任务执行全过程](http://www.infoq.com/cn/articles/executor-framework-thread-pool-task-execution-part-01)\n\nJDK 1.5后引入的Executor框架的最大优点是把任务的提交和执行解耦。要执行任务的人只需把Task描述清楚，然后提交即可。这个Task是怎么被执行的，被谁执行的，什么时候执行的，提交的人就不用关心了。本文是对这一执行过程较详细解析。\n\n###2）[重构概要图解](http://www.devtf.cn/?p=546)\n\n本文将《重构-改善既有代码的设计》一书的内容以图表的形式展示出来，方便快速复习。\n\n###3）[程序猿必看交互设计](http://blog.csdn.net/satisfied_zx/article/details/46372035)\n\n本文作者 Pasquale D'Silva 是 Elepath 的一位交互设计师兼产品设计师，在本文中，他从交互的角度阐释了优秀的设计应该具有的一些品质，或者说，优秀的产品该如何实现与用户的自然沟通。\n\n##开源函数库与工具\n\n###1）[AppIntro](https://github.com/PaoloRotolo/AppIntro)\n\n每一款App都有引导页，这个函数库能让我们快速制作出漂亮的引导页。\n\n###2）[EventBus 3 beta](http://androiddevblog.com/eventbus-3-droidcon/)\n\nEventBus 3 beta发布了，可以从Maven central上面获取到，引入了编译时注解，性能比EventBus2.4提升了3到6倍。\n\n###3）[support annotations](http://tools.android.com/tech-docs/support-annotations)\n\n自从Android support library 19.1引入新的注解包，开发者已经大量使用其中提供的元注解来发现程序bug，在刚刚更新的Android support librar 22.2中，Google又给开发者带来了13个新的注解类型。\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第五期","slug":"005","date":"2015-06-03T00:00:00.000Z","updated":"2015-07-23T08:12:00.000Z","comments":true,"path":"2015/06/03/005/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/06/03/005/","excerpt":"","text":"业界新闻1）Google I/O 2015 为 Android 开发者带来了哪些福利？今年的更新有些不给力，至少显得不够 Geek。我也不打算接着盘点一些在 Keynote 中的资讯，想必很多人在各个站点已经看过不知道多少遍了，我接下来想说的一些是关于这次 Google I/O 为 Android 开发者们带来了怎样的福利。 2）GitHub宣布开发去中心化版本GitTorrent著名的代码托管网站GitHub宣布他们正在开发一个去中心化版本GitTorren，GitTorren是一个源代码托管在 BitTorren 上的Git库。 Android开发1）MVP框架 – Ted Mosby的软件架构MVP模式是一个把view从低层模型分离出来的一种现代模式。MVP由model–view–controller (MVC)软件模式衍生而来，常用于构建UI。 2）Android的材料设计兼容库（Design Support Library）在Android Design Support Library的帮助下，我们为所有的开发者，所有2.1以上的设备，带来了一些重要的material design控件。你可以在这里面找到navigation drawer view，输入控件的悬浮标签，悬浮操作按钮，snackbar，选项卡以及将这些控件结合在一起的手势滚动框架。 3）关于Android的Data Binding技术Data Binding即数据绑定，在很多前端框架中都有应用，比如Google维护的AngularJS就支持View和Model的双向绑定。当数据更新，框架收到通知，视图可以自动更新，View和Model可以做到松耦合。 4）通过 Navigation View 创建导航抽屉随着 Google I/O 2015，新的 Android Design Support Library 也出现了。Android Design Support Library 给开发者带来了一些重要的 Material Design 组件，并且向下兼容到 Android 2.1，Navigation View就是其中之一，可用于方便地创建导航抽屉。 5）Android触摸屏事件派发机制详解与源码分析 View篇 ViewGroup篇 Activity篇 iOS开发1）JSPatch – 动态更新iOS APPJSPatch是最近业余做的项目，只需在项目中引入极小的引擎，就可以使用JavaScript调用任何Objective-C的原生接口，获得脚本语言的能力：动态更新APP，替换项目原生代码修复bug。 2）iOS如何进行动态链接iOS is often criticised for not supporting dynamic libraries. While you might agree or disagree, it is interesting to think about why it is so and how this rule is eventually enforced. 3）Xcode 6制作动态及静态Framework有没有写SDK或者要将一些常用的工具类做成Framework的经历? 你或许自己写脚本完成了这项工作，相信也有很多的人使用 iOS-Universal-Framework ，随着Xcode 6的发布，相信小伙伴们已经都知道了，Xcode 6支持做Framework了 4）如何处理iOS中照片的方向使用过iPhone或者iPad的朋友在拍照时不知是否遇到过这样的问题，将设备中的照片导出到Windows上时，经常发现导出的照片方向会有问题，要么横着，要么颠倒着，需要旋转才适合观看。 5）深入理解RunLoopRunLoop 是 iOS 和 OS X 开发中非常基础的一个概念，这篇文章将从 CFRunLoop 的源码入手，介绍 RunLoop 的概念以及底层实现原理。之后会介绍一下在 iOS 中，苹果是如何利用 RunLoop 实现自动释放池、延迟回调、触摸事件、屏幕刷新等功能的。 技术纵横1）如何提高影响力，为自己代言每个人都可以是一个品牌，对于一个程序员来说，我们的ID就是我们的品牌。而构成品牌的有多个要素: 博客 Github Weibo(or Twitter) StackOverflow(or SegmentFault, Zhihu) 等等 2）Web缓存机制系列虽然文章有点老了，但基本思想还是值得借鉴学习的。 3）白板编程浅谈——Why, What, How这篇文章来阐述为什么要进行白板编程（WHY），什么是合适的白板编程题目（WHAT），以及如何进行白板编程（HOW），从而既帮助面试者更好的准备面试，也帮助面试官更好的进行面试。 4）深入浅出Docker系列 Docker核心技术预览 Docker命令行探秘 Docker开源之路 Docker的集成测试部署之道 5）来自雅虎的网站优化加速最佳实践一系列最佳实践 开源函数库与工具1）推荐几个非常有用的Android开发工具能帮助团队提升工作效率的几个Android Studio插件和工具 2）cheesesquarechrisbanes写的Android Design library的Demo，展示了如下组件的使用方法： Collapsing Toolbar FloatingActionButton View anchoring NavigationView Snackbar 3）AndroidGradleTemplateGradle + Android Studio + Robolectric + Espresso + Mockito + EasyMock/PowerMock + JaCoCo的一个完整的模版。","raw":"title: 平安科技移动开发二队技术周报 第五期\ncategories: weekly\ndate: 2015-06-03\n---\n\n##业界新闻\n\n###1）[Google I/O 2015 为 Android 开发者带来了哪些福利？](http://www.jianshu.com/p/4f7f55471da2)\n\n今年的更新有些不给力，至少显得不够 Geek。我也不打算接着盘点一些在 Keynote 中的资讯，想必很多人在各个站点已经看过不知道多少遍了，我接下来想说的一些是关于这次 Google I/O 为 Android 开发者们带来了怎样的福利。\n\n###2）[GitHub宣布开发去中心化版本GitTorrent](http://mt.sohu.com/20150601/n414200076.shtml)\n\n著名的代码托管网站GitHub宣布他们正在开发一个去中心化版本GitTorren，GitTorren是一个源代码托管在 BitTorren 上的Git库。\n\n##Android开发\n\n###1）[MVP框架 – Ted Mosby的软件架构](http://www.devtf.cn/?p=551)\n\nMVP模式是一个把view从低层模型分离出来的一种现代模式。MVP由model–view–controller (MVC)软件模式衍生而来，常用于构建UI。\n\n###2）[Android的材料设计兼容库（Design Support Library）](http://jcodecraeer.com/a/anzhuokaifa/developer/2015/0531/2958.html)\n\n在Android Design Support Library的帮助下，我们为所有的开发者，所有2.1以上的设备，带来了一些重要的material design控件。你可以在这里面找到navigation drawer view，输入控件的悬浮标签，悬浮操作按钮，snackbar，选项卡以及将这些控件结合在一起的手势滚动框架。\n\n###3）[关于Android的Data Binding技术](http://jiajixin.cn/2015/05/31/android-data-binding/)\n\nData Binding即数据绑定，在很多前端框架中都有应用，比如Google维护的AngularJS就支持View和Model的双向绑定。当数据更新，框架收到通知，视图可以自动更新，View和Model可以做到松耦合。\n\n###4）[通过 Navigation View 创建导航抽屉](http://myihsan.farbox.com/post/use-navigation-view-to-make-navigation-drawer)\n\n随着 Google I/O 2015，新的 Android Design Support Library 也出现了。\nAndroid Design Support Library 给开发者带来了一些重要的 Material Design 组件，并且向下兼容到 Android 2.1，Navigation View就是其中之一，可用于方便地创建导航抽屉。\n\n###5）Android触摸屏事件派发机制详解与源码分析 \n\n* [View篇](http://blog.csdn.net/yanbober/article/details/45887547)\n* [ViewGroup篇](http://blog.csdn.net/yanbober/article/details/45912661)\n* [Activity篇](http://blog.csdn.net/yanbober/article/details/45932123)\n\n\n##iOS开发\n\n###1）[JSPatch – 动态更新iOS APP](http://blog.cnbang.net/works/2767/)\n\nJSPatch是最近业余做的项目，只需在项目中引入极小的引擎，就可以使用JavaScript调用任何Objective-C的原生接口，获得脚本语言的能力：动态更新APP，替换项目原生代码修复bug。\n\n###2）[iOS如何进行动态链接](http://realmacsoftware.com/blog/dynamic-linking介绍iOS如何进行动态链接)\n\niOS is often criticised for not supporting dynamic libraries. While you might agree or disagree, it is interesting to think about why it is so and how this rule is eventually enforced. \n\n###3）[Xcode 6制作动态及静态Framework](http://www.cocoachina.com/ios/20141126/10322.html)\n\n有没有写SDK或者要将一些常用的工具类做成Framework的经历? 你或许自己写脚本完成了这项工作，相信也有很多的人使用 iOS-Universal-Framework ，随着Xcode 6的发布，相信小伙伴们已经都知道了，Xcode 6支持做Framework了\n\n###4）[如何处理iOS中照片的方向](http://feihu.me/blog/2015/how-to-handle-image-orientation-on-iOS/)\n\n使用过iPhone或者iPad的朋友在拍照时不知是否遇到过这样的问题，将设备中的照片导出到Windows上时，经常发现导出的照片方向会有问题，要么横着，要么颠倒着，需要旋转才适合观看。\n\n###5）[深入理解RunLoop](http://www.cocoachina.com/ios/20150601/11970.html)\n\nRunLoop 是 iOS 和 OS X 开发中非常基础的一个概念，这篇文章将从 CFRunLoop 的源码入手，介绍 RunLoop 的概念以及底层实现原理。之后会介绍一下在 iOS 中，苹果是如何利用 RunLoop 实现自动释放池、延迟回调、触摸事件、屏幕刷新等功能的。\n\n\n\n##技术纵横\n\n###1）[如何提高影响力，为自己代言](http://www.phodal.com/blog/how-to-improve-impact/)\n\n每个人都可以是一个品牌，对于一个程序员来说，我们的ID就是我们的品牌。而构成品牌的有多个要素:\n\n* 博客\n* Github\n* Weibo(or Twitter)\n* StackOverflow(or SegmentFault, Zhihu)\n\n等等\n\n###2）[Web缓存机制系列](http://www.alloyteam.com/2012/03/web-cache-1-web-cache-overview/)\n\n虽然文章有点老了，但基本思想还是值得借鉴学习的。\n\n###3）[白板编程浅谈——Why, What, How](http://lucida.me/blog/whiteboard-coding-demystified/)\n\n这篇文章来阐述为什么要进行白板编程（WHY），什么是合适的白板编程题目（WHAT），以及如何进行白板编程（HOW），从而既帮助面试者更好的准备面试，也帮助面试官更好的进行面试。\n\n###4）深入浅出Docker系列\n* [Docker核心技术预览](http://www.infoq.com/cn/articles/docker-core-technology-preview/)\n* [Docker命令行探秘](http://www.infoq.com/cn/articles/docker-command-line-quest/)\n* [Docker开源之路](http://www.infoq.com/cn/articles/docker-open-source-road/)\n* [Docker的集成测试部署之道](http://www.infoq.com/cn/articles/docker-integrated-test-and-deployment)\n\n###5）[来自雅虎的网站优化加速最佳实践](http://blog.csdn.net/zhoudaxia/article/details/24182831)\n\n一系列最佳实践\n\n##开源函数库与工具\n\n###1）[推荐几个非常有用的Android开发工具](http://www.devtf.cn/?p=571)\n\n能帮助团队提升工作效率的几个Android Studio插件和工具\n\n###2）[cheesesquare](https://github.com/chrisbanes/cheesesquare)\n\nchrisbanes写的Android Design library的Demo，展示了如下组件的使用方法：\n\n* Collapsing Toolbar\n* FloatingActionButton\n* View anchoring\n* NavigationView\n* Snackbar\n\n###3）[AndroidGradleTemplate](https://github.com/jaredsburrows/AndroidGradleTemplate)\n\nGradle + Android Studio + Robolectric + Espresso + Mockito + EasyMock/PowerMock + JaCoCo的一个完整的模版。\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第四期","slug":"004","date":"2015-05-27T00:00:00.000Z","updated":"2015-07-23T08:11:48.000Z","comments":true,"path":"2015/05/27/004/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/05/27/004/","excerpt":"","text":"业界新闻1）Java 9将于2016年正式发布Oracle已经宣布了Java 9的时间表，其目标是在2016年9年正式发布该版本。该时间表遵循Oracle每两年发布一个新的主版本的计划，虽然与先前的版本相比，目前提出的最后期限可能存在一定的延期风险。 2）谷歌I/O 2015大会前瞻：Android M、Chromecast 2以及更多谷歌I/O大会再有几天就将与广大关注者见面，这意味着我们又该对这一年一度且总能引发业界高度关注的技术事件进行跟踪报道了。在这里，我们将一同了解谷歌总部将借此次盛会公布的所有项目。 3）苹果为啥要在iOS 9中使用新字体？在智能手表Apple Watch这款全新的产品类别上，苹果为它设计了一个全新的字体系统：旧金山字体（San Francisco）。这种字体设计看起来更加简洁干净，即使是在Apple Watch屏幕这么小的设备上，它的可读性也非常高。 Android开发1）公共技术点之面向对象六大原则（Volley）本文以剖析优秀的Android网络框架Volley为例来学习面向对象的六大基本原则，体会它们带来的强大能量。 2）Android Studio发布项目到Jcenter本文介绍了如何一步一步发布我们得开源项目到Jcenter。 3）android开发中，可能会导致内存泄露的问题在android编码中，会有一些简便的写法和编码习惯，会导致我们的代码有很多内存泄露的问题,本文做一个已知错误的总结。 4）使用Transitions API为安卓应用创建动画虽然移动应用对动画的依赖相当普遍，但在安卓系统中开发者认为创建一个动画的过程一直都是一种挑战。iOS早就提供了处理动画的实用工具，而安卓上帮助开发者提高工作效率的解决方案还相对较新。 5）腾讯手机管家实战分析：内存突增是为神马？手机管家从4.4升级到4.5后，用户数据反馈待机内存出现了2-4M左右的增长。经过代码排查及MAT分析，发现有几处代码会导致内存增长,只要将这些代码屏蔽掉一部分，内存情况就下降到正常水平。 iOS开发1）网易新闻iOS版使用的开源组件本文列举了网易新闻iOS版在开发过程中曾经使用过的第三方开源类库、组件。 2）WWDC心得与延伸:iOS图形性能这篇文章主要是学习完Advanced Graphics and Animations for iOS Apps这个session后的总结和相应细节的延伸和细化。主要内容为图形性能与测试工具这两个章节。 3）iOS项目的持续集成与管理当实现新功能时，如果忽略可维护性而引入技术债务，那将会需要延迟解决它或导致增加维护成本。最近我们已经思考通过哪些方式来提高代码的质量： 当代码的质量下降时，通过设置一些工具来马上提醒开发者 文档化一些编码规范和思考在过去的几个项目中如何避免维护性差的问题 4）iOS富文本组件的实现—DTCoreText源码解析 数据篇 渲染篇DTCoreText是个开源的iOS富文本组件，它可以解析HTML与CSS最终用CoreText绘制出来，通常用于在一些需要显示富文本的场景下代替低性能的UIWebView，来看看它是怎样解析和渲染HTML+CSS的，总体上分成两步： 数据解析—把HTML+CSS转换成NSAttributeString 渲染—用CoreText把NSAttributeString内容渲染出来，再加上图片等元素 5）【长篇高能】ReactiveCocoa 和 MVVM 入门任何一个正经开发过一阵子软件的人都熟悉MVC，它意思是Model View Controller, 是一个在复杂应用设计中组织代码的公认模式. 它也被证实在 iOS 开发中有着第二种含义: Massive View Controller(重量级视图控制器)。它让许多程序员绞尽脑汁如何去使代码被解耦和组织地让人满意. 总的来说, iOS 开发者已经得出结论: 他们需要给视图控制器瘦身, 并进一步分离事物;但该怎么做呢? 技术纵横1）Java NIO通信框架在电信领域的实践&amp;version=11020012&amp;pass_ticket=5%2FHqKfgaTD0yYz2gv%2FrYWSxpyrxdsZ%2FeOS2f9qgD2zWbzSY39BfdSAY%2B0ballkgc)本文重点介绍电信业务应用软件的技术变迁历史，以及华为电信软件架构演进和Java NIO框架在技术变迁中起到的关键作用。 2）技术团队如何招聘和管理，来看看Airbnb的经验Mike Curtis曾就职于AltaVista、AOL、Yahoo、Facebook等一系列硅谷巨头，现在是Airbnb主管工程开发的副总裁。在大公司摸爬滚打了近20年的Curtis应该对大公司的官僚作风和低效率深有体会，也很可能陷入到官僚主义的窠臼中。但实际上Curtis在Airbnb却打造了一支精简而又高效的团队，推动着整个公司的快速发展。 3）移动无线应用专项测试浅谈其实去年年底我就说过很多公司功能测试都做的差不多了，接下来就开始折腾什么性能测试啊，安全测试啊，持续集成啊，Hybrid啦等等。果不其然，最近很多测试同学开始问我性能相关的问题。当然我们专业点来讲这个叫做专项测试，那么专项测试其实也是区分什么人去做，工具组的人也在做，业务组的人也在做，只不过大家做的切入点会很不同。也许很多同学也比较好奇我毕竟也去那么多公司撕逼了，到底我平时在做什么，怎么做的。这边那就简单说下吧。 开源函数库与工具1）KRVideoPlayer36氪iOS团队开源的类似Weico的播放器，支持竖屏模式下全屏播放 2）Dribbble上面的GiftCard动画效果的简单实现","raw":"title: 平安科技移动开发二队技术周报 第四期\ncategories: weekly\ndate: 2015-05-27\n---\n\n##业界新闻\n\n###1）[Java 9将于2016年正式发布](http://www.infoq.com/cn/news/2015/05/Java-9-On-Track-For-2016)\n\nOracle已经宣布了Java 9的时间表，其目标是在2016年9年正式发布该版本。该时间表遵循Oracle每两年发布一个新的主版本的计划，虽然与先前的版本相比，目前提出的最后期限可能存在一定的延期风险。\n\n###2）[谷歌I/O 2015大会前瞻：Android M、Chromecast 2以及更多](http://mobile.51cto.com/anews-477754_all.htm)\n\n谷歌I/O大会再有几天就将与广大关注者见面，这意味着我们又该对这一年一度且总能引发业界高度关注的技术事件进行跟踪报道了。在这里，我们将一同了解谷歌总部将借此次盛会公布的所有项目。\n\n###3）[苹果为啥要在iOS 9中使用新字体？](http://www.cocoachina.com/apple/20150526/11932.html)\n\n在智能手表Apple Watch这款全新的产品类别上，苹果为它设计了一个全新的字体系统：旧金山字体（San Francisco）。这种字体设计看起来更加简洁干净，即使是在Apple Watch屏幕这么小的设备上，它的可读性也非常高。\n\n##Android开发\n\n###1）[公共技术点之面向对象六大原则（Volley）](http://www.simplecoder.cn/2015/02/20/oop-principle/)\n\n本文以剖析优秀的Android网络框架Volley为例来学习面向对象的六大基本原则，体会它们带来的强大能量。\n\n###2）[Android Studio发布项目到Jcenter](http://blog.saymagic.cn/2015/02/16/release-library-to-jcenter.html)\n\n本文介绍了如何一步一步发布我们得开源项目到Jcenter。 \n\n###3）[android开发中，可能会导致内存泄露的问题](http://spencer-dev.lofter.com/post/d7b9e_6faf120)\n\n在android编码中，会有一些简便的写法和编码习惯，会导致我们的代码有很多内存泄露的问题,本文做一个已知错误的总结。\n\n###4）[使用Transitions API为安卓应用创建动画](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0525/2925.html)\n\n虽然移动应用对动画的依赖相当普遍，但在安卓系统中开发者认为创建一个动画的过程一直都是一种挑战。iOS早就提供了处理动画的实用工具，而安卓上帮助开发者提高工作效率的解决方案还相对较新。\n\n###5）[腾讯手机管家实战分析：内存突增是为神马？](http://bugly.qq.com/blog/?p=179)\n\n手机管家从4.4升级到4.5后，用户数据反馈待机内存出现了2-4M左右的增长。经过代码排查及MAT分析，发现有几处代码会导致内存增长,只要将这些代码屏蔽掉一部分，内存情况就下降到正常水平。\n\n##iOS开发\n###1）[网易新闻iOS版使用的开源组件](http://www.jianshu.com/p/8952944f7566)\n\n本文列举了网易新闻iOS版在开发过程中曾经使用过的第三方开源类库、组件。\n\n###2）[WWDC心得与延伸:iOS图形性能](http://www.cocoachina.com/ios/20150429/11712.html)\n\n这篇文章主要是学习完Advanced Graphics and Animations for iOS Apps这个session后的总结和相应细节的延伸和细化。主要内容为图形性能与测试工具这两个章节。\n\n###3）[iOS项目的持续集成与管理](http://www.jianshu.com/p/9ae446d76271)\n\n当实现新功能时，如果忽略可维护性而引入技术债务，那将会需要延迟解决它或导致增加维护成本。最近我们已经思考通过哪些方式来提高代码的质量：\n\n* 当代码的质量下降时，通过设置一些工具来马上提醒开发者\n* 文档化一些编码规范和思考在过去的几个项目中如何避免维护性差的问题\n\n###4）iOS富文本组件的实现—DTCoreText源码解析 [数据篇](http://blog.cnbang.net/tech/2630/) [渲染篇](http://blog.cnbang.net/tech/2729/)\n\nDTCoreText是个开源的iOS富文本组件，它可以解析HTML与CSS最终用CoreText绘制出来，通常用于在一些需要显示富文本的场景下代替低性能的UIWebView，来看看它是怎样解析和渲染HTML+CSS的，总体上分成两步：\n\n* 数据解析—把HTML+CSS转换成NSAttributeString\n* 渲染—用CoreText把NSAttributeString内容渲染出来，再加上图片等元素\n\n###5）[【长篇高能】ReactiveCocoa 和 MVVM 入门](http://www.cocoachina.com/ios/20150526/11930.html)\n\n任何一个正经开发过一阵子软件的人都熟悉MVC，它意思是Model View Controller, 是一个在复杂应用设计中组织代码的公认模式. 它也被证实在 iOS 开发中有着第二种含义: Massive View Controller(重量级视图控制器)。它让许多程序员绞尽脑汁如何去使代码被解耦和组织地让人满意. 总的来说, iOS 开发者已经得出结论: 他们需要给视图控制器瘦身, 并进一步分离事物;但该怎么做呢?\n\n##技术纵横\n\n###1）[Java NIO通信框架在电信领域的实践](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=206971828&idx=1&sn=50a445b9b28c574df96fed709355add6&key=c468684b929d2be20c55e076fbb550af40988e39663d4ae8ca582a9e72a555fa4b4b9b9a42898a1301f8dacd3345790f&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.10.3+build(14D136)&version=11020012&pass_ticket=5%2FHqKfgaTD0yYz2gv%2FrYWSxpyrxdsZ%2FeOS2f9qgD2zWbzSY39BfdSAY%2B0ballkgc)\n\n本文重点介绍电信业务应用软件的技术变迁历史，以及华为电信软件架构演进和Java NIO框架在技术变迁中起到的关键作用。\n\n###2）[技术团队如何招聘和管理，来看看Airbnb的经验](http://36kr.com/p/533208.html)\n\nMike Curtis曾就职于AltaVista、AOL、Yahoo、Facebook等一系列硅谷巨头，现在是Airbnb主管工程开发的副总裁。在大公司摸爬滚打了近20年的Curtis应该对大公司的官僚作风和低效率深有体会，也很可能陷入到官僚主义的窠臼中。但实际上Curtis在Airbnb却打造了一支精简而又高效的团队，推动着整个公司的快速发展。\n\n###3）[移动无线应用专项测试浅谈](http://testerhome.com/topics/2513)\n\n其实去年年底我就说过很多公司功能测试都做的差不多了，接下来就开始折腾什么性能测试啊，安全测试啊，持续集成啊，Hybrid啦等等。果不其然，最近很多测试同学开始问我性能相关的问题。当然我们专业点来讲这个叫做专项测试，那么专项测试其实也是区分什么人去做，工具组的人也在做，业务组的人也在做，只不过大家做的切入点会很不同。也许很多同学也比较好奇我毕竟也去那么多公司撕逼了，到底我平时在做什么，怎么做的。这边那就简单说下吧。\n\n##开源函数库与工具\n\n###1）[KRVideoPlayer](https://github.com/36Kr-Mobile/KRVideoPlayer)\n\n36氪iOS团队开源的类似Weico的播放器，支持竖屏模式下全屏播放\n\n![此处输入图片的描述][1]\n\n\n###2）[Dribbble上面的GiftCard动画效果的简单实现](https://github.com/MartinRGB/GiftCard-Android)\n\n![此处输入图片的描述][2]\n\n\n  [1]: https://github.com/36Kr-Mobile/KRVideoPlayer/raw/master/kr_player.gif\n  [2]: https://github.com/MartinRGB/GiftCard-Android/blob/master/Android.gif?raw=true\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第三期","slug":"003","date":"2015-05-20T00:00:00.000Z","updated":"2015-07-23T08:11:33.000Z","comments":true,"path":"2015/05/20/003/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/05/20/003/","excerpt":"","text":"业界新闻1）关于AFNetworking 安全bug的回复AFNetworking代码维护者对文章 流行iOS网络通信库AFNetworking曝SSL漏洞 中存在的不正确的误导性描述的回应。 2）跨平台移动端开发框架NativeScript 发布正式版本NativeScript就是一款由Telerik公司提出的跨平台原生移动应用的开发框架。该项目的目的是利用单一代码库构建面向多平台的原生移动应用程序，支持iOS、Android、Windows Phone等主流的移动操作系统平台。 3）新型DDoS攻击LFA：从5月11号网易被攻击谈起对新型的DDoS攻击：Link Flooding Attack（链路洪泛攻击）的一个简单的介绍。 4）ionic 1.0.0 发布， HTML5 移动应用框架ionic正式版发布。 5）苹果新专利来了，再一次改变你使用iOS的方式Touch ID或将改变用户使用iOS的方式。 Android开发1）android中正确保存view的状态不同于Activity和Fragment状态的保存，View状态的保存更复杂一点。 2）Java注解处理器现在有很多Android库（例如ButterKnife，LoganSquare等）都是使用注解的方式来实现的，如果你对Java中的注解还没有深刻的理解，可以仔细研读下本文。 3）详解Dagger2Android知名依赖注入函数库Dagger2使用详解。 iOS开发1）行为驱动开发iOS本文使用ReactiveCocoa实现MVVM(Model-View-View Model)架构，加上一个用Objective-C实现的BDD测试框架Kiwi来进行单元测试，从而实现行为驱动开发iOS App。 2）10个大坑，当你产品上架AppStore会遇到当你的app提交到AppStore时，可能会遇到的10歌大坑，经验之谈。 3）iOS下的Mock工具－OCMockOCMock官方入门指南。 4）objc第24期－音频objc最新一期。 5）iOS 异步图片加载优化与常用开源库分析iOS平台异步网络加载优化原理及开源函数库的调研分析。 技术纵横1）浅谈JS DDoS攻击原理与防御安全知识普及。 2）Code Review最佳实践参加Code Review需要做些什么？ 开源函数库与工具1）Android酷炫实用的开源框架（UI框架）Android平台具有炫酷动画效果的一些开源函数库介绍。 2）iOS平台下比较主流炫酷的几款动画框架iOS平台具有炫酷动画效果的一些开源函数库介绍。","raw":"title: 平安科技移动开发二队技术周报 第三期\ncategories: weekly\ndate: 2015-05-20\n---\n\n##业界新闻\n\n###1）[关于AFNetworking 安全bug的回复](https://github.com/bboyfeiyu/iOS-tech-frontier/blob/master/issue-4/%E5%85%B3%E4%BA%8EAFNetworking%E5%AE%89%E5%85%A8bug%E7%9A%84%E5%9B%9E%E5%A4%8D.md)\n\nAFNetworking代码维护者对文章 [流行iOS网络通信库AFNetworking曝SSL漏洞](http://www.freebuf.com/news/65744.html?utm_source=tuicool) 中存在的不正确的误导性描述的回应。\n\n###2）[跨平台移动端开发框架NativeScript 发布正式版本](http://www.infoq.com/cn/news/2015/05/NativeScript-1-0-0)\n\nNativeScript就是一款由Telerik公司提出的跨平台原生移动应用的开发框架。该项目的目的是利用单一代码库构建面向多平台的原生移动应用程序，支持iOS、Android、Windows Phone等主流的移动操作系统平台。\n\n###3）[新型DDoS攻击LFA：从5月11号网易被攻击谈起](http://www.freebuf.com/articles/network/67107.html)\n\n对新型的DDoS攻击：Link Flooding Attack（链路洪泛攻击）的一个简单的介绍。\n\n###4）[ionic 1.0.0 发布， HTML5 移动应用框架](http://www.oschina.net/news/62375/ionic-1-0-0)\n\nionic正式版发布。\n\n###5）[苹果新专利来了，再一次改变你使用iOS的方式](http://www.zoopda.com/2955)\n\nTouch ID或将改变用户使用iOS的方式。\n\n##Android开发\n\n###1）[android中正确保存view的状态](http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0512/2870.html)\n\n不同于Activity和Fragment状态的保存，View状态的保存更复杂一点。\n\n###2）[Java注解处理器](http://www.race604.com/annotation-processing/)\n\n现在有很多Android库（例如ButterKnife，LoganSquare等）都是使用注解的方式来实现的，如果你对Java中的注解还没有深刻的理解，可以仔细研读下本文。\n\n###3）[详解Dagger2](https://github.com/bboyfeiyu/android-tech-frontier/tree/master/issue-11/%E8%AF%A6%E8%A7%A3Dagger2)\n\nAndroid知名依赖注入函数库Dagger2使用详解。\n\n\n##iOS开发\n###1）[行为驱动开发iOS](http://www.jianshu.com/p/73f9d719cee4)\n\n本文使用ReactiveCocoa实现MVVM(Model-View-View Model)架构，加上一个用Objective-C实现的BDD测试框架Kiwi来进行单元测试，从而实现行为驱动开发iOS App。\n\n###2）[10个大坑，当你产品上架AppStore会遇到](http://www.cocoachina.com/appstore/20150511/11791.html)\n\n当你的app提交到AppStore时，可能会遇到的10歌大坑，经验之谈。\n\n###3）[iOS下的Mock工具－OCMock](http://ocmock.org/tutorials/)\n\nOCMock官方入门指南。\n\n###4）[objc第24期－音频](http://www.objc.io/issue-24/editorial.html)\n\nobjc最新一期。\n\n###5）[iOS 异步图片加载优化与常用开源库分析](http://segmentfault.com/a/1190000002776279)\n\niOS平台异步网络加载优化原理及开源函数库的调研分析。\n\n\n\n##技术纵横\n\n###1）[浅谈JS DDoS攻击原理与防御](http://www.infoq.com/cn/news/2015/05/DDoS-HTTPS-SRI)\n\n安全知识普及。\n\n###2）[Code Review最佳实践](http://jimhuang.cn/?p=59)\n\n参加Code Review需要做些什么？\n\n##开源函数库与工具\n\n###1）[Android酷炫实用的开源框架（UI框架）](http://www.androidchina.net/1992.html#rd)\n\nAndroid平台具有炫酷动画效果的一些开源函数库介绍。\n\n###2）[iOS平台下比较主流炫酷的几款动画框架](https://github.com/sxyx2008/awesome-ios-animation)\n\niOS平台具有炫酷动画效果的一些开源函数库介绍。\n\n\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第二期","slug":"002","date":"2015-05-13T00:00:00.000Z","updated":"2015-07-23T07:26:53.000Z","comments":true,"path":"2015/05/13/002/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/05/13/002/","excerpt":"","text":"业界新闻1）Apple Watch产品体验报告（产品经理角度）本文从需求分析，外观感受，交互设计，功能场景，差异化等方面给出了Apple Watch的使用体验。 2）MySQL SSL/TLS连接存在安全漏洞，可遭中间人攻击继今年初爆出了openssl曝出Freak攻击漏洞之后又一类似案例。SSL/TLS一直以来被认为是保护通信安全的利器，但现在竟然成为泄露敏感信息的“后门”，这不，MySQL也中招了。 3）在Visual Studio中将Objective-C编译为C++微软对Objective-C的支持 4）Java SE 7 公共更新结束通知在 2015 年 4 月以后，Oracle 的公共下载网站上将不再发布 Java SE 7 的更新。 Android开发1）Android UI性能优化实战 识别绘制中的性能问题基于Google发布的Android性能优化典范，以实例的形式一步一步讲解UI性能的优化。 2）Android RecyclerView 使用完全解析 体验艺术般的控件RecyclerView的一个基本介绍，如果开发中你还在使用ListView的话，那么是时候使用RecyclerView来替换它了。 3）Material Design 适配 入门篇 高级篇随着Material Design的普及，很多开发人员都会面临App的MaterialDesign 适配。如果你的App不只是针对5.0以上设备的话（多数情况也必须做兼容）， 那么本系列的经验总结将会对你有所帮助。 5）Android加载不同DPI资源与内存消耗之间的关系 本文一步一步分析位于不同DPI文件夹中的资源与内存消耗之间的关系，得出结论：越是 DPI 小的文件夹内存消耗越大，因此建议根据设备配置 DPI 资源。 6）Proguard后的代码出现异常如何解决Proguard作为非常优秀的工具，让我们安装包体积变小了，代码混淆更安全了，代码裁剪优化速度更快了，但确实也埋下了一些坑，增加了我们定位崩溃时的成本。这篇文章介绍了如何在Proguard之后保留堆栈信息里面的原文件名和行号。 7）android apk 防止反编译技术系列文章 加壳技术 运行时修改Dalvik指令 加密 对抗JD-GUI 完整性校验不想辛辛苦苦编写的代码被其他人轻易的反编译，那么可以试下本系列文章介绍的相关方法。 iOS开发1） [iOS单元测试系列]单元测试框架选型iOS单元测试框架的一个调研报告，值得看一看。 2）Apple Watch 和 iPhone 通信实践从实践的角度简要分析了 iPhone 和 Watch 的通信框架WatchKit Extension。 3）CocoaPods安装和使用教程CocoaPods应该是iOS最常用最有名的类库管理工具，作为iOS程序员的我们，掌握CocoaPods的使用是必不可少的基本技能了。 4）CocoaPods建立私有仓库个人或公司在开发过程中，会积累很多可以复用的代码包，有些我们不想开源，又想像开源库一样在CocoaPods中管理它们，那么通过私有仓库来管理就很有必要。 技术纵横1）代码的印象派：写点好代码吧软件质量与代码编写的优雅程度息息相关，作者就如何实现优雅的编码风格表达了自己的见解。 2）Java 8里面lambda的最佳实践Java SE 7已经不提供公开的更新，Java 8是大势所趋，而在Java 8 里面Lambda是最火的主题，不仅仅是因为语法的改变，更重要的是带来了函数式编程的思想，我觉得优秀的程序员，有必要学习一下函数式编程的思想以开阔思路。 3）序列化和反序列化美团推荐与个性化组研发人员对序列化与反序列化的一个深度解析，无论哪个端的开发人员都能从中获得收益。 4）架构之重构的12条军规针对Uber工程主管Raffi Krikorian的提出的软件架构重构的12条规则，作者结合自己的工程实践进行了解读。 5）聊聊移动端跨平台开发的各种技术百度FEX开发人员对目前跨平台开发技术流派的一个调研总结，值得学习一下（附带脑图） 开源函数库与工具1） 在线生成iOS/Mac Autolayout Constraints的网站可视化的Autolayout Constraints代码在线生成网站，加速开发。 2）Android&amp;Java内存泄漏检测函数库leakcanary良心企业Square的又一力作，想要减少app的OOM，那么就赶紧用起来吧！ 3）Android图表库XCL-Charts很全面的一个图表库，app中需要绘制图表的话可以参考一下。 4）squidbYahoo! 开源的Android 上的 SQLite数据库工具，轻量级、高性能。","raw":"title: 平安科技移动开发二队技术周报 第二期\ncategories: weekly\ndate: 2015-05-13\n---\n\n##业界新闻\n\n###1）[Apple Watch产品体验报告（产品经理角度）](http://www.jianshu.com/p/b4e8f2cbcd6d)\n\n本文从需求分析，外观感受，交互设计，功能场景，差异化等方面给出了Apple Watch的使用体验。\n\n###2）[MySQL SSL/TLS连接存在安全漏洞，可遭中间人攻击](http://www.freebuf.com/news/66277.html)\n\n继今年初爆出了openssl曝出Freak攻击漏洞之后又一类似案例。SSL/TLS一直以来被认为是保护通信安全的利器，但现在竟然成为泄露敏感信息的“后门”，这不，MySQL也中招了。\n\n###3）[在Visual Studio中将Objective-C编译为C++](http://www.infoq.com/cn/news/2015/05/VS-Objective-C)\n\n微软对Objective-C的支持\n\n###4）[Java SE 7 公共更新结束通知](http://www.java.com/zh_CN/download/faq/java_7.xml)\n\n在 2015 年 4 月以后，Oracle 的公共下载网站上将不再发布 Java SE 7 的更新。\n\n##Android开发\n\n###1）[Android UI性能优化实战 识别绘制中的性能问题](http://blog.csdn.net/lmj623565791/article/details/45556391)\n\n基于Google发布的Android性能优化典范，以实例的形式一步一步讲解UI性能的优化。\n\n###2）[Android RecyclerView 使用完全解析 体验艺术般的控件](http://blog.csdn.net/lmj623565791/article/details/45059587)\n\nRecyclerView的一个基本介绍，如果开发中你还在使用ListView的话，那么是时候使用RecyclerView来替换它了。\n\n###3）Material Design 适配 [入门篇](http://www.cnblogs.com/ct2011/p/4493384.html) [高级篇](http://www.cnblogs.com/ct2011/p/4493439.html)\n\n随着Material Design的普及，很多开发人员都会面临App的MaterialDesign 适配。如果你的App不只是针对5.0以上设备的话（多数情况也必须做兼容）， 那么本系列的经验总结将会对你有所帮助。\n\n###5）[Android加载不同DPI资源与内存消耗之间的关系 ](http://www.tinylab.org/android-loading-a-different-relationship-between-dpi-and-memory-consumption-of-resources/)\n\n本文一步一步分析位于不同DPI文件夹中的资源与内存消耗之间的关系，得出结论：越是 DPI 小的文件夹内存消耗越大，因此建议根据设备配置 DPI 资源。\n\n###6）[Proguard后的代码出现异常如何解决](http://bugly.qq.com/blog/?p=110)\n\nProguard作为非常优秀的工具，让我们安装包体积变小了，代码混淆更安全了，代码裁剪优化速度更快了，但确实也埋下了一些坑，增加了我们定位崩溃时的成本。这篇文章介绍了如何在Proguard之后保留堆栈信息里面的原文件名和行号。\n\n###7）android apk 防止反编译技术系列文章 [加壳技术](http://my.oschina.net/u/2323218/blog/393372)     [运行时修改Dalvik指令](http://my.oschina.net/u/2323218/blog/396203)                [加密](http://my.oschina.net/u/2323218/blog/399326) [对抗JD-GUI](http://my.oschina.net/u/2323218/blog/403621) [完整性校验](http://my.oschina.net/u/2323218/blog/406860)\n\n不想辛辛苦苦编写的代码被其他人轻易的反编译，那么可以试下本系列文章介绍的相关方法。\n\n##iOS开发\n\n###1） [[iOS单元测试系列]单元测试框架选型](http://zixun.github.io/blog/2015/04/11/iosdan-yuan-ce-shi-xi-lie-dan-yuan-ce-shi-kuang-jia-xuan-xing/)\n\niOS单元测试框架的一个调研报告，值得看一看。\n\n###2）[Apple Watch 和 iPhone 通信实践](http://nilsun.github.io/iPhone-watch-communication/)\n\n从实践的角度简要分析了 iPhone 和 Watch 的通信框架WatchKit Extension。\n\n###3）[CocoaPods安装和使用教程](http://code4app.com/article/cocoapods-install-usage)\n\nCocoaPods应该是iOS最常用最有名的类库管理工具，作为iOS程序员的我们，掌握CocoaPods的使用是必不可少的基本技能了。\n\n###4）[CocoaPods建立私有仓库](http://blog.csdn.net/agdsdl/article/details/45218987#0-tsina-1-51027-397232819ff9a47a7b7e80a40613cfe1)\n\n个人或公司在开发过程中，会积累很多可以复用的代码包，有些我们不想开源，又想像开源库一样在CocoaPods中管理它们，那么通过私有仓库来管理就很有必要。\n\n##技术纵横\n\n###1）[代码的印象派：写点好代码吧](http://www.cnblogs.com/gaochundong/p/the_impressionism_of_code.html)\n\n软件质量与代码编写的优雅程度息息相关，作者就如何实现优雅的编码风格表达了自己的见解。\n\n###2）[Java 8里面lambda的最佳实践](http://my.oschina.net/benhaile/blog/408377)\n\nJava SE 7已经不提供公开的更新，Java 8是大势所趋，而在Java 8 里面Lambda是最火的主题，不仅仅是因为语法的改变，更重要的是带来了函数式编程的思想，我觉得优秀的程序员，有必要学习一下函数式编程的思想以开阔思路。\n\n###3）[序列化和反序列化](http://www.infoq.com/cn/articles/serialization-and-deserialization?utm_source=infoq&utm_medium=popular_widget&utm_content=article&utm_campaign=popular_content_list)\n\n美团推荐与个性化组研发人员对序列化与反序列化的一个深度解析，无论哪个端的开发人员都能从中获得收益。\n\n###4）[架构之重构的12条军规](http://www.infoq.com/cn/articles/architect-12-rules-complete)\n\n针对Uber工程主管Raffi Krikorian的提出的软件架构重构的12条规则，作者结合自己的工程实践进行了解读。\n\n###5）[聊聊移动端跨平台开发的各种技术](http://fex.baidu.com/blog/2015/05/cross-mobile/)\n\n百度FEX开发人员对目前跨平台开发技术流派的一个调研总结，值得学习一下（附带[脑图](http://naotu.baidu.com/viewshare.html?shareId=avi5nek9booo)）\n\n##开源函数库与工具\n\n###1） [在线生成iOS/Mac Autolayout Constraints的网站](http://constraints.icodeforlove.com/)\n\n可视化的Autolayout Constraints代码在线生成网站，加速开发。\n\n###2）[Android&Java内存泄漏检测函数库leakcanary](https://github.com/square/leakcanary)\n\n良心企业Square的又一力作，想要减少app的OOM，那么就赶紧用起来吧！\n\n###3）[Android图表库XCL-Charts](https://github.com/xcltapestry/XCL-Charts)\n\n很全面的一个图表库，app中需要绘制图表的话可以参考一下。\n\n###4）[squidb](https://github.com/yahoo/squidb)\n\nYahoo! 开源的Android 上的 SQLite数据库工具，轻量级、高性能。\n\n\n\n\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]},{"title":"平安科技移动开发二队技术周报 第一期","slug":"001","date":"2015-05-05T00:00:00.000Z","updated":"2015-07-23T07:27:25.000Z","comments":true,"path":"2015/05/05/001/","link":"","permalink":"http://PaicHyperion.gitcafe.io/2015/05/05/001/","excerpt":"","text":"业界新闻1）流行iOS网络通信库AFNetworking曝SSL漏洞AFNetworking是一款大名鼎鼎的开源网络库，能够让开发者们在iOS和OS X程序中加入网络功能。但是，这款库没有检查SSL证书是否是颁发给某个合法域名。这直接导致了任何使用了早于2.5.3版本的AFNetworking的iOS程序都存在漏洞，即使程序由SSL加密数据，黑客可以窃取和篡改数据。 2）Android 和 iOS 应用可轻松移植为 Windows 10 通用应用关于微软 Windows 10 将兼容 Android 应用的传言已经出现近一年，微软在 Build 2015 上给出了正式答案，和传言有些许不同。简而言之，Android 和 iOS 应用可移植为 Windows 10 通用应用。 3）Sky：一个基于 Dart 的高性能移动应用 UI 框架除游戏之外的Android应用通常使用Java语言来开发，而谷歌内部的一个团队正在探索全新的应用开发方式。他们利用了谷歌自主的网页开发语言Dart来开发Android应用。这帮助他们专注于速度，并可以与网页进行深度整合。 4）Google提议使用Jsonnet来增强JSONGoogle开源了一门配置语言Jsonnet来取代JSON，它完全向后兼容并加入了一些新特性：注释、引用、算术运算、条件操作符，数组和对象内含，引入，函数，局部变量，继承等。Jsonnet程序被翻译为兼容JSON的数据格式。 Android开发1）Android Studio入门指南总结的比较全面的适用于国内开发者的Android Studio安装和基本使用教程，献给终于想从Eclipse＋Ant转向Android Studio＋Gradle的开发者们。 2） Gradle插件用户指南/)Android Studio中使用Gradle的简单快速入门教程，推荐刚从Eclipse＋Ant开发模式转到Android Studio＋Gradle开发模式的同学们看一看。 3）常见Android Native崩溃及错误原因Android NDK开发中常见的Native Crash原因分析 4）Android性能优化典范系列 第一季 第二季Google发布的系列短视频教程，这两篇文章是对其的总结，第一季主要讨论Android的渲染机制，内存与GC，电量优化，第二季包含的内容电量优化，网络优化，Wear上如何做优化，使用对象池来提高效率，LRU Cache，Bitmap的缩放，缓存，重用，PNG压缩，自定义View的性能，提升设置alpha之后View的渲染性能，以及Lint，StictMode等等工具的使用技巧。 5）Instagram是如何提升TextView渲染性能的在Android中，文本的渲染是很慢的。即使在一个像Nexus 5这样的新设备上，一段有十几行复杂文本的图片说明的初始绘制时间可能会达到50ms，而其文本的measure阶段就需要30ms。这些都发生在UI线程，在滚动时会导致app跳帧。 6）Android中判断app何时启动和关闭的技术研究Android开发中不可避免的会遇到需要检查app何时进入前台，何时被用户关闭。奇怪的是，要达到这个目的并不容易。检查app第一次启动并不难，但要判断它何时重新打开和关闭就没有那么简单了。 7）如何检查 Android 应用的内存使用情况Android是为移动设备而设计的，所以应该关注应用的内存使用情况。尽管Android的Dalvik虚拟机会定期执行垃圾回收操作，但这也不意味着就可以忽视应用在何时何处进行内存分配和释放。为了提供良好的用户体验，做到系统在不同应用间流畅切换，当用户和应用无交互时，避免应用不必要的内存消耗是很重要的。 iOS开发1） Objective-C 拾遗：从Heap and Stack到Block语言基础知识的再探索 2）携程App的网络性能优化实践携程无线开发总监陈浩然在QCon全球软件开发大会（北京站）上的演讲，总结了携程在App网络性能优化方面的一些实践经验。 3）iOS应用架构谈系列 开篇 view层的组织和调用方案安居客iOS app开发者的iOS架构经验分享，目前出了两篇文章。 4）iOS图形性能进阶与测试这篇文章主要是学习完Advanced Graphics and Animations for iOS Apps这个session后的总结和相应细节的延伸和细化。主要内容为图形性能与测试工具两个章节。 5）View Debugging in Xcode6我们在开发app的时候经常会遇到一些在代码中难以发现的view中的bug或者自动布局约束。这时候，掌握view调试的技巧就显得很重要—但是在Xcode6出现之前，调试view从未如此简单。 开源函数库与工具1） Mac上面一款实用的Android工具使用Mac开发的筒靴可以安装一个，这款简便小工具一键实现如下功能： 手机截屏 手机视频录制 轻松安装APK 运行自定义脚本 2）adb-idea一个Android Studio和Intellij IDEA插件，用于加速日常Android的开发，主要提供的功能有： 卸载app 杀掉app 启动app 重新启动app 清除app数据 清除app数据并重新启动 3）QCon2015的嘉宾演讲资料刚刚结束的QCon 2015的嘉宾演讲资料汇总，感兴趣的筒靴们可以翻阅一下。 4）Cmd Markdown客户端作业部落的Markdown编辑器全平台（Windows/Mac/Linux/浏览器）客户端发布，很好用的一款MarkDown编辑器，支持作业部落的云端同步和发布。","raw":"title: 平安科技移动开发二队技术周报 第一期\ncategories: weekly\ndate: 2015-05-05\n---\n\n##业界新闻\n\n###1）[流行iOS网络通信库AFNetworking曝SSL漏洞](http://www.freebuf.com/news/65744.html?utm_source=tuicool)\n\nAFNetworking是一款大名鼎鼎的开源网络库，能够让开发者们在iOS和OS X程序中加入网络功能。但是，这款库没有检查SSL证书是否是颁发给某个合法域名。这直接导致了任何使用了早于2.5.3版本的AFNetworking的iOS程序都存在漏洞，即使程序由SSL加密数据，黑客可以窃取和篡改数据。\n\n###2）[Android 和 iOS 应用可轻松移植为 Windows 10 通用应用](http://livesino.net/archives/8402.live?)\n\n关于微软 Windows 10 将兼容 Android 应用的传言已经出现近一年，微软在 Build 2015 上给出了正式答案，和传言有些许不同。简而言之，Android 和 iOS 应用可移植为 Windows 10 通用应用。\n\n###3）[Sky：一个基于 Dart 的高性能移动应用 UI 框架](http://android.jobbole.com/80930/)\n\n除游戏之外的Android应用通常使用Java语言来开发，而谷歌内部的一个团队正在探索全新的应用开发方式。他们利用了谷歌自主的网页开发语言Dart来开发Android应用。这帮助他们专注于速度，并可以与网页进行深度整合。\n\n###4）[Google提议使用Jsonnet来增强JSON](http://www.infoq.com/cn/news/2015/04/jsonnet?utm_source=infoq&utm_medium=popular_widget&utm_content=article&utm_campaign=popular_content_list)\n\nGoogle开源了一门配置语言Jsonnet来取代JSON，它完全向后兼容并加入了一些新特性：注释、引用、算术运算、条件操作符，数组和对象内含，引入，函数，局部变量，继承等。Jsonnet程序被翻译为兼容JSON的数据格式。\n\n##Android开发\n\n###1）[Android Studio入门指南](http://www.jianshu.com/p/36cfa1614d23)\n\n总结的比较全面的适用于国内开发者的Android Studio安装和基本使用教程，献给终于想从Eclipse＋Ant转向Android Studio＋Gradle的开发者们。\n\n###2） [Gradle插件用户指南](http://rinvay.github.io/android/2015/03/26/Gradle-Plugin-User-Guide(Translation)/)\n\nAndroid Studio中使用Gradle的简单快速入门教程，推荐刚从Eclipse＋Ant开发模式转到Android Studio＋Gradle开发模式的同学们看一看。\n\n###3）[常见Android Native崩溃及错误原因](http://www.droidsec.cn/%E5%B8%B8%E8%A7%81android-native%E5%B4%A9%E6%BA%83%E5%8F%8A%E9%94%99%E8%AF%AF%E5%8E%9F%E5%9B%A0/)\n\nAndroid NDK开发中常见的Native Crash原因分析\n\n###4）Android性能优化典范系列 [第一季](http://hukai.me/android-performance-patterns/) [第二季](http://hukai.me/android-performance-patterns-season-2/)\n\nGoogle发布的系列短视频教程，这两篇文章是对其的总结，第一季主要讨论Android的渲染机制，内存与GC，电量优化，第二季包含的内容电量优化，网络优化，Wear上如何做优化，使用对象池来提高效率，LRU Cache，Bitmap的缩放，缓存，重用，PNG压缩，自定义View的性能，提升设置alpha之后View的渲染性能，以及Lint，StictMode等等工具的使用技巧。\n\n###5）[Instagram是如何提升TextView渲染性能的](http://codethink.me/2015/04/23/improving-comment-rendering-on-android/)\n\n在Android中，文本的渲染是很慢的。即使在一个像Nexus 5这样的新设备上，一段有十几行复杂文本的图片说明的初始绘制时间可能会达到50ms，而其文本的measure阶段就需要30ms。这些都发生在UI线程，在滚动时会导致app跳帧。\n\n###6）[Android中判断app何时启动和关闭的技术研究](http://asce1885.gitbooks.io/android-rd-senior-advanced/content/androidzhong_pan_duan_app_he_shi_qi_dong_he_guan_bi_de_ji_zhu_yan_jiu.html)\n\nAndroid开发中不可避免的会遇到需要检查app何时进入前台，何时被用户关闭。奇怪的是，要达到这个目的并不容易。检查app第一次启动并不难，但要判断它何时重新打开和关闭就没有那么简单了。\n\n###7）[如何检查 Android 应用的内存使用情况](http://android.jobbole.com/80926/)\n\nAndroid是为移动设备而设计的，所以应该关注应用的内存使用情况。尽管Android的Dalvik虚拟机会定期执行垃圾回收操作，但这也不意味着就可以忽视应用在何时何处进行内存分配和释放。为了提供良好的用户体验，做到系统在不同应用间流畅切换，当用户和应用无交互时，避免应用不必要的内存消耗是很重要的。\n\n##iOS开发\n\n###1） [Objective-C 拾遗：从Heap and Stack到Block](https://github.com/100mango/zen/blob/master/Objective-C%20%E6%8B%BE%E9%81%97%EF%BC%9A%E4%BB%8EHeap%20and%20Stack%E5%88%B0Block%20/Objective-C%20%E6%8B%BE%E9%81%97%EF%BC%9A%E4%BB%8EHeap%20and%20Stack%E5%88%B0Block%20.md)\n\n语言基础知识的再探索\n\n###2）[携程App的网络性能优化实践](http://www.infoq.com/cn/articles/how-ctrip-improves-app-networking-performance)\n\n携程无线开发总监陈浩然在QCon全球软件开发大会（北京站）上的演讲，总结了携程在App网络性能优化方面的一些实践经验。\n\n###3）iOS应用架构谈系列 [开篇](http://casatwy.com/iosying-yong-jia-gou-tan-kai-pian.html) [view层的组织和调用方案](http://casatwy.com/iosying-yong-jia-gou-tan-viewceng-de-zu-zhi-he-diao-yong-fang-an.html)\n\n安居客iOS app开发者的iOS架构经验分享，目前出了两篇文章。\n\n###4）[iOS图形性能进阶与测试](https://github.com/100mango/zen/blob/master/WWDC%E5%BF%83%E5%BE%97%EF%BC%9AAdvanced%20Graphics%20and%20Animations%20for%20iOS%20Apps/Advanced%20Graphics%20and%20Animations%20for%20iOS%20Apps.md)\n\n这篇文章主要是学习完Advanced Graphics and Animations for iOS Apps这个session后的总结和相应细节的延伸和细化。主要内容为图形性能与测试工具两个章节。\n\n###5）[View Debugging in Xcode6](https://github.com/bboyfeiyu/iOS-tech-frontier/blob/master/issue-1/View-Debugging-in-Xcode-6.md)\n\n我们在开发app的时候经常会遇到一些在代码中难以发现的view中的bug或者自动布局约束。这时候，掌握view调试的技巧就显得很重要—但是在Xcode6出现之前，调试view从未如此简单。\n\n##开源函数库与工具\n\n###1） [Mac上面一款实用的Android工具](https://github.com/mortenjust/androidtool-mac)\n\n使用Mac开发的筒靴可以安装一个，这款简便小工具一键实现如下功能：\n1. 手机截屏\n2. 手机视频录制\n3. 轻松安装APK\n4. 运行自定义脚本\n\n###2）[adb-idea](https://github.com/pbreault/adb-idea?utm_source=www.race604.com)\n\n一个Android Studio和Intellij IDEA插件，用于加速日常Android的开发，主要提供的功能有：\n\n1. 卸载app\n2. 杀掉app\n3. 启动app\n4. 重新启动app\n5. 清除app数据\n6. 清除app数据并重新启动\n\n###3）[QCon2015的嘉宾演讲资料](http://yun.baidu.com/share/home?uk=387674681&view=share#category/type=0)\n\n刚刚结束的QCon 2015的嘉宾演讲资料汇总，感兴趣的筒靴们可以翻阅一下。\n\n###4）[Cmd Markdown客户端](https://www.zybuluo.com/ghosert/note/90884)\n作业部落的Markdown编辑器全平台（Windows/Mac/Linux/浏览器）客户端发布，很好用的一款MarkDown编辑器，支持作业部落的云端同步和发布。\n\n","content":null,"categories":[{"name":"weekly","slug":"weekly","permalink":"http://PaicHyperion.gitcafe.io/categories/weekly/"}],"tags":[]}]}